<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>JavaScript-预编译</title>
      <link href="/2021/05/20/pre-compilation/"/>
      <url>/2021/05/20/pre-compilation/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="什么是预编译？"><a href="#什么是预编译？" class="headerlink" title="什么是预编译？"></a>什么是预编译？</h1><p>预编译发生在函数作用域创建的阶段在函数执行之前。</p><ol><li>创建AO对象（Active Object）</li><li>查找函数形参以及函数内部的变量声明，形参名及变量名作为AO对象的属性，值为 undefined</li><li>实参和形参相统一，实参值赋给形参</li><li>查找函数声明，函数名作为AO对象的属性，如果函数名称和变量名称相同时会覆盖变量声明</li></ol><p>函数、形参、变量的优先级别：<br>函数 &gt; 形参 &gt; 变量</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fn</span>(<span class="hljs-params">a</span>)</span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-built_in">console</span>.log(a,<span class="hljs-number">1</span>);  <span class="hljs-comment">// ƒ a () &#123;&#125; 1</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">var</span> a = <span class="hljs-number">2222</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-built_in">console</span>.log(a,<span class="hljs-number">2</span>); <span class="hljs-comment">// 2222 2</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">a</span> (<span class="hljs-params"></span>) </span>&#123;&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-built_in">console</span>.log(a,<span class="hljs-number">3</span>); <span class="hljs-comment">// 2222 3</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">fn(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>)</code></pre></td></tr></table></figure><h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fn</span>(<span class="hljs-params">a, c</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-built_in">console</span>.log(a);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">var</span> a = <span class="hljs-number">123</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-built_in">console</span>.log(a);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-built_in">console</span>.log(c);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">a</span>(<span class="hljs-params"></span>) </span>&#123; &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">if</span> (<span class="hljs-literal">false</span>) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">        <span class="hljs-keyword">var</span> d = <span class="hljs-number">678</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-built_in">console</span>.log(d);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-built_in">console</span>.log(b);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">var</span> b = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123; &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-built_in">console</span>.log(b);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">c</span>(<span class="hljs-params"></span>) </span>&#123; &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-built_in">console</span>.log(c);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs javascript">fn(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>)</code></pre></td></tr></table></figure><p>第一阶段：创建 AO 对象，查找函数形参以及函数内部的变量声明,实参和形参相统一，如果没有传递实参，那么值为 undefined</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">AO :</span> <span class="hljs-string">&#123;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs yaml">    <span class="hljs-attr">a :</span> <span class="hljs-string">undefined</span> <span class="hljs-string">-&gt;</span> <span class="hljs-number">1</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs yaml">    <span class="hljs-attr">c :</span> <span class="hljs-string">undefined</span> <span class="hljs-string">-&gt;</span> <span class="hljs-number">2</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs yaml">    <span class="hljs-attr">b :</span> <span class="hljs-string">undefined</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs yaml">    <span class="hljs-attr">d :</span> <span class="hljs-string">undefined</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">&#125;</span></code></pre></td></tr></table></figure><p>第二阶段：查找函数声明</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs actionscript">AO : &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs actionscript">    a : <span class="hljs-literal">undefined</span> -&gt; <span class="hljs-number">1</span> -&gt; <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">a</span><span class="hljs-params">()</span> </span>&#123; &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs actionscript">    c : <span class="hljs-literal">undefined</span> -&gt; <span class="hljs-number">2</span> -&gt; <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">c</span><span class="hljs-params">()</span> </span>&#123; &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs actionscript">    b : <span class="hljs-literal">undefined</span> -&gt; <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">()</span> </span>&#123; &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs actionscript">    d : <span class="hljs-literal">undefined</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs actionscript">&#125;</code></pre></td></tr></table></figure><p>执行代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fn</span>(<span class="hljs-params">a, c</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-built_in">console</span>.log(a); <span class="hljs-comment">// function a() &#123; &#125;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">var</span> a = <span class="hljs-number">123</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-built_in">console</span>.log(a); <span class="hljs-comment">// 123</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-built_in">console</span>.log(c); <span class="hljs-comment">// function c() &#123; &#125;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">a</span>(<span class="hljs-params"></span>) </span>&#123; &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">if</span> (<span class="hljs-literal">false</span>) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">        <span class="hljs-keyword">var</span> d = <span class="hljs-number">678</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-built_in">console</span>.log(d); <span class="hljs-comment">// undefined</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-built_in">console</span>.log(b); <span class="hljs-comment">// undefined</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">var</span> b = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123; &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-built_in">console</span>.log(b);  <span class="hljs-comment">// function () &#123; &#125;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">c</span>(<span class="hljs-params"></span>) </span>&#123; &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-built_in">console</span>.log(c); <span class="hljs-comment">// function c() &#123; &#125;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs javascript">fn(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>)</code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript中精度问题以及解决方案</title>
      <link href="/2021/05/19/JavaScript%E4%B8%AD%E7%B2%BE%E5%BA%A6%E9%97%AE%E9%A2%98%E4%BB%A5%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
      <url>/2021/05/19/JavaScript%E4%B8%AD%E7%B2%BE%E5%BA%A6%E9%97%AE%E9%A2%98%E4%BB%A5%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>JavaScript 中使用的是 64 位双精度浮点数来存储数字。可以表示的数字的绝对值范围大约是：-1.79E+308 ~ +1.79E+308。超出这个范围的数就不一定能准确表示，就会产生精度问题。而计算机计算时是二进制，技术完成转换为十进制就超出了范围。</p><h1 id="JavaScript中精度丢失的经典问题"><a href="#JavaScript中精度丢失的经典问题" class="headerlink" title="JavaScript中精度丢失的经典问题"></a>JavaScript中精度丢失的经典问题</h1><p>浮点精度<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-number">0.1</span>+<span class="hljs-number">0.2</span> === <span class="hljs-number">0.3</span>  <span class="hljs-comment">// false</span></code></pre></td></tr></table></figure></p><p>大数精度<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-number">9999999999999999</span> == <span class="hljs-number">10000000000000001</span></code></pre></td></tr></table></figure></p><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>将浮点数乘以10^n使其成为整数,计算后再将结果除以10^n,n为他们之中最大的小数位。比如0.1 + 0.2，可以转化为(0.1<em>10+0.2</em>10)/10。不过如果小数位太多可能造成大数精度问题，不过一般不会用到超大整数。这里只针对一般类似电商使用的小金额。</p>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Function </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BFC</title>
      <link href="/2020/12/22/BFC/"/>
      <url>/2020/12/22/BFC/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="BFC是什么？"><a href="#BFC是什么？" class="headerlink" title="BFC是什么？"></a>BFC是什么？</h2><p><code>块格式化上下文（Block Formatting Context，BFC）</code>,是块盒子的布局过程发生的区域，也是浮动元素与其他元素交互的区域。呃，完全无法理解。简单来说就是<code>BFC</code>内部元素变化不会影响外部元素。</p><p>触发<code>BFC</code>的常见情况有如下:</p><ul><li><code>float</code> 的值不为 <code>none</code></li><li><code>overflow</code> 的值为 <code>auto</code>、<code>scroll</code>、<code>hidden</code></li><li><code>display</code> 的值为 <code>table-cell</code>、<code>table-caption</code>、<code>inline-block</code></li><li><code>position</code> 的值为<code>absolute</code>或<code>fixed</code></li></ul><h2 id="BFC-布局特性"><a href="#BFC-布局特性" class="headerlink" title="BFC 布局特性"></a>BFC 布局特性</h2><ul><li>内部的Box会在垂直方向，一个接一个地放置。</li><li>Box垂直方向的距离由margin决定。属于同一个BFC的两个相邻Box的margin会发生重叠。</li><li>每个盒子（块盒与行盒）的margin box的左边，与包含块border box的左边相接触(对于从左往右的格式化，否则相反)。即使存在浮动也是如此。</li><li>BFC的区域不会与float box重叠。</li><li>BFC就是页面上的一个隔离的独立容器，容器里面的子元素不会影响到外面的元素。反之也如此。</li><li>计算BFC的高度时，浮动元素也参与计算。</li></ul><h2 id="外边距折叠"><a href="#外边距折叠" class="headerlink" title="外边距折叠"></a>外边距折叠</h2><p><a href="https://codepen.io/chiangbo/pen/xxELvZP" target="_blank" rel="noopener">在线示例</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css"></span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-selector-class">.child</span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs html">    <span class="hljs-attribute">width</span>:<span class="hljs-number">100px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs html">    <span class="hljs-attribute">height</span>:<span class="hljs-number">100px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs html">    <span class="hljs-attribute">background</span>:red;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs html">    <span class="hljs-attribute">margin</span>:<span class="hljs-number">100px</span> <span class="hljs-number">0</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs html">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"child"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"child"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span></code></pre></td></tr></table></figure><p>从示例中发现，两个<code>div</code>发生了重叠导致它们的交接边距只有<code>100px</code>,而不是<code>200px</code>。是因为它们在同一个<code>BFC`` body</code> 下面。<br>要解决这个问题，只需要将它们放在不同的<code>BFC</code>下。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css"></span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-selector-class">.box</span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs html">  <span class="hljs-attribute">overflow</span>:hidden;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs html">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs html"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-selector-class">.child</span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs html">    <span class="hljs-attribute">width</span>:<span class="hljs-number">100px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs html">    <span class="hljs-attribute">height</span>:<span class="hljs-number">100px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs html">    <span class="hljs-attribute">background</span>:red;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs html">    <span class="hljs-attribute">margin</span>:<span class="hljs-number">100px</span> <span class="hljs-number">0</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs html">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"box"</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs html">  <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"child"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"child"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span></code></pre></td></tr></table></figure><h2 id="清除浮动"><a href="#清除浮动" class="headerlink" title="清除浮动"></a>清除浮动</h2><p><a href="https://codepen.io/chiangbo/pen/NWRvQpP" target="_blank" rel="noopener">在线示例</a></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.box</span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs css">  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#000</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs css">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs css"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.child</span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs css">  <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs css">  <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs css">  <span class="hljs-attribute">background</span>: <span class="hljs-number">#eee</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs css">  <span class="hljs-attribute">float</span>: left;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs css">&#125;</code></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"box"</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs html">    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"child"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></td></tr></table></figure><p>因为元素浮动导致<code>box</code>容器只剩下<code>2px</code>的<code>border</code>宽度,如果使触发容器的 BFC，那么容器将会包裹着浮动元素。</p><p>然后我们给<code>box</code>添加<code>overflow:hidden;</code>,此时<code>box</code>高度变成<code>102px</code>。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.box</span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs css">  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#000</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs css">  <span class="hljs-attribute">overflow</span>:hidden;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs css">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs css"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.child</span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs css">  <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs css">  <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs css">  <span class="hljs-attribute">background</span>: <span class="hljs-number">#eee</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs css">  <span class="hljs-attribute">float</span>: left;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs css">&#125;</code></pre></td></tr></table></figure><h2 id="阻止元素被浮动元素覆盖"><a href="#阻止元素被浮动元素覆盖" class="headerlink" title="阻止元素被浮动元素覆盖"></a>阻止元素被浮动元素覆盖</h2><p><a href="https://codepen.io/chiangbo/pen/NWRvQpP" target="_blank" rel="noopener">在线示例</a></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.box</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">background-color</span>: <span class="hljs-built_in">rgb</span>(224, 206, 247);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">border</span>: <span class="hljs-number">5px</span> solid rebeccapurple;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs css">  <span class="hljs-attribute">width</span>:<span class="hljs-number">400px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs css">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs css"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.float</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">float</span>: left;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">background-color</span>: white;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">border</span>:<span class="hljs-number">1px</span> solid black;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs css">&#125;</code></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"box"</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs html">    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"float"</span>&gt;</span>I am a floated box!<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs html">    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>I am content inside the container.I am content inside the container.I am content inside the container.I am content inside the container.I am content inside the container.I am content inside the container.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></td></tr></table></figure><p>示例中，其实这里<code>p</code>标签有部分被覆盖了，但是文本信息不会被覆盖所以出现了文字环绕的效果。<br>然后我们给<code>p</code>标签加上<code>overflow:hidden;</code>来触发<code>BFC</code>,就实现了实现两列自适应布局。但是这里文本离浮动元素太近了，我们想要点距离。如果直接给<code>p</code>标间<code>margin-left</code>,要超过浮动元素的宽度间距才有效果。所以这里可以给浮动元素添加<code>margin</code>或者<code>p</code>标签添加<code>padding</code>来控制间距。</p>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> BFC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue自定义指令</title>
      <link href="/2020/12/19/Vue%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4/"/>
      <url>/2020/12/19/Vue%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>除了核心功能默认内置的指令 (v-model 和 v-show)，Vue 也允许注册自定义指令。</p><h2 id="自动注册指令"><a href="#自动注册指令" class="headerlink" title="自动注册指令"></a>自动注册指令</h2><p>新建 <code>directives/index.js</code>文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> copy <span class="hljs-keyword">from</span> <span class="hljs-string">'./copy'</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> longpress <span class="hljs-keyword">from</span> <span class="hljs-string">'./longpress'</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> permission <span class="hljs-keyword">from</span> <span class="hljs-string">'./permission'</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> debounce <span class="hljs-keyword">from</span> <span class="hljs-string">'./debounce'</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> emoji <span class="hljs-keyword">from</span> <span class="hljs-string">'./emoji'</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> LazyLoad <span class="hljs-keyword">from</span> <span class="hljs-string">'./LazyLoad'</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> waterMarker <span class="hljs-keyword">from</span> <span class="hljs-string">'./waterMarker'</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> draggable <span class="hljs-keyword">from</span> <span class="hljs-string">'./draggable'</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 自定义指令</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> directives = &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript">    copy,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs javascript">    longpress,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs javascript">    permission,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs javascript">    debounce,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs javascript">    emoji,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs javascript">    LazyLoad,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs javascript">    waterMarker,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs javascript">    draggable</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><code class="hljs javascript">    install(Vue) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><code class="hljs javascript">        <span class="hljs-built_in">Object</span>.keys(directives).forEach(<span class="hljs-function">(<span class="hljs-params">key</span>) =&gt;</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><code class="hljs javascript">            Vue.directive(key, directives[key])</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><code class="hljs javascript">        &#125;)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><code class="hljs javascript">    &#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr></table></figure><p>在 <code>main.js</code> 文件引入</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">'vue'</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> directives <span class="hljs-keyword">from</span> <span class="hljs-string">'@/directives'</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">Vue.use(directives)</code></pre></td></tr></table></figure><h2 id="指令列表"><a href="#指令列表" class="headerlink" title="指令列表"></a>指令列表</h2><ul><li>复制粘贴指令 <code>v-copy</code></li><li>长按指令 <code>v-longpress</code></li><li>输入框防抖指令 <code>v-debounce</code></li><li>禁止表情及特殊字符 <code>v-emoji</code></li><li>图片懒加载 <code>v-LazyLoad</code></li><li>权限校验指令 <code>v-premission</code></li><li>实现页面水印 <code>v-waterMarker</code></li><li>拖拽指令 <code>v-draggable</code></li></ul><h2 id="v-copy"><a href="#v-copy" class="headerlink" title="v-copy"></a>v-copy</h2><p>实现一键复制文本内容，用于鼠标右键粘贴。</p><ol><li>动态创建 textarea 标签，并设置 readOnly 属性及移出可视区域</li><li>将要复制的值赋给 textarea 标签的 value 属性，并插入到 body</li><li>选中值 textarea 并复制</li><li>将 body 中插入的 textarea 移除</li><li>在第一次调用时绑定事件，在解绑时移除事件</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> copy = &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  bind(el, &#123; value &#125;) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">    el.$value = value</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">    el.handler = <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-keyword">if</span> (!el.$value) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">        <span class="hljs-comment">// 值为空的时候，给出提示。可根据项目UI仔细设计</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'无复制内容'</span>)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">        <span class="hljs-keyword">return</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript">      &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-comment">// 动态创建 textarea 标签</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-keyword">const</span> textarea = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">'textarea'</span>)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-comment">// 将该 textarea 设为 readonly 防止 iOS 下自动唤起键盘，同时将 textarea 移出可视区域</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs javascript">      textarea.readOnly = <span class="hljs-string">'readonly'</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs javascript">      textarea.style.position = <span class="hljs-string">'absolute'</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs javascript">      textarea.style.left = <span class="hljs-string">'-9999px'</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-comment">// 将要 copy 的值赋给 textarea 标签的 value 属性</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs javascript">      textarea.value = el.$value</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-comment">// 将 textarea 插入到 body 中</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-built_in">document</span>.body.appendChild(textarea)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-comment">// 选中值并复制</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><code class="hljs javascript">      textarea.select()</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-keyword">const</span> result = <span class="hljs-built_in">document</span>.execCommand(<span class="hljs-string">'Copy'</span>)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-keyword">if</span> (result) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><code class="hljs javascript">        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'复制成功'</span>) <span class="hljs-comment">// 可根据项目UI仔细设计</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><code class="hljs javascript">      &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-built_in">document</span>.body.removeChild(textarea)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><code class="hljs javascript">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-comment">// 绑定点击事件，就是所谓的一键 copy 啦</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><code class="hljs javascript">    el.addEventListener(<span class="hljs-string">'click'</span>, el.handler)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-comment">// 当传进来的值更新的时候触发</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><code class="hljs javascript">  componentUpdated(el, &#123; value &#125;) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><code class="hljs javascript">    el.$value = value</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-comment">// 指令与元素解绑的时候，移除事件绑定</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><code class="hljs javascript">  unbind(el) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><code class="hljs javascript">    el.removeEventListener(<span class="hljs-string">'click'</span>, el.handler)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> copy</code></pre></td></tr></table></figure><p>使用：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs vue">  &lt;button v-copy&#x3D;&quot;copyText&quot;&gt;复制&lt;&#x2F;button&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;&#x2F;template&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;script&gt; </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs vue">export default &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs vue">    data() &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs vue">      return &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs vue">        copyText: &#39;a copy directives&#39;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs vue">      &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs vue">    &#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs vue">&#125; </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;&#x2F;script&gt;</code></pre></td></tr></table></figure></p><h2 id="v-longpress"><a href="#v-longpress" class="headerlink" title="v-longpress"></a>v-longpress</h2><p>实现长按，用户需要按下并按住按钮几秒钟，触发相应的事件</p><ol><li>创建一个计时器， 2 秒后执行函数</li><li>当用户按下按钮时触发 mousedown 事件，启动计时器；用户松开按钮时调用 mouseout 事件。</li><li>如果 mouseup 事件 2 秒内被触发，就清除计时器，当作一个普通的点击事件</li><li>如果计时器没有在 2 秒内清除，则判定为一次长按，可以执行关联的函数。</li><li><p>在移动端要考虑 touchstart，touchend 事件 </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> longpress = &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">bind</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">el, binding, vNode</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> binding.value !== <span class="hljs-string">'function'</span>) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-keyword">throw</span> <span class="hljs-string">'callback must be a function'</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-comment">// 定义变量</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">let</span> pressTimer = <span class="hljs-literal">null</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-comment">// 创建计时器（ 2秒后执行函数 ）</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">let</span> start = <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-keyword">if</span> (e.type === <span class="hljs-string">'click'</span> &amp;&amp; e.button !== <span class="hljs-number">0</span>) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript">        <span class="hljs-keyword">return</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs javascript">      &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-keyword">if</span> (pressTimer === <span class="hljs-literal">null</span>) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs javascript">        pressTimer = setTimeout(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs javascript">          handler()</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs javascript">        &#125;, <span class="hljs-number">2000</span>)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs javascript">      &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs javascript">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-comment">// 取消计时器</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">let</span> cancel = <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-keyword">if</span> (pressTimer !== <span class="hljs-literal">null</span>) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><code class="hljs javascript">        clearTimeout(pressTimer)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><code class="hljs javascript">        pressTimer = <span class="hljs-literal">null</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><code class="hljs javascript">      &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><code class="hljs javascript">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-comment">// 运行函数</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">const</span> handler = <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><code class="hljs javascript">      binding.value(e)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><code class="hljs javascript">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-comment">// 添加事件监听器</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><code class="hljs javascript">    el.addEventListener(<span class="hljs-string">'mousedown'</span>, start)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><code class="hljs javascript">    el.addEventListener(<span class="hljs-string">'touchstart'</span>, start)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-comment">// 取消计时器</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><code class="hljs javascript">    el.addEventListener(<span class="hljs-string">'click'</span>, cancel)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><code class="hljs javascript">    el.addEventListener(<span class="hljs-string">'mouseout'</span>, cancel)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><code class="hljs javascript">    el.addEventListener(<span class="hljs-string">'touchend'</span>, cancel)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><code class="hljs javascript">    el.addEventListener(<span class="hljs-string">'touchcancel'</span>, cancel)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-comment">// 当传进来的值更新的时候触发</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><code class="hljs javascript">  componentUpdated(el, &#123; value &#125;) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><code class="hljs javascript">    el.$value = value</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-comment">// 指令与元素解绑的时候，移除事件绑定</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><code class="hljs javascript">  unbind(el) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><code class="hljs javascript">    el.removeEventListener(<span class="hljs-string">'click'</span>, el.handler)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> longpress</code></pre></td></tr></table></figure></li></ol><p>使用：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs vue">  &lt;button v-longpress&#x3D;&quot;longpress&quot;&gt;长按&lt;&#x2F;button&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;&#x2F;template&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs vue"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;script&gt; </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs vue">export default &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs vue">  methods: &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs vue">    longpress () &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs vue">      alert(&#39;长按指令生效&#39;)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs vue">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs vue">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs vue">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;&#x2F;script&gt;</code></pre></td></tr></table></figure></p><h2 id="v-debounce"><a href="#v-debounce" class="headerlink" title="v-debounce"></a>v-debounce</h2><p>防止按钮在短时间内被多次点击，使用防抖函数限制规定时间内只能点击一次</p><ol><li>定义一个延迟执行的方法，如果在延迟时间内再调用该方法，则重新计算执行时间。</li><li>将时间绑定在 click 方法上。</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> debounce = &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">inserted</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">el, binding</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">let</span> timer</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">    el.addEventListener(<span class="hljs-string">'keyup'</span>, () =&gt; &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-keyword">if</span> (timer) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">        clearTimeout(timer)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">      &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">      timer = setTimeout(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript">        binding.value()</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript">      &#125;, <span class="hljs-number">1000</span>)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript">    &#125;)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> debounce</code></pre></td></tr></table></figure><p> 使用：<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs vue">  &lt;button v-debounce&#x3D;&quot;debounceClick&quot;&gt;防抖&lt;&#x2F;button&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;&#x2F;template&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs vue"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;script&gt; </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs vue">export default &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs vue">  methods: &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs vue">    debounceClick () &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs vue">      console.log(&#39;只触发一次&#39;)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs vue">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs vue">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs vue">&#125; </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;&#x2F;script&gt;</code></pre></td></tr></table></figure></p><h2 id="v-emoji"><a href="#v-emoji" class="headerlink" title="v-emoji"></a>v-emoji</h2><p> 开发中遇到的表单输入，往往会有对输入内容的限制，比如不能输入表情和特殊字符，只能输入数字或字母等。<br> 根据正则表达式，设计自定义处理表单输入规则的指令，下面以禁止输入表情和特殊字符为例。</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> findEle = <span class="hljs-function">(<span class="hljs-params">parent, type</span>) =&gt;</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">return</span> parent.tagName.toLowerCase() === type ? parent : parent.querySelector(type)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> trigger = <span class="hljs-function">(<span class="hljs-params">el, type</span>) =&gt;</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">const</span> e = <span class="hljs-built_in">document</span>.createEvent(<span class="hljs-string">'HTMLEvents'</span>)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">  e.initEvent(type, <span class="hljs-literal">true</span>, <span class="hljs-literal">true</span>)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">  el.dispatchEvent(e)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> emoji = &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">bind</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">el, binding, vnode</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-comment">// 正则规则可根据需求自定义</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">var</span> regRule = <span class="hljs-regexp">/[^u4E00-u9FA5|d|a-zA-Z|rns,.?!，。？！…—&amp;$=()-+/*&#123;&#125;[]]|s/g</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">let</span> $inp = findEle(el, <span class="hljs-string">'input'</span>)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs javascript">    el.$inp = $inp</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs javascript">    $inp.handle = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-keyword">let</span> val = $inp.value</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><code class="hljs javascript">      $inp.value = val.replace(regRule, <span class="hljs-string">''</span>)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><code class="hljs javascript">      trigger($inp, <span class="hljs-string">'input'</span>)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><code class="hljs javascript">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><code class="hljs javascript">    $inp.addEventListener(<span class="hljs-string">'keyup'</span>, $inp.handle)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">unbind</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">el</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><code class="hljs javascript">    el.$inp.removeEventListener(<span class="hljs-string">'keyup'</span>, el.$inp.handle)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> emoji</code></pre></td></tr></table></figure><p> 使用：<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs vue">  &lt;input type&#x3D;&quot;text&quot; v-model&#x3D;&quot;note&quot; v-emoji &#x2F;&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;&#x2F;template&gt;</code></pre></td></tr></table></figure></p><h2 id="v-LazyLoad"><a href="#v-LazyLoad" class="headerlink" title="v-LazyLoad"></a>v-LazyLoad</h2><p> 实现一个图片懒加载指令，只加载浏览器可见区域的图片。</p><ol><li>图片懒加载的原理主要是判断当前图片是否到了可视区域这一核心逻辑实现的</li><li>拿到所有的图片 Dom ，遍历每个图片判断当前图片是否到了可视区范围内</li><li><p>如果到了就设置图片的 src 属性，否则显示默认图片</p><p>图片懒加载有两种方式可以实现，一是绑定 srcoll 事件进行监听，<br>二是使用 IntersectionObserver 判断图片是否到了可视区域，但是有浏览器兼容性问题。</p><p>下面封装一个懒加载指令兼容两种方法，判断浏览器是否支持 IntersectionObserver API，<br>如果支持就使用 IntersectionObserver 实现懒加载，否则则使用 srcoll 事件监听 + 节流的方法实现。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> LazyLoad = &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-comment">// install方法</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">  install(Vue, options) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">const</span> defaultSrc = options.default</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">    Vue.directive(<span class="hljs-string">'lazy'</span>, &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">      bind(el, binding) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">        LazyLoad.init(el, binding.value, defaultSrc)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">      &#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript">      inserted(el) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript">        <span class="hljs-keyword">if</span> (IntersectionObserver) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript">          LazyLoad.observe(el)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs javascript">        &#125; <span class="hljs-keyword">else</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs javascript">          LazyLoad.listenerScroll(el)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs javascript">        &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs javascript">      &#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs javascript">    &#125;)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-comment">// 初始化</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><code class="hljs javascript">  init(el, val, def) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><code class="hljs javascript">    el.setAttribute(<span class="hljs-string">'data-src'</span>, val)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><code class="hljs javascript">    el.setAttribute(<span class="hljs-string">'src'</span>, def)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-comment">// 利用IntersectionObserver监听el</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><code class="hljs javascript">  observe(el) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">var</span> io = <span class="hljs-keyword">new</span> IntersectionObserver(<span class="hljs-function">(<span class="hljs-params">entries</span>) =&gt;</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-keyword">const</span> realSrc = el.dataset.src</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-keyword">if</span> (entries[<span class="hljs-number">0</span>].isIntersecting) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><code class="hljs javascript">        <span class="hljs-keyword">if</span> (realSrc) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><code class="hljs javascript">          el.src = realSrc</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><code class="hljs javascript">          el.removeAttribute(<span class="hljs-string">'data-src'</span>)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><code class="hljs javascript">        &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><code class="hljs javascript">      &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><code class="hljs javascript">    &#125;)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><code class="hljs javascript">    io.observe(el)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-comment">// 监听scroll事件</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><code class="hljs javascript">  listenerScroll(el) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">const</span> handler = LazyLoad.throttle(LazyLoad.load, <span class="hljs-number">300</span>)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><code class="hljs javascript">    LazyLoad.load(el)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-built_in">window</span>.addEventListener(<span class="hljs-string">'scroll'</span>, () =&gt; &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><code class="hljs javascript">      handler(el)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><code class="hljs javascript">    &#125;)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-comment">// 加载真实图片</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><code class="hljs javascript">  load(el) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">const</span> windowHeight = <span class="hljs-built_in">document</span>.documentElement.clientHeight</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">const</span> elTop = el.getBoundingClientRect().top</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">const</span> elBtm = el.getBoundingClientRect().bottom</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">const</span> realSrc = el.dataset.src</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">if</span> (elTop - windowHeight &lt; <span class="hljs-number">0</span> &amp;&amp; elBtm &gt; <span class="hljs-number">0</span>) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-keyword">if</span> (realSrc) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><code class="hljs javascript">        el.src = realSrc</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><code class="hljs javascript">        el.removeAttribute(<span class="hljs-string">'data-src'</span>)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><code class="hljs javascript">      &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><code class="hljs javascript">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-comment">// 节流</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><code class="hljs javascript">  throttle(fn, delay) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">let</span> timer</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">let</span> prevTime</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">...args</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">62</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-keyword">const</span> currTime = <span class="hljs-built_in">Date</span>.now()</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">63</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-keyword">const</span> context = <span class="hljs-keyword">this</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">64</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-keyword">if</span> (!prevTime) prevTime = currTime</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">65</span></pre></td><td class="code"><pre><code class="hljs javascript">      clearTimeout(timer)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">66</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">67</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-keyword">if</span> (currTime - prevTime &gt; delay) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">68</span></pre></td><td class="code"><pre><code class="hljs javascript">        prevTime = currTime</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">69</span></pre></td><td class="code"><pre><code class="hljs javascript">        fn.apply(context, args)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">70</span></pre></td><td class="code"><pre><code class="hljs javascript">        clearTimeout(timer)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">71</span></pre></td><td class="code"><pre><code class="hljs javascript">        <span class="hljs-keyword">return</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">72</span></pre></td><td class="code"><pre><code class="hljs javascript">      &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">73</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">74</span></pre></td><td class="code"><pre><code class="hljs javascript">      timer = setTimeout(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">75</span></pre></td><td class="code"><pre><code class="hljs javascript">        prevTime = <span class="hljs-built_in">Date</span>.now()</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">76</span></pre></td><td class="code"><pre><code class="hljs javascript">        timer = <span class="hljs-literal">null</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">77</span></pre></td><td class="code"><pre><code class="hljs javascript">        fn.apply(context, args)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">78</span></pre></td><td class="code"><pre><code class="hljs javascript">      &#125;, delay)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">79</span></pre></td><td class="code"><pre><code class="hljs javascript">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">80</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">81</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">82</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">83</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> LazyLoad</code></pre></td></tr></table></figure><p>使用： 将组件内 标签的 src 换成 v-LazyLoad</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;img v-LazyLoad&#x3D;&quot;xxx.jpg&quot; &#x2F;&gt;</code></pre></td></tr></table></figure></li></ol><h2 id="v-permission"><a href="#v-permission" class="headerlink" title="v-permission"></a>v-permission</h2><p> 自定义一个权限指令，对需要权限判断的 Dom 进行显示隐藏。</p><ol><li>获取一个权限数组数据</li><li><p>判断用户的权限是否在这个数组内，如果是则显示，否则则移除 Dom</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> Store <span class="hljs-keyword">from</span> <span class="hljs-string">'@/store'</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> permission = &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-attr">inserted</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">el, binding</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">        <span class="hljs-keyword">const</span> value = binding.value;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">        <span class="hljs-keyword">if</span> (value) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">            <span class="hljs-keyword">const</span> permission = Store.getters.permission;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">            <span class="hljs-keyword">if</span> (!permission.includes(value)) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript">                el.parentNode &amp;&amp; el.parentNode.removeChild(el)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript">            &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript">        &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs javascript">    &#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> permission</code></pre></td></tr></table></figure></li></ol><p>使用：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;div class&#x3D;&quot;btns&quot;&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs vue">  &lt;!-- 显示 --&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs vue">  &lt;button v-permission&#x3D;&quot;&#39;admin:user:edit&#39;&quot;&gt;编辑用户&lt;&#x2F;button&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs vue">  &lt;!-- 不显示 --&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs vue">  &lt;button v-permission&#x3D;&quot;&#39;admin:user:destroy&#39;&quot;&gt;删除用户&lt;&#x2F;button&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;&#x2F;div&gt;</code></pre></td></tr></table></figure></p><h2 id="vue-waterMarker"><a href="#vue-waterMarker" class="headerlink" title="vue-waterMarker"></a>vue-waterMarker</h2><p>给整个页面添加背景水印</p><ol><li>使用 canvas 特性生成 base64 格式的图片文件，设置其字体大小，颜色等。</li><li>将其设置为背景图片，从而实现页面或组件水印效果</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">addWaterMarker</span>(<span class="hljs-params">str, parentNode, font, textColor</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-comment">// 水印文字，父元素，字体，文字颜色</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">var</span> can = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">'canvas'</span>)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">  parentNode.appendChild(can)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">  can.width = <span class="hljs-number">200</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">  can.height = <span class="hljs-number">150</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">  can.style.display = <span class="hljs-string">'none'</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">var</span> cans = can.getContext(<span class="hljs-string">'2d'</span>)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript">  cans.rotate((<span class="hljs-number">-20</span> * <span class="hljs-built_in">Math</span>.PI) / <span class="hljs-number">180</span>)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript">  cans.font = font || <span class="hljs-string">'16px Microsoft JhengHei'</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript">  cans.fillStyle = textColor || <span class="hljs-string">'rgba(180, 180, 180, 0.3)'</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs javascript">  cans.textAlign = <span class="hljs-string">'left'</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs javascript">  cans.textBaseline = <span class="hljs-string">'Middle'</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs javascript">  cans.fillText(str, can.width / <span class="hljs-number">10</span>, can.height / <span class="hljs-number">2</span>)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs javascript">  parentNode.style.backgroundImage = <span class="hljs-string">'url('</span> + can.toDataURL(<span class="hljs-string">'image/png'</span>) + <span class="hljs-string">')'</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> waterMarker = &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">bind</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">el, binding</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><code class="hljs javascript">    addWaterMarker(binding.value.text, el, binding.value.font, binding.value.textColor)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> waterMarker</code></pre></td></tr></table></figure><p>使用:设置水印文案，颜色，字体大小即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs vue">  &lt;div v-waterMarker&#x3D;&quot;&#123;text:&#39;版权所有&#39;,textColor:&#39;rgba(180, 180, 180, 0.4)&#39;&#125;&quot;&gt;&lt;&#x2F;div&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;&#x2F;template&gt;</code></pre></td></tr></table></figure><h2 id="v-draggable"><a href="#v-draggable" class="headerlink" title="v-draggable"></a>v-draggable</h2><p> 实现一个拖拽指令，可在页面可视区域任意拖拽元素。</p><ol><li>设置需要拖拽的元素为相对定位，其父元素为绝对定位。</li><li>鼠标按下(onmousedown)时记录目标元素当前的 left 和 top 值。</li><li>鼠标移动(onmousemove)时计算每次移动的横向距离和纵向距离的变化值，并改变元素的 left 和 top 值</li><li>鼠标松开(onmouseup)时完成一次拖拽</li></ol> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> draggable = &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">inserted</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">el</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">    el.style.cursor = <span class="hljs-string">'move'</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">    el.onmousedown = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-keyword">let</span> disx = e.pageX - el.offsetLeft</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-keyword">let</span> disy = e.pageY - el.offsetTop</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-built_in">document</span>.onmousemove = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">        <span class="hljs-keyword">let</span> x = e.pageX - disx</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript">        <span class="hljs-keyword">let</span> y = e.pageY - disy</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript">        <span class="hljs-keyword">let</span> maxX = <span class="hljs-built_in">document</span>.body.clientWidth - <span class="hljs-built_in">parseInt</span>(<span class="hljs-built_in">window</span>.getComputedStyle(el).width)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript">        <span class="hljs-keyword">let</span> maxY = <span class="hljs-built_in">document</span>.body.clientHeight - <span class="hljs-built_in">parseInt</span>(<span class="hljs-built_in">window</span>.getComputedStyle(el).height)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs javascript">        <span class="hljs-keyword">if</span> (x &lt; <span class="hljs-number">0</span>) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs javascript">          x = <span class="hljs-number">0</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs javascript">        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (x &gt; maxX) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs javascript">          x = maxX</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs javascript">        &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs javascript">        <span class="hljs-keyword">if</span> (y &lt; <span class="hljs-number">0</span>) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><code class="hljs javascript">          y = <span class="hljs-number">0</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><code class="hljs javascript">        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (y &gt; maxY) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><code class="hljs javascript">          y = maxY</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><code class="hljs javascript">        &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><code class="hljs javascript">        el.style.left = x + <span class="hljs-string">'px'</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><code class="hljs javascript">        el.style.top = y + <span class="hljs-string">'px'</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><code class="hljs javascript">      &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-built_in">document</span>.onmouseup = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><code class="hljs javascript">        <span class="hljs-built_in">document</span>.onmousemove = <span class="hljs-built_in">document</span>.onmouseup = <span class="hljs-literal">null</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><code class="hljs javascript">      &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><code class="hljs javascript">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> draggable</code></pre></td></tr></table></figure><p>使用: </p><pre><code class="lang-vue">&lt;template&gt;  &lt;div class=&quot;el-dialog&quot; v-draggable&gt;&lt;/div&gt;&lt;/template&gt;</code></pre><hr><p>参考文章：<br>作者：lzg9527   链接：<a href="https://segmentfault.com/a/1190000038475001" target="_blank" rel="noopener">https://segmentfault.com/a/1190000038475001</a></p>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue中使用svg图标</title>
      <link href="/2020/12/10/vue%E4%B8%AD%E4%BD%BF%E7%94%A8svg%E5%9B%BE%E6%A0%87/"/>
      <url>/2020/12/10/vue%E4%B8%AD%E4%BD%BF%E7%94%A8svg%E5%9B%BE%E6%A0%87/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="安装-svg-sprite-loader"><a href="#安装-svg-sprite-loader" class="headerlink" title="安装 svg-sprite-loader"></a>安装 svg-sprite-loader</h1><p><a href="https://www.npmjs.com/package/svg-sprite-loader" target="_blank" rel="noopener">svg-sprite-loader</a> 是用于创建SVG精灵图的插件，通过该插件可以将导入的SVG文件自动生成为symbol标签并插入进html中</p><blockquote><p>yarn add svg-sprite-loader -D</p></blockquote><h1 id="配置加载插件"><a href="#配置加载插件" class="headerlink" title="配置加载插件"></a>配置加载插件</h1><p>在 <code>vue.config.js</code> 中添加插件。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">"path"</span>)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">resolve</span>(<span class="hljs-params">dir</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">return</span> path.join(__dirname, dir);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">module</span>.exports = &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-attr">css</span>: &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript">        <span class="hljs-attr">loaderOptions</span>: &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript">            <span class="hljs-attr">less</span>: &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript">                <span class="hljs-attr">javascriptEnabled</span>: <span class="hljs-literal">true</span>,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs javascript">            &#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs javascript">        &#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs javascript">    &#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs javascript">    chainWebpack(config)&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs javascript">        <span class="hljs-comment">// 清除 svg loader</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs javascript">        config.module.rule(<span class="hljs-string">"svg"</span>).uses.clear();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs javascript">        <span class="hljs-comment">// 添加 svg loader</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><code class="hljs javascript">        config.module</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><code class="hljs javascript">            <span class="hljs-comment">// 排除 svg loader 对 node_modules 的操作</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><code class="hljs javascript">            .rule(<span class="hljs-string">"svg-sprite-loader"</span>)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><code class="hljs javascript">            .test(<span class="hljs-regexp">/.svg$/</span>)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><code class="hljs javascript">            .exclude.add(<span class="hljs-regexp">/node_modules/</span>)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><code class="hljs javascript">            .end()</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><code class="hljs javascript">            <span class="hljs-comment">// 添加 svg loader 对 icons/svg 下的 svg 图标进行操作</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><code class="hljs javascript">            .test(<span class="hljs-regexp">/\.svg$/</span>)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><code class="hljs javascript">            .include.add(path.resolve(__dirname, <span class="hljs-string">'./src/icons/svg'</span>))</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><code class="hljs javascript">            .end()</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><code class="hljs javascript">            .use(<span class="hljs-string">"svg-sprite-loader"</span>)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><code class="hljs javascript">            .loader(<span class="hljs-string">"svg-sprite-loader"</span>)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><code class="hljs javascript">            <span class="hljs-comment">// 定义规则  &lt;svg class="icon-svg"&gt; &lt;use xlink:href="#icon-name"&gt;&lt;/use&gt;&lt;/svg&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><code class="hljs javascript">            .options(&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><code class="hljs javascript">                <span class="hljs-attr">symbolId</span>: <span class="hljs-string">"[name]"</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><code class="hljs javascript">            &#125;);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><code class="hljs javascript">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr></table></figure><h1 id="导入-SVG"><a href="#导入-SVG" class="headerlink" title="导入 SVG"></a>导入 SVG</h1><p>创建文件目录和文件<br><code>src/icons</code><br><code>src/icons/index.js</code>       svg 文件操作<br><code>/src/icon/svg</code>            svg 文件存放</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/**</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"> * 加载 svg</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"> */</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">loadSvg</span>(<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">const</span> requireAll = <span class="hljs-function">(<span class="hljs-params">requireContext</span>) =&gt;</span> requireContext.keys().map(requireContext);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">const</span> req = <span class="hljs-built_in">require</span>.context(<span class="hljs-string">"@/icons/svg/"</span>, <span class="hljs-literal">false</span>, /\.svg$/);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">    requireAll(req);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr></table></figure><h1 id="icon-svg-组件"><a href="#icon-svg-组件" class="headerlink" title="icon-svg 组件"></a>icon-svg 组件</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;svg class&#x3D;&quot;icon-svg&quot;  aria-hidden&#x3D;&quot;true&quot;&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;use :xlink:href&#x3D;&quot;iconName&quot;&gt;&lt;&#x2F;use&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;&#x2F;svg&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;&#x2F;template&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;script&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs vue">export default &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs vue">    name: &quot;icon-svg&quot;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs vue">    inheritAttrs: true,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs vue">props: &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs vue">name: &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs vue">type: String</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs vue">&#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs vue">&#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs vue">computed: &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs vue">iconName() &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs vue">return &#96;#icon-$&#123;this.name&#125;&#96;;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs vue">&#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><code class="hljs vue">&#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><code class="hljs vue">&#125;;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;&#x2F;script&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;style&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><code class="hljs vue">.icon-svg &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><code class="hljs vue">width: 1em;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><code class="hljs vue">height: 1em;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><code class="hljs vue">vertical-align: -0.15em;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><code class="hljs vue">fill: currentColor;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><code class="hljs vue">overflow: hidden;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><code class="hljs vue">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;&#x2F;style&gt;</code></pre></td></tr></table></figure><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs vue">&#x2F;&#x2F; 基本使用</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;icon-svg name&#x3D;&quot;setting&quot; &#x2F;&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs vue"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs vue">&#x2F;&#x2F; 通过 style 控制大小和颜色</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;icon-svg name&#x3D;&quot;setting&quot; style&#x3D;&quot;fontSize:18px;color:#1abc9c;&quot;&#x2F;&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs vue"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs vue">&#x2F;&#x2F; 通过 class 控制大小和颜色</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;icon-svg name&#x3D;&quot;setting&quot; class&#x3D;&quot;setting&quot;&#x2F;&gt;</code></pre></td></tr></table></figure><p>如果修改颜色无效的话，打开文件将里面的 fill 删除。</p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> Svg </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>uniapp 小程序端渲染富文本图片宽度溢出</title>
      <link href="/2020/11/10/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%AB%AF%E6%B8%B2%E6%9F%93%E5%AF%8C%E6%96%87%E6%9C%AC%E5%9B%BE%E7%89%87%E5%AE%BD%E5%BA%A6%E6%BA%A2%E5%87%BA/"/>
      <url>/2020/11/10/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%AB%AF%E6%B8%B2%E6%9F%93%E5%AF%8C%E6%96%87%E6%9C%AC%E5%9B%BE%E7%89%87%E5%AE%BD%E5%BA%A6%E6%BA%A2%E5%87%BA/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;rich-text :nodes&#x3D;&quot;article.articleContent | formatRichText&quot;&gt;&lt;&#x2F;rich-text&gt;</code></pre></td></tr></table></figure><h2 id="filters"><a href="#filters" class="headerlink" title="filters"></a>filters</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs vue">export const formatRichText &#x3D; (html) &#x3D;&gt; &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs vue">let newContent &#x3D; html.replace(&#x2F;&lt;img[^&gt;]*&gt;&#x2F;gi, function(match, capture) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs vue">match &#x3D; match.replace(&#x2F;style&#x3D;&quot;[^&quot;]+&quot;&#x2F;gi, &#39;&#39;).replace(&#x2F;style&#x3D;&#39;[^&#39;]+&#39;&#x2F;gi, &#39;&#39;);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs vue">match &#x3D; match.replace(&#x2F;width&#x3D;&quot;[^&quot;]+&quot;&#x2F;gi, &#39;&#39;).replace(&#x2F;width&#x3D;&#39;[^&#39;]+&#39;&#x2F;gi, &#39;&#39;);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs vue">match &#x3D; match.replace(&#x2F;height&#x3D;&quot;[^&quot;]+&quot;&#x2F;gi, &#39;&#39;).replace(&#x2F;height&#x3D;&#39;[^&#39;]+&#39;&#x2F;gi, &#39;&#39;);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs vue">return match;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs vue">&#125;);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs vue">newContent &#x3D; newContent.replace(&#x2F;style&#x3D;&quot;[^&quot;]+&quot;&#x2F;gi, function(match, capture) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs vue">match &#x3D; match.replace(&#x2F;width:[^;]+;&#x2F;gi, &#39;max-width:100%;&#39;).replace(&#x2F;width:[^;]+;&#x2F;gi, &#39;max-width:100%;&#39;);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs vue">return match;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs vue">&#125;);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs vue">newContent &#x3D; newContent.replace(&#x2F;&lt;br[^&gt;]*\&#x2F;&gt;&#x2F;gi, &#39;&#39;);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs vue">newContent &#x3D; newContent.replace(&#x2F;\&lt;img&#x2F;gi,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs vue">&#39;&lt;img style&#x3D;&quot;max-width:100%;height:auto;display:inline-block;margin:10rpx auto;&quot;&#39;);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs vue">return newContent;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs vue">&#125;</code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> uniapp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 富文本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>uniapp 跨页面操作</title>
      <link href="/2020/11/10/uniapp%E8%B0%83%E7%94%A8%E4%B8%8A%E4%B8%80%E4%B8%AA%E9%A1%B5%E9%9D%A2%E7%9A%84%E6%96%B9%E6%B3%95/"/>
      <url>/2020/11/10/uniapp%E8%B0%83%E7%94%A8%E4%B8%8A%E4%B8%80%E4%B8%AA%E9%A1%B5%E9%9D%A2%E7%9A%84%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="修改上一页数据"><a href="#修改上一页数据" class="headerlink" title="修改上一页数据"></a>修改上一页数据</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> pages = getCurrentPages();  <span class="hljs-comment">// 当前页</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> prevPage = pages[pages.length - <span class="hljs-number">2</span>];  <span class="hljs-comment">// 上一页</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// prevPage.$vm    上一页的信息</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">prevPage.$vm.address = address; <span class="hljs-comment">// 修改上一页数据</span></code></pre></td></tr></table></figure><h1 id="返回上一页带参数"><a href="#返回上一页带参数" class="headerlink" title="返回上一页带参数"></a>返回上一页带参数</h1><p>子页面<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> pages = getCurrentPages();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> prevPage = pages[pages.length - <span class="hljs-number">2</span>];</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">prevPage.setData(&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-attr">current</span>:<span class="hljs-number">2</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">uni.navigateBack(&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-attr">delta</span>:<span class="hljs-number">1</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;)</code></pre></td></tr></table></figure></p><p>父页面<br><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs nix">onShow() &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs nix"><span class="hljs-keyword">let</span> <span class="hljs-attr">pages</span> = getCurrentPages();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs nix"><span class="hljs-keyword">let</span> <span class="hljs-attr">currentPage</span> = pages[pages.length-<span class="hljs-number">1</span>];</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs nix"><span class="hljs-keyword">let</span> <span class="hljs-attr">current</span> = currentPage.data.current;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs nix">console.log(current)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs nix">this.<span class="hljs-attr">current</span> = current;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs nix">&#125;</code></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> uniapp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 跨页面 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>uniapp的生命周期</title>
      <link href="/2020/07/16/uniapp%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/"/>
      <url>/2020/07/16/uniapp%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p><a href="https://uniapp.dcloud.io/" target="_blank" rel="noopener">uni-app</a>是一个使用<code>Vue.js</code>开发所有前端应用的框架。开发一次，多端使用。<br>本文的目的是了解生命周期函数的执行顺序，所以只会接触一部分周期函数。想了解更全面的生命周期函数请前往官方网站。</p><h1 id="生命周期类型"><a href="#生命周期类型" class="headerlink" title="生命周期类型"></a>生命周期类型</h1><p><code>uni-app</code> 的生命周期分为三类：</p><ul><li>应用生命周期</li><li>页面生命周期</li><li>组件生命周期</li></ul><h1 id="应用生命周期"><a href="#应用生命周期" class="headerlink" title="应用生命周期"></a>应用生命周期</h1><p>应用生命周期仅可在App.vue中监听，在其它页面监听无效。</p><div class="table-container"><table><thead><tr><th>函数名</th><th>说明</th></tr></thead><tbody><tr><td>onLaunch</td><td>当uni-app 初始化完成时触发（全局只触发一次）</td></tr><tr><td>onShow</td><td>当 uni-app 启动，或从后台进入前台显示</td></tr><tr><td>onHide</td><td>当 uni-app 从前台进入后台</td></tr></tbody></table></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-attr">onLaunch</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(<span class="hljs-string">'App Launch'</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-attr">onShow</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(<span class="hljs-string">'App Show'</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-attr">onHide</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(<span class="hljs-string">'App Hide'</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;;</code></pre></td></tr></table></figure><h1 id="页面生命周期"><a href="#页面生命周期" class="headerlink" title="页面生命周期"></a>页面生命周期</h1><div class="table-container"><table><thead><tr><th>函数名</th><th>说明</th></tr></thead><tbody><tr><td>onLoad</td><td>监听页面加载</td></tr><tr><td>onShow</td><td>监听页面显示。页面每次出现在屏幕上都触发，包括从下级页面点返回露出当前页面</td></tr><tr><td>onReady</td><td>监听页面初次渲染完成。注意如果渲染速度快，会在页面进入动画完成前触发</td></tr><tr><td>onHide</td><td>监听页面隐藏</td></tr><tr><td>onUnload</td><td>监听页面卸载</td></tr></tbody></table></div><h1 id="组件生命周期"><a href="#组件生命周期" class="headerlink" title="组件生命周期"></a>组件生命周期</h1><p><code>uni-app</code> 组件支持的生命周期，与<code>vue</code>标准组件的生命周期相同。这里没有页面级的onLoad等生命周期</p><div class="table-container"><table><thead><tr><th>函数名</th><th>说明</th></tr></thead><tbody><tr><td>beforeCreate</td><td>在实例初始化之后被调用</td></tr><tr><td>created</td><td>在实例创建完成后被立即调用</td></tr><tr><td>beforeMount</td><td>在挂载开始之前被调用</td></tr><tr><td>mounted</td><td>挂载到实例上去之后调用</td></tr><tr><td>beforeUpdate</td><td>数据更新时调用，发生在虚拟 DOM 打补丁之前</td></tr><tr><td>updated</td><td>由于数据更改导致的虚拟 DOM 重新渲染和打补丁，在这之后会调用该钩子</td></tr><tr><td>beforeDestroy</td><td>实例销毁之前调用。在这一步，实例仍然完全可用</td></tr><tr><td>destroyed</td><td>Vue 实例销毁后调用。调用后，Vue 实例指示的所有东西都会解绑定，所有的事件监听器会被移除，所有的子实例也会被销毁</td></tr></tbody></table></div><h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><p>页面代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;view class&#x3D;&quot;container&quot;&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;text&gt;消息&lt;&#x2F;text&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;Child :status&#x3D;&quot;status&quot;&gt;&lt;&#x2F;Child&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;Child :status&#x3D;&quot;status&quot; v-if&#x3D;&quot;status&quot;&gt;&lt;&#x2F;Child&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;button type&#x3D;&quot;default&quot; @click&#x3D;&quot;updateStatus&quot;&gt;改变状态&lt;&#x2F;button&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;&#x2F;view&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;&#x2F;template&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs vue"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;script&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs vue">import Child from &#39;.&#x2F;child.vue&#39;;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs vue">export default &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs vue">components:&#123;Child&#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs vue">data() &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs vue">return &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs vue">status:false</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs vue">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs vue">&#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><code class="hljs vue">onLoad() &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><code class="hljs vue">console.log(&#39;Page Load&#39;)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><code class="hljs vue">&#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><code class="hljs vue">onShow() &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><code class="hljs vue">console.log(&#39;Page Show&#39;)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><code class="hljs vue">&#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><code class="hljs vue">onReady() &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><code class="hljs vue">console.log(&#39;Page Ready&#39;);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><code class="hljs vue">&#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><code class="hljs vue">onHide() &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><code class="hljs vue">console.log(&#39;Page Hide&#39;)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><code class="hljs vue">&#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><code class="hljs vue">onUnload() &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><code class="hljs vue">console.log(&#39;Page Unload&#39;)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><code class="hljs vue">&#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><code class="hljs vue">beforeCreate() &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><code class="hljs vue">console.log(&#39;Vue beforeCreate&#39;)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><code class="hljs vue">&#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><code class="hljs vue">created() &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><code class="hljs vue">console.log(&#39;Vue created&#39;)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><code class="hljs vue">&#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><code class="hljs vue">beforeMount() &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><code class="hljs vue">console.log(&#39;Vue beforeMount&#39;)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><code class="hljs vue">&#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><code class="hljs vue">mounted() &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><code class="hljs vue">console.log(&#39;Vue mounted&#39;)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><code class="hljs vue">&#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><code class="hljs vue">beforeUpdate() &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><code class="hljs vue">console.log(&#39;Vue beforeUpdate&#39;)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><code class="hljs vue">&#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><code class="hljs vue">updated() &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><code class="hljs vue">console.log(&#39;Vue updated&#39;)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><code class="hljs vue">&#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><code class="hljs vue">beforeDestroy() &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><code class="hljs vue">console.log(&#39;Vue beforeDestroy&#39;)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><code class="hljs vue">&#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><code class="hljs vue">deactivated() &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><code class="hljs vue">console.log(&#39;Vue deactivated&#39;)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><code class="hljs vue">&#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><code class="hljs vue">methods:&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><code class="hljs vue">updateStatus()&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><code class="hljs vue">this.status &#x3D; !this.status;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><code class="hljs vue">console.log(&#96;改变父组件status：$&#123;this.status&#125;&#96;)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">62</span></pre></td><td class="code"><pre><code class="hljs vue">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">63</span></pre></td><td class="code"><pre><code class="hljs vue">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">64</span></pre></td><td class="code"><pre><code class="hljs vue">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">65</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;&#x2F;script&gt;</code></pre></td></tr></table></figure></p><p>子组件代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;view class&#x3D;&quot;&quot;&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;text&gt;组件生命周期&lt;&#x2F;text&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;button type&#x3D;&quot;default&quot; @click&#x3D;&quot;updateStatus&quot;&gt;改变状态&lt;&#x2F;button&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;&#x2F;view&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;&#x2F;template&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs vue"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;script&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs vue">export default&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs vue">name:&#39;Child&#39;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs vue">data()&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs vue">return &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs vue">childStatus:false</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs vue">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs vue">&#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs vue">props:&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs vue">status:Boolean</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs vue">&#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><code class="hljs vue">beforeCreate() &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><code class="hljs vue">console.log(&#39;Child Vue beforeCreate&#39;)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><code class="hljs vue">&#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><code class="hljs vue">created() &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><code class="hljs vue">console.log(&#39;Child Vue created&#39;)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><code class="hljs vue">&#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><code class="hljs vue">beforeMount() &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><code class="hljs vue">console.log(&#39;Child Vue beforeMount&#39;)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><code class="hljs vue">&#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><code class="hljs vue">mounted() &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><code class="hljs vue">console.log(&#39;Child Vue mounted&#39;)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><code class="hljs vue">&#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><code class="hljs vue">beforeUpdate() &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><code class="hljs vue">console.log(&#39;Child Vue beforeUpdate&#39;)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><code class="hljs vue">&#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><code class="hljs vue">updated() &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><code class="hljs vue">console.log(&#39;Child Vue updated&#39;)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><code class="hljs vue">&#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><code class="hljs vue">beforeDestroy() &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><code class="hljs vue">console.log(&#39;Child Vue beforeDestroy&#39;)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><code class="hljs vue">&#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><code class="hljs vue">deactivated() &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><code class="hljs vue">console.log(&#39;Child Vue deactivated&#39;)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><code class="hljs vue">&#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><code class="hljs vue">methods:&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><code class="hljs vue">updateStatus()&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><code class="hljs vue">this.childStatus &#x3D; !this.childStatus;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><code class="hljs vue">console.log(&#96;改变Child组件status：$&#123;this.childStatus&#125;&#96;)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><code class="hljs vue">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><code class="hljs vue">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><code class="hljs vue">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;&#x2F;script&gt;</code></pre></td></tr></table></figure><p>第一次进入页面后控制台输入：<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs routeros">App Launch  </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs routeros">App Show  </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs routeros">Vue beforeCreate  </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs routeros">Vue created  </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs routeros">Vue beforeMount  </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs routeros">Child Vue beforeCreate  </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs routeros">Child Vue created  </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs routeros">Child Vue beforeMount  <span class="hljs-built_in"></span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs routeros">Page Load  <span class="hljs-built_in"></span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs routeros">Page Show  </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs routeros">Child Vue mounted  </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs routeros">Vue mounted  <span class="hljs-built_in"></span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs routeros">Page Ready</code></pre></td></tr></table></figure></p><p>第一次进入时会执行应用生命周期，然后是页面的Vue挂载阶段。如果有子组件的话，进行子组件的挂载。当vue挂载完成后进行页面生命周期的加载，显示。子组件挂载完毕，页面挂载完毕，最后就是页面初次渲染完成。</p><p>这时我们切换页面就会触发页面生命周期的 <code>Hide</code> 与 <code>Show</code>。</p><p>点击子组件的按钮改变状态后控制台输出：<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs groovy">改变Child组件<span class="hljs-string">status:</span> <span class="hljs-literal">true</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs groovy">Child Vue beforeUpdate</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs groovy">Child Vue updated</code></pre></td></tr></table></figure><br>这里只会触发子组件Vue的更新。</p><p>点击页面的按钮改变状态后控制台输出：<br><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-meta">改变父组件status</span>: <span class="hljs-string">true</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-attr">Vue</span> <span class="hljs-string">beforeUpdate</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-attr">Child</span> <span class="hljs-string">Vue beforeCreate</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-attr">Child</span> <span class="hljs-string">Vue created</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-attr">Child</span> <span class="hljs-string">Vue beforeMount</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-attr">Vue</span> <span class="hljs-string">updated</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-attr">Child</span> <span class="hljs-string">Vue mounted</span></code></pre></td></tr></table></figure><br>页面会触发更新之前的钩子函数，然后等子组件挂载。页面在触发更新完成，最后触发子组件的挂载完成函数。</p><p>再次点击页面按钮将子组件移除后控制台输出：<br><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-meta">改变父组件status</span>: <span class="hljs-string">false</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-attr">Vue</span> <span class="hljs-string">beforeUpdate</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-attr">Child</span> <span class="hljs-string">Vue beforeDestroy</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-attr">Vue</span> <span class="hljs-string">updated</span></code></pre></td></tr></table></figure><br>在页面更新函数完成前，只会触发子组件的卸载函数。</p>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生命周期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript类</title>
      <link href="/2020/07/06/JavaScript%E7%B1%BB/"/>
      <url>/2020/07/06/JavaScript%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="定义类（class）"><a href="#定义类（class）" class="headerlink" title="定义类（class）"></a>定义类（class）</h1><h2 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h2><p>通过构造函数模拟类，在内部使用<code>this</code>指向实例对象。使用<code>new</code>关键字来生成实例。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Cat</span>(<span class="hljs-params">name</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">this</span>.name = name;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> cat = <span class="hljs-keyword">new</span> Cat(<span class="hljs-string">'向日葵'</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(cat.name);       <span class="hljs-comment">// 向日葵</span></code></pre></td></tr></table></figure><h2 id="Object-create"><a href="#Object-create" class="headerlink" title="Object.create()"></a>Object.create()</h2><p><code>Object.create()</code>方法创建一个新对象，使用现有的对象来提供新创建的对象的<code>__proto__</code>。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> person = &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">name</span>:<span class="hljs-string">'李磊'</span>,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">sayHi</span>:<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`你好！我叫<span class="hljs-subst">$&#123;<span class="hljs-keyword">this</span>.name&#125;</span>`</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> user = <span class="hljs-built_in">Object</span>.create(person);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">user.sayHi(); <span class="hljs-comment">// 你好！我叫李雷</span></code></pre></td></tr></table></figure><h2 id="极简主义法"><a href="#极简主义法" class="headerlink" title="极简主义法"></a>极简主义法</h2><h3 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h3><p>用一个对象模拟类，在这个类里面定义一个构造函数，来生成实例。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> Cat = &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">create</span>:<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">var</span> cat = &#123;&#125;;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">    cat.name = <span class="hljs-string">'向日葵'</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">    cat.eat = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`<span class="hljs-subst">$&#123;<span class="hljs-keyword">this</span>.name&#125;</span>吃东西！`</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">return</span> cat;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> cat1 = Cat.create();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs javascript">cat1.eat();</code></pre></td></tr></table></figure><h3 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h3><p>继承的实现，只需要让需要继承的类在<code>create</code>方法中，调用被继承的<code>create</code>方法。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> Animal = &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">create</span>:<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">var</span> animal = &#123;&#125;;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">    animal.name = <span class="hljs-string">'喵喵'</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">    animal.eat = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`<span class="hljs-subst">$&#123;<span class="hljs-keyword">this</span>.name&#125;</span>吃东西！`</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">    &#125;; </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">return</span> animal;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> Cat = &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">create</span>:<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">var</span> cat = Animal.create();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs javascript">    cat.name = <span class="hljs-string">'小太阳'</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs javascript">    cat.call = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`喵 <span class="hljs-subst">$&#123;<span class="hljs-keyword">this</span>.name&#125;</span>`</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs javascript">    &#125;;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">return</span> cat;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> cat = Cat.create();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><code class="hljs javascript">cat.eat();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><code class="hljs javascript">cat.call();</code></pre></td></tr></table></figure><p>这样<code>Cat</code>实例就有了<code>Cat</code>类和<code>Animal</code>类的全部属性和方法。</p><h3 id="私有属性和私有方法"><a href="#私有属性和私有方法" class="headerlink" title="私有属性和私有方法"></a>私有属性和私有方法</h3><p>在<code>create</code>方法中，只要不是定义在<code>cat</code>对象上的方法和属性都是私有的。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> Cat = &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">create</span>:<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">var</span> cat = &#123;&#125;;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">var</span> sound = <span class="hljs-string">'喵喵喵'</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">    cat.name = <span class="hljs-string">'向日葵'</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">    cat.eat = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`<span class="hljs-subst">$&#123;<span class="hljs-keyword">this</span>.name&#125;</span>吃东西！`</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">return</span> cat;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> cat = Cat.create();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(cat.sound);     <span class="hljs-comment">// undefined</span></code></pre></td></tr></table></figure><h3 id="数据共享"><a href="#数据共享" class="headerlink" title="数据共享"></a>数据共享</h3><p>想让所有实例对象都能够读写同一个内部数据，只需要把这个内部视剧封装在类对象里面，create方法外面即可。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> Cat = &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">sound</span>:<span class="hljs-string">'喵喵喵'</span>,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">create</span>:<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">var</span> cat = &#123;&#125;;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">    cat.name = <span class="hljs-string">'向日葵'</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">    cat.call = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`<span class="hljs-subst">$&#123;<span class="hljs-keyword">this</span>.name&#125;</span><span class="hljs-subst">$&#123;Cat.sound&#125;</span>！`</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">    &#125;;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript">    cat.changeSound = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">text</span>)</span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript">      Cat.sound = text;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript">    &#125;;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">return</span> cat;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> cat1 = Cat.create();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> cat2 = Cat.create();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs javascript">cat1.call();  <span class="hljs-comment">// 向日葵喵喵喵！</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><code class="hljs javascript">cat2.changeSound(<span class="hljs-string">'嗷。。呜。。'</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><code class="hljs javascript">cat2.call();  <span class="hljs-comment">// 向日葵嗷。。呜。。！</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><code class="hljs javascript">cat1.call();  <span class="hljs-comment">// 向日葵嗷。。呜。。！</span></code></pre></td></tr></table></figure><h2 id="Class-关键字"><a href="#Class-关键字" class="headerlink" title="Class 关键字"></a>Class 关键字</h2><p><code>ES6</code>引入了<code>Class（类）</code>的概念。通过<code>class</code>关键字来定义类。实际上<code>ES6</code>的<code>class</code>只是一个语法糖。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Cat</span> </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">constructor</span>(name) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">this</span>.name = name;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">  eat()&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`<span class="hljs-subst">$&#123;<span class="hljs-keyword">this</span>.name&#125;</span>吃东西！`</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> cat = <span class="hljs-keyword">new</span> Cat(<span class="hljs-string">'向日葵'</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript">car.eat();</code></pre></td></tr></table></figure><h2 id="constructor-方法"><a href="#constructor-方法" class="headerlink" title="constructor 方法"></a>constructor 方法</h2><p><code>constructor</code> 方法是类的默认方法，通过<code>new</code>来生成实例时，自动调用改方法。<br>如果没有定义<code>constructor</code>方法，就会有一个默认空的<code>constructor</code>方法存在。<br><code>constructor</code>是一个构造方法。相当于<code>ES5</code>的构造函数<code>Cat()</code>。在类里面定义方法直接把函数定义放进去即可，方法之间不需要逗号分隔。<br>也是通过new来实例化类，跟构造函数一致。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Cat</span></span>&#123;&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 等同于</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Cat</span></span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">constructor</span>() &#123;&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr></table></figure><p><code>constructor</code>方法默认返回实例对象（this），也可以指定返回另外一个对象。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Cat</span> </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">constructor</span>() &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Object</span>.create(<span class="hljs-literal">null</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> cat = <span class="hljs-keyword">new</span> Cat(); </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(cat);       <span class="hljs-comment">// &#123;&#125;</span></code></pre></td></tr></table></figure><h2 id="getter-和-setter"><a href="#getter-和-setter" class="headerlink" title="getter 和 setter"></a>getter 和 setter</h2><p>在类内部可以试一关键字<code>get</code>和<code>set</code>，对某个属性存值和取值，拦截改属性的存取行为。</p><p>ES5:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Cat</span>(<span class="hljs-params">name</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">this</span>._name = name;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">Cat.prototype = &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">get</span> name()&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>._name;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">set</span> name(name)&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">this</span>._name = name;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> cat = <span class="hljs-keyword">new</span> Cat(<span class="hljs-string">'向日葵'</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(cat.name);       <span class="hljs-comment">// 向日葵</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs javascript">cat.name = <span class="hljs-string">'小太阳'</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(cat.name);</code></pre></td></tr></table></figure><p>ES6:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Cat</span> </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">constructor</span>(name) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">this</span>._name = name;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">get</span> name()&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>._name;   </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">set</span> name(name)&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">this</span>._name = name;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> cat = <span class="hljs-keyword">new</span> Cat(<span class="hljs-string">'向日葵'</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(cat.name);       <span class="hljs-comment">// 向日葵</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs javascript">cat.name = <span class="hljs-string">'小太阳'</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(cat.name);       <span class="hljs-comment">// 小太阳</span></code></pre></td></tr></table></figure></p><h2 id="Class-表达式"><a href="#Class-表达式" class="headerlink" title="Class 表达式"></a>Class 表达式</h2><p>与函数一样，类也可以使用表达式的形式来定义。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> CatClass = <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Cat</span> </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">constructor</span>(name) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">this</span>.name = name;  </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125; </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">  sayName()&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">this</span>.name);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125; </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> cat = <span class="hljs-keyword">new</span> CatClass(<span class="hljs-string">'向日葵'</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript">cat.sayName();    <span class="hljs-comment">// 向日葵</span></code></pre></td></tr></table></figure><p>采用<code>Class</code>表达式，可以写出类似函数那样的立即执行的<code>Class</code>。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> cat = <span class="hljs-keyword">new</span> <span class="hljs-class"><span class="hljs-keyword">class</span> </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">constructor</span>(name) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">this</span>.name = name;  </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125; </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">  sayName()&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">this</span>.name);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125; </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;(<span class="hljs-string">'向日葵'</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript">cat.sayName();  <span class="hljs-comment">// 向日葵</span></code></pre></td></tr></table></figure><h2 id="this-指向"><a href="#this-指向" class="headerlink" title="this 指向"></a>this 指向</h2><p> 类内部的this默认指向类的实例，不能单独使用。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Cat</span> </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">constructor</span>(name) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">this</span>.name = name;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">  call()&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`喵 <span class="hljs-subst">$&#123;<span class="hljs-keyword">this</span>.name&#125;</span>`</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> cat = <span class="hljs-keyword">new</span> Cat(<span class="hljs-string">'向日葵'</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> &#123;call&#125; = cat;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript">call();  <span class="hljs-comment">// Cannot read property 'name' of undefined</span></code></pre></td></tr></table></figure><br><code>this</code>指向的不再是Cat,而是运行时所在的环境，这时就会找不到<code>name</code>而报错。</p><h3 id="构造函数内部绑定"><a href="#构造函数内部绑定" class="headerlink" title="构造函数内部绑定"></a>构造函数内部绑定</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Cat</span> </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">constructor</span>(name) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">this</span>.name = name;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">this</span>.call = <span class="hljs-keyword">this</span>.call.bind(<span class="hljs-keyword">this</span>); </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">  call()&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`喵 <span class="hljs-subst">$&#123;<span class="hljs-keyword">this</span>.name&#125;</span>`</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> cat = <span class="hljs-keyword">new</span> Cat(<span class="hljs-string">'向日葵'</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> &#123;call&#125; = cat;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs javascript">call();</code></pre></td></tr></table></figure><h3 id="箭头函数"><a href="#箭头函数" class="headerlink" title="箭头函数"></a>箭头函数</h3><p>箭头函数内部的<code>this</code>指向定义时所在的对象。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Cat</span> </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">constructor</span>(name) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">this</span>.name = name;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">this</span>.call = <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`喵 <span class="hljs-subst">$&#123;<span class="hljs-keyword">this</span>.name&#125;</span>`</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> cat = <span class="hljs-keyword">new</span> Cat(<span class="hljs-string">'向日葵'</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> &#123;call&#125; = cat;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript">call();</code></pre></td></tr></table></figure><h1 id="静态方法"><a href="#静态方法" class="headerlink" title="静态方法"></a>静态方法</h1><p>在类在定义的方法都会被继承，如果在方法前加上<code>static</code>关键字，就表示改方法不会被实例继承，只能通过类调用，这就叫静态方法。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Person</span> </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">static</span> className()&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">return</span> Person.name;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">Person.className();  <span class="hljs-comment">// Person</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> user = <span class="hljs-keyword">new</span> Person();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript">user.className();    <span class="hljs-comment">// user.className is not a function</span></code></pre></td></tr></table></figure><p>上面示例代码中，<code>Person</code>类的<code>className()</code>方法前有关键字<code>static</code>,表明这是一个静态方法需要在<code>Person</code>类上调用.如果通过实例来调用，会抛出一个错误:这不是一个方法。</p><blockquote><p>如果静态方法内有<code>this</code>关键字，那么这个<code>this</code>指向的是类，而不是实例对象。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Foo</span> </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">static</span> a()&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">this</span>.b();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">static</span> b()&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'static b'</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">  b()&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'b'</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs javascript">Foo.a();    <span class="hljs-comment">// static b</span></code></pre></td></tr></table></figure><p>静态方法调用了<code>this.b()</code>.这里最终输出了 <code>static b</code>,说明它调用的是静态方法<code>b()</code>,<code>this</code>指向的是<code>Foo</code>类。静态方法可以与非静态方法重名。</p><blockquote><p>父类的静态方法，可以被子类继承</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Foo</span> </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">static</span> className()&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.name;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Bar</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Foo</span></span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">  </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript">Bar.className();    <span class="hljs-comment">// Bar</span></code></pre></td></tr></table></figure><p>父类<code>Foo</code>有一个静态方法，子类<code>Bar</code>可以调用这个方法。</p><p>静态方法也是可以从<code>super</code>对象上调用的。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Foo</span> </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">static</span> className()&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.name;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Bar</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Foo</span></span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">static</span> className()&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">return</span> <span class="hljs-keyword">super</span>.className();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript">Bar.className();    <span class="hljs-comment">// Bar</span></code></pre></td></tr></table></figure><h1 id="实例属性"><a href="#实例属性" class="headerlink" title="实例属性"></a>实例属性</h1><p>实例属性处理可以定义在<code>constructor()</code>方法里面的<code>this</code>上,也可以定义在类的最顶层。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Person</span> </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  _age = <span class="hljs-number">0</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">constructor</span>(name) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">this</span>._name = name;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">get</span> value()&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>._age;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">set</span> value(age)&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">this</span>._age = age;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> user = <span class="hljs-keyword">new</span> Person(<span class="hljs-string">'李雷'</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(user._age);       <span class="hljs-comment">//  0</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(user._name);      <span class="hljs-comment">//  李雷</span></code></pre></td></tr></table></figure><h1 id="静态属性"><a href="#静态属性" class="headerlink" title="静态属性"></a>静态属性</h1><p>静态属性指的是 <code>Class</code> 本身的属性， 即<code>Class.propname</code>， 而不是定义在实例对象（<code>this</code>） 上的属性。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Foo</span> </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">Foo.prop = <span class="hljs-string">'foo'</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(Foo.prop);    <span class="hljs-comment">// foo</span></code></pre></td></tr></table></figure><p>在属性前面加上<code>static</code>关键字,也可以定义静态属性。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Foo</span> </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">static</span> prop = <span class="hljs-number">1</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr></table></figure><h1 id="私有方法和私有属性"><a href="#私有方法和私有属性" class="headerlink" title="私有方法和私有属性"></a>私有方法和私有属性</h1><p>私有方法和私有属性，是只能在类的内部访问的方法和属性，外部不能访问。</p><blockquote><p>私有属性:在属性名前，使用<code>#</code>表示。</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript">class Person &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  #age = 0;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">  get value()&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">    return this.#age;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">  set value(age)&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">    this.#age = age;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript">let user = new Person();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript">console.log(user.#age);           // Private field '#age' must be declared in an enclosing class</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs javascript">user.#age = 20;       // Private field '#age' must be declared in an enclosing class</code></pre></td></tr></table></figure><p><code>#age</code> 就是私有属性，如果在外部使用就会报错。</p><blockquote><p>私有方法:在方法前加<code>#</code></p></blockquote><p>私有属性也可以设置 getter 和 setter 方法。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript">class Person &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  #age = 0;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">  #print()&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">    console.log(#age);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">  printAge()&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">    this.#print();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript">  get #value()&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript">    return #age;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs javascript">  set #value(age)&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs javascript">    this.#age = age;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs javascript">let person = new Person();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs javascript">person.printAge();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><code class="hljs javascript">person.#value = 20;</code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Class </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ES6语法之Promise</title>
      <link href="/2020/07/05/ECMAScript6%E4%B9%8BPromise/"/>
      <url>/2020/07/05/ECMAScript6%E4%B9%8BPromise/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="Promise-介绍"><a href="#Promise-介绍" class="headerlink" title="Promise 介绍"></a>Promise 介绍</h1><p><code>Promise</code> 是异步编程的一种解决方案。避免了使用回调函数和事件所造成的回调地狱。  </p><p><code>Promise</code> 接受两个参数：<code>resolve</code>和<code>reject</code>.它们都是函数，被调用时分别会将<code>promise</code>的状态由<code>pending</code>改为<code>fulfilled</code>和<code>rejected</code>。</p><p><code>Promise</code>的状态一旦改变，就不会在变。 </p><p><code>Promise</code>对象有三种状态：<code>pending</code>(进行中)，<code>fulfilled</code>(已成功)，<code>rejected</code>(失败)。  </p><p><code>Promise</code>创建后会立即执行。<code>Promise</code>会返回一个<code>promise</code>实例，可以通过<code>then</code>方法来接受两个回调函数作为参数。第一个回调函数是当<code>Promise</code>对象的状态变为<code>fulfilled</code>时调用<code>resolve</code>，第二个函数时状态变为<code>rejected</code>调用的<code>reject</code>。</p><h1 id="Promise-基本使用"><a href="#Promise-基本使用" class="headerlink" title="Promise 基本使用"></a>Promise 基本使用</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> ajax = <span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">url</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">const</span> promise = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">resolve, reject</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-keyword">const</span> xmlHttpRequest = <span class="hljs-keyword">new</span> XMLHttpRequest();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-keyword">const</span> handler = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">          <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.readyState !== <span class="hljs-number">4</span>) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">            <span class="hljs-keyword">return</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">          &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript">          <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.status === <span class="hljs-number">200</span>) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript">            <span class="hljs-keyword">return</span> resolve(<span class="hljs-keyword">this</span>.response);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript">          &#125; <span class="hljs-keyword">else</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs javascript">            <span class="hljs-keyword">return</span> reject(<span class="hljs-keyword">new</span> <span class="hljs-built_in">Error</span>(<span class="hljs-keyword">this</span>.statusText));</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs javascript">          &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs javascript">      &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs javascript">           xmlHttpRequest.open(<span class="hljs-string">'POST'</span>, url);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs javascript">           xmlHttpRequest.onreadystatechange = handler;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs javascript">           xmlHttpRequest.responseType = <span class="hljs-string">'json'</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><code class="hljs javascript">           xmlHttpRequest.setRequestHeader(<span class="hljs-string">"Accept"</span>, <span class="hljs-string">"application/json"</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><code class="hljs javascript">           xmlHttpRequest.send();    </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><code class="hljs javascript">   <span class="hljs-keyword">return</span> promise;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><code class="hljs javascript">ajax(<span class="hljs-string">'/post/json'</span>).then(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">response</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-built_in">console</span>.log(response);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">error</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-built_in">console</span>.log(error);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;);</code></pre></td></tr></table></figure><p><code>ajax</code> 是一个 <code>XMLHttpRequest</code> 对象请求封装。发送<code>POST</code>请求，返回一个<code>Promise</code>对象。<br><code>then</code>方法接受两个回调函数，<code>resolve</code>函数和<code>reject</code>函数。<code>response</code>就是<code>ajax</code>内部的<code>resolve</code>函数返回的数据。</p><h1 id="Promise-prototype-then"><a href="#Promise-prototype-then" class="headerlink" title="Promise.prototype.then()"></a>Promise.prototype.then()</h1><p><code>then</code>方法返回一个新的<code>promise</code>实例，因此可以用链式调用的方式，在<code>then</code>方法后面继续调用<code>then</code>方法。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript">ajax(<span class="hljs-string">'/post/json'</span>).then(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">data</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">return</span> data;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;).then(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">data</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-built_in">console</span>.log(data)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;);</code></pre></td></tr></table></figure><h1 id="Promise-prototype-catch"><a href="#Promise-prototype-catch" class="headerlink" title="Promise.prototype.catch()"></a>Promise.prototype.catch()</h1><p><code>catch</code> 方法用于指定发生错误时的回调函数。<br><code>throw</code>抛出错误和<code>reject</code>方法的作用是等价的。  </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> promise1 = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">resolve, reject</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  reject(<span class="hljs-keyword">new</span> <span class="hljs-built_in">Error</span>(<span class="hljs-string">'error'</span>));</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">promise1.catch(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">error</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-built_in">console</span>.log(error);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> promise2 = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">resolve, reject</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Error</span>(<span class="hljs-string">'error'</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript">promise2.catch(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">error</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-built_in">console</span>.log(error);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// Error: error</span></code></pre></td></tr></table></figure><p>如果<code>promise</code>的状态已经改变了，那么在抛出错误就是无效的。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> promise = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">resolve, reject</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  resolve(<span class="hljs-string">'ok'</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">  reject(<span class="hljs-keyword">new</span> <span class="hljs-built_in">Error</span>(<span class="hljs-string">'error'</span>));</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">promise.then(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">data</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-built_in">console</span>.log(data);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">promise.catch(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">error</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-built_in">console</span>.log(error);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;);</code></pre></td></tr></table></figure><h1 id="Promise与Async-Await"><a href="#Promise与Async-Await" class="headerlink" title="Promise与Async/Await"></a>Promise与Async/Await</h1><p><code>Promise</code>虽然解决了<code>callback</code>回调地狱，但是<code>promise</code>内部的值是无法返回到外面的，<br>只能通过<code>then</code>方法来接受处理值。可以通过<code>async/await</code>来改写。</p><p>例如下面的例子，只能通过<code>then</code>方法获取<code>Promise</code>内部的值。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">request</span>(<span class="hljs-params">url</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">return</span> ajax(url).then(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">response</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">return</span> response;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">    &#125;, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">error</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-built_in">console</span>.log(error);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">    &#125;);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">request(<span class="hljs-string">'/post/json'</span>).then(<span class="hljs-function"><span class="hljs-params">data</span>=&gt;</span><span class="hljs-built_in">console</span>.log(data)).then(<span class="hljs-function"><span class="hljs-params">data</span>=&gt;</span><span class="hljs-built_in">console</span>.log(data));</code></pre></td></tr></table></figure></p><p>通过<code>async/await</code>改写后：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getList</span>(<span class="hljs-params">url</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">let</span> response = <span class="hljs-keyword">await</span> request(url);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-built_in">console</span>.log(response);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr></table></figure><p>这里<code>await</code>声明的<code>Promise</code>异步返回，必须等待有返回值的时候，代码才会继续执行下去。</p>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ES6 </tag>
            
            <tag> Promise </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flutter状态管理之ScopedModel</title>
      <link href="/2020/06/06/Flutter%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86%E4%B9%8BScopedModel/"/>
      <url>/2020/06/06/Flutter%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86%E4%B9%8BScopedModel/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p><code>ScopedModel</code> 允许将数据模型从父Widget传递到后代，会在模型更新时重新渲染使用该模型的所有子项。</p><h1 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h1><p>在<code>pubspec.yml</code>中添加<code>scoped_model</code>的依赖。</p><blockquote><p>scoped_model: ^1.0.1</p></blockquote><h1 id="创建模型"><a href="#创建模型" class="headerlink" title="创建模型"></a>创建模型</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs dart"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CounterModel</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Model</span> </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs dart">  <span class="hljs-built_in">int</span> _count = <span class="hljs-number">0</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs dart">  <span class="hljs-built_in">int</span> <span class="hljs-keyword">get</span> count =&gt; _count;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs dart">  <span class="hljs-keyword">void</span> increment() &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs dart">    _count++;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs dart">    notifyListeners();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs dart">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs dart">  <span class="hljs-keyword">void</span> reduce() &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs dart">    _count--;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs dart">    notifyListeners();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs dart">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs dart">  <span class="hljs-keyword">static</span> CounterModel of(BuildContext context) =&gt; ScopedModel.of&lt;CounterModel&gt;(context);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs dart">&#125;</code></pre></td></tr></table></figure><ul><li>让我们自定义的<code>CounterModel</code>继承<code>Model</code>.</li><li>当调用<code>increment</code>方法时改变了数据，然后<code>notifyListeners</code>会通知所有用到该模型的子项更新状态</li></ul><h1 id="将MaterialApp用ScopedModel包装起来"><a href="#将MaterialApp用ScopedModel包装起来" class="headerlink" title="将MaterialApp用ScopedModel包装起来"></a>将MaterialApp用ScopedModel包装起来</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs dart"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyApp</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">StatelessWidget</span> </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs dart">  <span class="hljs-meta">@override</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs dart">  Widget build(BuildContext context) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs dart">    <span class="hljs-keyword">return</span> ScopedModel&lt;CounterModel&gt;(</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs dart">      model: CounterModel(),</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs dart">      child: MaterialApp(</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs dart">        theme: ThemeData(</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs dart">          primarySwatch: Colors.yellow,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs dart">        ),</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs dart">        debugShowCheckedModeBanner: <span class="hljs-keyword">false</span>,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs dart">         home: ScopedModelDemo(),</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs dart">      ),</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs dart">    );</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs dart">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs dart">&#125;</code></pre></td></tr></table></figure><ul><li>ScopedModel 接受两个参数：model 和 child .</li><li>model 我们传入 CounterModel 实例</li></ul><h1 id="在子页面获取Model"><a href="#在子页面获取Model" class="headerlink" title="在子页面获取Model"></a>在子页面获取Model</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs dart"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ScopedModelDemo</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">StatelessWidget</span> </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs dart">  <span class="hljs-meta">@override</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs dart">  Widget build(BuildContext context) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs dart">    <span class="hljs-keyword">return</span> Scaffold(</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs dart">      appBar: AppBar(</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs dart">        title: Text(<span class="hljs-string">'ScopedModelDemo'</span>),</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs dart">        elevation: <span class="hljs-number">0.0</span>,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs dart">      ),</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs dart">      body: ScopedModelDemoHome(),</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs dart">      floatingActionButton: FloatingActionButton(</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs dart">        onPressed: () &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs dart">          Navigator.of(context)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs dart">              .push(MaterialPageRoute(builder: (context) =&gt; SecondPage()));</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs dart">        &#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs dart">        tooltip: <span class="hljs-string">'Increment'</span>,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs dart">        child: Icon(Icons.open_in_new),</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs dart">      ),</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs dart">    );</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><code class="hljs dart">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><code class="hljs dart">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><code class="hljs dart"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><code class="hljs dart"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ScopedModelDemoHome</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">StatefulWidget</span> </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><code class="hljs dart">  <span class="hljs-meta">@override</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><code class="hljs dart">  _ScopedModelDemoHomeState createState() =&gt; _ScopedModelDemoHomeState();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><code class="hljs dart">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><code class="hljs dart"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><code class="hljs dart"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">_ScopedModelDemoHomeState</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">State</span>&lt;<span class="hljs-title">ScopedModelDemoHome</span>&gt; </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><code class="hljs dart">  <span class="hljs-meta">@override</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><code class="hljs dart">  Widget build(BuildContext context) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><code class="hljs dart">    <span class="hljs-keyword">return</span> Center(</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><code class="hljs dart">      child: Column(</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><code class="hljs dart">        mainAxisAlignment: MainAxisAlignment.center,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><code class="hljs dart">        children: &lt;Widget&gt;[</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><code class="hljs dart">          ScopedModelDescendant&lt;CounterModel&gt;(</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><code class="hljs dart">            rebuildOnChange: <span class="hljs-keyword">false</span>,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><code class="hljs dart">            builder: (context, child, model) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><code class="hljs dart">              <span class="hljs-built_in">print</span>(<span class="hljs-string">'add'</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><code class="hljs dart">              <span class="hljs-keyword">return</span> FlatButton(</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><code class="hljs dart">                onPressed: model.increment,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><code class="hljs dart">                child: Icon(Icons.add),</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><code class="hljs dart">                color: Colors.blue,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><code class="hljs dart">              );</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><code class="hljs dart">            &#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><code class="hljs dart">          ),</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><code class="hljs dart">          ScopedModelDescendant&lt;CounterModel&gt;(</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><code class="hljs dart">            builder: (context, child, model) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><code class="hljs dart">              <span class="hljs-built_in">print</span>(<span class="hljs-string">'Text ---<span class="hljs-subst">$&#123;model.count&#125;</span>'</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><code class="hljs dart">              <span class="hljs-keyword">return</span> Text(</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><code class="hljs dart">                model.count.toString(),</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><code class="hljs dart">              );</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><code class="hljs dart">            &#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><code class="hljs dart">          ),</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><code class="hljs dart">          ScopedModelDescendant&lt;CounterModel&gt;(</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><code class="hljs dart">            rebuildOnChange: <span class="hljs-keyword">false</span>,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><code class="hljs dart">            builder: (context, child, model) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><code class="hljs dart">              <span class="hljs-built_in">print</span>(<span class="hljs-string">'remove'</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><code class="hljs dart">              <span class="hljs-keyword">return</span> FlatButton(</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><code class="hljs dart">                onPressed: model.reduce,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><code class="hljs dart">                child: Icon(Icons.remove),</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><code class="hljs dart">                color: Colors.blue,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><code class="hljs dart">              );</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">62</span></pre></td><td class="code"><pre><code class="hljs dart">            &#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">63</span></pre></td><td class="code"><pre><code class="hljs dart">          ),</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">64</span></pre></td><td class="code"><pre><code class="hljs dart">        ],</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">65</span></pre></td><td class="code"><pre><code class="hljs dart">      ),</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">66</span></pre></td><td class="code"><pre><code class="hljs dart">    );</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">67</span></pre></td><td class="code"><pre><code class="hljs dart">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">68</span></pre></td><td class="code"><pre><code class="hljs dart">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">69</span></pre></td><td class="code"><pre><code class="hljs dart"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">70</span></pre></td><td class="code"><pre><code class="hljs dart"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">SecondPage</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">StatefulWidget</span> </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">71</span></pre></td><td class="code"><pre><code class="hljs dart">  <span class="hljs-meta">@override</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">72</span></pre></td><td class="code"><pre><code class="hljs dart">  _SecondPageState createState() =&gt; _SecondPageState();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">73</span></pre></td><td class="code"><pre><code class="hljs dart">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">74</span></pre></td><td class="code"><pre><code class="hljs dart"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">75</span></pre></td><td class="code"><pre><code class="hljs dart"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">_SecondPageState</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">State</span>&lt;<span class="hljs-title">SecondPage</span>&gt; </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">76</span></pre></td><td class="code"><pre><code class="hljs dart">  <span class="hljs-meta">@override</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">77</span></pre></td><td class="code"><pre><code class="hljs dart">  Widget build(BuildContext context) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">78</span></pre></td><td class="code"><pre><code class="hljs dart">    <span class="hljs-keyword">final</span> count =</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">79</span></pre></td><td class="code"><pre><code class="hljs dart">        ScopedModel.of&lt;CounterModel&gt;(context, rebuildOnChange: <span class="hljs-keyword">true</span>).count;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">80</span></pre></td><td class="code"><pre><code class="hljs dart">    <span class="hljs-keyword">final</span> counterModel =</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">81</span></pre></td><td class="code"><pre><code class="hljs dart">        ScopedModel.of&lt;CounterModel&gt;(context, rebuildOnChange: <span class="hljs-keyword">false</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">82</span></pre></td><td class="code"><pre><code class="hljs dart"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">83</span></pre></td><td class="code"><pre><code class="hljs dart">    <span class="hljs-keyword">return</span> Scaffold(</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">84</span></pre></td><td class="code"><pre><code class="hljs dart">      appBar: AppBar(</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">85</span></pre></td><td class="code"><pre><code class="hljs dart">        title: Text(<span class="hljs-string">'SecondPage'</span>),</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">86</span></pre></td><td class="code"><pre><code class="hljs dart">        elevation: <span class="hljs-number">0.0</span>,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">87</span></pre></td><td class="code"><pre><code class="hljs dart">      ),</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">88</span></pre></td><td class="code"><pre><code class="hljs dart">      body: Center(</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">89</span></pre></td><td class="code"><pre><code class="hljs dart">        child: Column(</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">90</span></pre></td><td class="code"><pre><code class="hljs dart">          mainAxisAlignment: MainAxisAlignment.center,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">91</span></pre></td><td class="code"><pre><code class="hljs dart">          children: &lt;Widget&gt;[</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">92</span></pre></td><td class="code"><pre><code class="hljs dart">            Text(<span class="hljs-string">'<span class="hljs-subst">$count</span>'</span>),</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">93</span></pre></td><td class="code"><pre><code class="hljs dart">            FlatButton(</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">94</span></pre></td><td class="code"><pre><code class="hljs dart">              onPressed: counterModel.reduce,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">95</span></pre></td><td class="code"><pre><code class="hljs dart">              child: Icon(Icons.remove),</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">96</span></pre></td><td class="code"><pre><code class="hljs dart">              color: Colors.blue,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">97</span></pre></td><td class="code"><pre><code class="hljs dart">            )</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">98</span></pre></td><td class="code"><pre><code class="hljs dart">          ],</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">99</span></pre></td><td class="code"><pre><code class="hljs dart">        ),</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">100</span></pre></td><td class="code"><pre><code class="hljs dart">      ),</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">101</span></pre></td><td class="code"><pre><code class="hljs dart">      floatingActionButton: FloatingActionButton(</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">102</span></pre></td><td class="code"><pre><code class="hljs dart">        onPressed: ()&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">103</span></pre></td><td class="code"><pre><code class="hljs dart">          counterModel.increment();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">104</span></pre></td><td class="code"><pre><code class="hljs dart">        &#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">105</span></pre></td><td class="code"><pre><code class="hljs dart">        tooltip: <span class="hljs-string">'Increment'</span>,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">106</span></pre></td><td class="code"><pre><code class="hljs dart">        child: <span class="hljs-keyword">new</span> Icon(Icons.add),</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">107</span></pre></td><td class="code"><pre><code class="hljs dart">      ),</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">108</span></pre></td><td class="code"><pre><code class="hljs dart">    );</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">109</span></pre></td><td class="code"><pre><code class="hljs dart">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">110</span></pre></td><td class="code"><pre><code class="hljs dart">&#125;</code></pre></td></tr></table></figure><p>Scoped_model 提供了两种获取model的方式。</p><p>第一种：ScopedModelDescendant.<br>rebuildOnChange用来控制当该状态发生变化时，是否rebuild。</p><pre><code class="lang-dart">ScopedModelDescendant&lt;CounterModel&gt;(   rebuildOnChange: true,   builder: (context, child, model) {     print(&#39;Text ---${model.count}&#39;);     return Text(        model.count.toString(),     );  },),</code></pre><p>第二章：ScopedModel.of<br>需要在Model中重写of方法。</p><blockquote><p>  static CounterModel of(BuildContext context) =&gt; ScopedModel.of<CounterModel>(context);</CounterModel></p></blockquote><p>然后直接通过CounterModel获取model实例</p><blockquote><p>final counterModel = ScopedModel.of<CounterModel>(context, rebuildOnChange: false);</CounterModel></p></blockquote><h1 id="监听多个model"><a href="#监听多个model" class="headerlink" title="监听多个model"></a>监听多个model</h1><p>通过Mixin进行混入。</p><blockquote><p>class CounterModel extends Model with ClickModel{}</p></blockquote><p>虽然有效果，但是编辑器提示错误：说不能进行 Mixin。这个问题待解决</p><blockquote><p>The class ‘ClickModel’ can’t be used as a mixin because it extends a class other than Object.</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Flutter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 状态管理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flutter状态管理之InheritedWidget</title>
      <link href="/2020/06/05/Flutter%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86%E4%B9%8BInheritedWidget/"/>
      <url>/2020/06/05/Flutter%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86%E4%B9%8BInheritedWidget/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="1-创建数据模型-CounterModel"><a href="#1-创建数据模型-CounterModel" class="headerlink" title="1.创建数据模型 CounterModel"></a>1.创建数据模型 CounterModel</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs dart"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CounterModel</span> </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs dart">  <span class="hljs-keyword">final</span> <span class="hljs-built_in">int</span> count;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs dart">  <span class="hljs-keyword">const</span> CounterModel(<span class="hljs-keyword">this</span>.count);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs dart">&#125;</code></pre></td></tr></table></figure><h2 id="2-创建-InheritedWidget"><a href="#2-创建-InheritedWidget" class="headerlink" title="2.创建 InheritedWidget"></a>2.创建 InheritedWidget</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs dart"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CounterInherited</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">InheritedWidget</span> </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs dart">  Widget child;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs dart">  <span class="hljs-keyword">final</span> data;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs dart">  CounterInherited(&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs dart">    Key key,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs dart">    <span class="hljs-meta">@required</span> <span class="hljs-keyword">this</span>.child,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs dart">    <span class="hljs-meta">@required</span> <span class="hljs-keyword">this</span>.data,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs dart">  &#125;) : <span class="hljs-keyword">super</span>(key: key, child: child);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs dart">  <span class="hljs-meta">@override</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs dart">  <span class="hljs-built_in">bool</span> updateShouldNotify(CounterInherited oldWidget) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs dart">    <span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs dart">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs dart">&#125;</code></pre></td></tr></table></figure><h2 id="3-用CounterInherited包装Widget树"><a href="#3-用CounterInherited包装Widget树" class="headerlink" title="3.用CounterInherited包装Widget树"></a>3.用CounterInherited包装Widget树</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs dart"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CounterInheritedWidget</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">StatefulWidget</span> </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs dart">  <span class="hljs-keyword">final</span> Widget child;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs dart">  CounterInheritedWidget(&#123;Key key, <span class="hljs-keyword">this</span>.child&#125;) : <span class="hljs-keyword">super</span>(key: key);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs dart">  <span class="hljs-meta">@override</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs dart">  CounterInheritedWidgetState createState() =&gt; CounterInheritedWidgetState();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs dart">  <span class="hljs-keyword">static</span> CounterInheritedWidgetState of(BuildContext context, <span class="hljs-built_in">bool</span> rebuild)&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs dart">    <span class="hljs-keyword">return</span> (rebuild ? context.dependOnInheritedWidgetOfExactType&lt;CounterInherited&gt;() : context.findAncestorWidgetOfExactType&lt;CounterInherited&gt;()).data;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs dart">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs dart">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs dart"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CounterInheritedWidgetState</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">State</span>&lt;<span class="hljs-title">CounterInheritedWidget</span>&gt; </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs dart">  CounterModel counter = CounterModel(<span class="hljs-number">0</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs dart">  <span class="hljs-built_in">int</span> <span class="hljs-keyword">get</span> count =&gt; counter.count;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs dart">  <span class="hljs-keyword">void</span> increment()&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs dart">    <span class="hljs-keyword">if</span> (count &lt; <span class="hljs-number">10</span>) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs dart">      counter = CounterModel(counter.count+<span class="hljs-number">1</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs dart">      setState(() &#123;&#125;);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs dart">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs dart">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><code class="hljs dart">  <span class="hljs-keyword">void</span> reduce()&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><code class="hljs dart">    counter = CounterModel(counter.count<span class="hljs-number">-1</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><code class="hljs dart">    setState(() &#123;&#125;);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><code class="hljs dart">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><code class="hljs dart">  <span class="hljs-keyword">void</span> cleaar()&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><code class="hljs dart">    counter = CounterModel(<span class="hljs-number">0</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><code class="hljs dart">    setState(() &#123;&#125;);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><code class="hljs dart">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><code class="hljs dart">  <span class="hljs-meta">@override</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><code class="hljs dart">  Widget build(BuildContext context) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><code class="hljs dart">    <span class="hljs-keyword">return</span> CounterInherited(</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><code class="hljs dart">      data: <span class="hljs-keyword">this</span>,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><code class="hljs dart">      child: widget.child,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><code class="hljs dart">    );</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><code class="hljs dart">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><code class="hljs dart">&#125;</code></pre></td></tr></table></figure><h2 id="4-组件容器"><a href="#4-组件容器" class="headerlink" title="4.组件容器"></a>4.组件容器</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs dart"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CounterWidget</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">StatefulWidget</span> </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs dart">  <span class="hljs-meta">@override</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs dart">  _CounterWidgetState createState() =&gt; _CounterWidgetState();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs dart">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs dart"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs dart"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">_CounterWidgetState</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">State</span>&lt;<span class="hljs-title">CounterWidget</span>&gt; </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs dart">  <span class="hljs-meta">@override</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs dart">  Widget build(BuildContext context) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs dart">    <span class="hljs-keyword">return</span> CounterInheritedWidget(</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs dart">      child: Scaffold(</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs dart">        appBar: AppBar(</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs dart">          title: Text(<span class="hljs-string">'InheritedWidgetDemo'</span>),</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs dart">          elevation: <span class="hljs-number">0.0</span>,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs dart">        ),</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs dart">        body: Center(</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs dart">          child: Column(</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs dart">            mainAxisAlignment: MainAxisAlignment.center,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs dart">            children: &lt;Widget&gt;[</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><code class="hljs dart">              IncrementWidget(),</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><code class="hljs dart">              Counter(),</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><code class="hljs dart">              ReduceWidget(),</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><code class="hljs dart">              StatelessWidgetDemo(),</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><code class="hljs dart">            ],</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><code class="hljs dart">          ),</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><code class="hljs dart">        ),</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><code class="hljs dart">      ),</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><code class="hljs dart">    );</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><code class="hljs dart">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><code class="hljs dart">&#125;</code></pre></td></tr></table></figure><h2 id="5-拆分组件"><a href="#5-拆分组件" class="headerlink" title="5.拆分组件"></a>5.拆分组件</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs dart"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Counter</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">StatelessWidget</span> </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs dart">  <span class="hljs-meta">@override</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs dart">  Widget build(BuildContext context) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs dart">    <span class="hljs-keyword">final</span> CounterInheritedWidgetState state = CounterInheritedWidget.of(context,<span class="hljs-keyword">true</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs dart">    <span class="hljs-built_in">print</span>(<span class="hljs-string">'Counter -- CounterModel 中的count值：<span class="hljs-subst">$&#123;state.count&#125;</span>'</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs dart">    <span class="hljs-keyword">return</span> Container(</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs dart">      child: ActionChip(</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs dart">        label: Text(<span class="hljs-string">'<span class="hljs-subst">$&#123;state.count&#125;</span>'</span>),</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs dart">        onPressed: state.cleaar</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs dart">      ),</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs dart">    );</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs dart">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs dart">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs dart"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs dart"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">IncrementWidget</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">StatelessWidget</span> </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs dart">  <span class="hljs-meta">@override</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs dart">  Widget build(BuildContext context) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs dart">    <span class="hljs-keyword">final</span> CounterInheritedWidgetState state = CounterInheritedWidget.of(context,<span class="hljs-keyword">false</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><code class="hljs dart">    <span class="hljs-built_in">print</span>(<span class="hljs-string">'IncrementWidget ---- CounterModel 中的count值：<span class="hljs-subst">$&#123;state.count&#125;</span>'</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><code class="hljs dart">    <span class="hljs-keyword">return</span> Container(</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><code class="hljs dart">      child: FlatButton(</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><code class="hljs dart">        onPressed: state.increment,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><code class="hljs dart">        child: Icon(Icons.add),</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><code class="hljs dart">        color: Colors.blue,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><code class="hljs dart">        textColor: Colors.white,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><code class="hljs dart">      ),</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><code class="hljs dart">    );</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><code class="hljs dart">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><code class="hljs dart">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><code class="hljs dart"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><code class="hljs dart"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ReduceWidget</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">StatelessWidget</span> </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><code class="hljs dart">  <span class="hljs-meta">@override</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><code class="hljs dart">  Widget build(BuildContext context) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><code class="hljs dart">    <span class="hljs-keyword">final</span> CounterInheritedWidgetState state = CounterInheritedWidget.of(context,<span class="hljs-keyword">false</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><code class="hljs dart">    <span class="hljs-built_in">print</span>(<span class="hljs-string">'ReduceWidget  ---  CounterModel 中的count值：<span class="hljs-subst">$&#123;state.count&#125;</span>'</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><code class="hljs dart">    <span class="hljs-keyword">return</span> Container(</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><code class="hljs dart">      child: FlatButton(</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><code class="hljs dart">        onPressed: state.reduce,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><code class="hljs dart">        child: Icon(Icons.remove),</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><code class="hljs dart">        color: Colors.blue,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><code class="hljs dart">        textColor: Colors.white,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><code class="hljs dart">      ),</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><code class="hljs dart">    );</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><code class="hljs dart">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><code class="hljs dart">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><code class="hljs dart"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><code class="hljs dart"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><code class="hljs dart"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">StatelessWidgetDemo</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">StatelessWidget</span> </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><code class="hljs dart">  <span class="hljs-meta">@override</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><code class="hljs dart">  Widget build(BuildContext context) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><code class="hljs dart">    <span class="hljs-built_in">print</span>(<span class="hljs-string">'StatelessWidgetDemo'</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><code class="hljs dart">    <span class="hljs-keyword">return</span> Container(</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><code class="hljs dart">      padding: EdgeInsets.all(<span class="hljs-number">8.0</span>),</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><code class="hljs dart">      child: Text(<span class="hljs-string">'无状态Widget'</span>),</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><code class="hljs dart">    );</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><code class="hljs dart">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><code class="hljs dart">&#125;</code></pre></td></tr></table></figure><p>在这个例子中：</p><pre><code>* `CounterModel` 是保存数据的模型* `CounterInherited` 继承了 `InheritedWidget` ,每次点击按钮改变时都会重新构建它。* 让 `CounterInheritedWidget` 作为 `Widget` 树的父级。内部定义了操作方法以及数据* 点击 `IncrementWidget` 小部件时， 通过 `CounterInheritedWidget.of(context,false);` 获得 `CounterInheritedWidgetState`实例，执行 `increment` 方法改变 `CounterModel`模型的数据。然后`Counter`通过`CounterInheritedWidgetState`更新数据.</code></pre><p><code>static CounterInheritedWidgetState of(BuildContext context, bool rebuild){}</code> 方法中，通过传递 <code>rebuild</code> 来控制是否重构小部件。</p>]]></content>
      
      
      <categories>
          
          <category> Flutter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 状态管理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flutter应用权限配置</title>
      <link href="/2020/06/01/Flutter%E5%BA%94%E7%94%A8%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE/"/>
      <url>/2020/06/01/Flutter%E5%BA%94%E7%94%A8%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="配置文件-Android"><a href="#配置文件-Android" class="headerlink" title="配置文件 Android"></a>配置文件 Android</h1><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs taggerscript">android<span class="hljs-symbol">\a</span>pp<span class="hljs-symbol">\s</span>rc<span class="hljs-symbol">\m</span>ain<span class="hljs-symbol">\A</span>ndroidManifest.xml</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs taggerscript">android<span class="hljs-symbol">\a</span>pp<span class="hljs-symbol">\s</span>rc<span class="hljs-symbol">\p</span>rofile<span class="hljs-symbol">\A</span>ndroidManifest.xml</code></pre></td></tr></table></figure><h1 id="权限列表-Android"><a href="#权限列表-Android" class="headerlink" title="权限列表 Android"></a>权限列表 Android</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 允许一个程序访问CellID或WiFi热点来获取粗略的位置 --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">uses-permission</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">"android.permission.ACCESS_COARSE_LOCATION"</span>/&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 允许程序打开网络套接字 --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">uses-permission</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">"android.permission.INTERNET"</span> /&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 允许程序访问有关GSM网络信息 --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">uses-permission</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">"android.permission.ACCESS_NETWORK_STATE"</span> /&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 允许程序访问Wi-Fi网络状态信息 --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">uses-permission</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">"android.permission.ACCESS_WIFI_STATE"</span> /&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 允许一个程序访问精良位置(如GPS)  --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">uses-permission</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">"android.permission.ACCESS_FINE_LOCATION"</span>/&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 请求访问使用照相设备 --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">uses-permission</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">"android.permission.CAMERA"</span>/&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 允许程序发布系统级服务 --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">uses-permission</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">"android.permission.ADD_SYSTEM_SERVICE"</span>/&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 允许程序更新手机电池统计信息 --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">uses-permission</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">"android.permission.BATTERY_STATS"</span>/&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 允许程序连接到已配对的蓝牙设备 --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">uses-permission</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">"android.permission.BLUETOOTH"</span>/&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 允许一个程序初始化一个电话拨号不需通过拨号用户界面需要用户确认 --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">uses-permission</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">"android.permission.CALL_PHONE"</span>/&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 允许程序删除缓存文件 --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">uses-permission</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">"android.permission.DELETE_CACHE_FILES"</span>/&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 允许一个程序删除包 --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">uses-permission</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">"android.permission.DELETE_PACKAGES"</span>/&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 允许一个程序初始化一个电话拨号不需通过拨号用户界面需要用户确认 --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">uses-permission</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">"android.permission.CALL_PHONE"</span>/&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 允许程序读取用户联系人数据 --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">uses-permission</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">"android.permission.READ_CONTACTS"</span>/&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 允许程序读取用户日历数据 --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">uses-permission</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">"android.permission.READ_CALENDAR"</span>/&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 允许程序录制音频 --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">uses-permission</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">"android.permission.RECORD_AUDIO"</span>/&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 允许一个程序初始化一个电话拨号不需通过拨号用户界面需要用户确认 --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">uses-permission</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">"android.permission.CALL_PHONE"</span>/&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 允许一个程序写入但不读取用户日历数据 --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">uses-permission</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">"android.permission.WRITE_CALENDAR"</span>/&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 允许程序写入但不读取用户联系人数据 --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">uses-permission</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">"android.permission.WRITE_CONTACTS"</span>/&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 允许一个程序初始化一个电话拨号不需通过拨号用户界面需要用户确认 --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">uses-permission</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">"android.permission.CALL_PHONE"</span>/&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 允许一个程序初始化一个电话拨号不需通过拨号用户界面需要用户确认 --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">uses-permission</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">"android.permission.CALL_PHONE"</span>/&gt;</span></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Flutter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flutter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flutter之Android打包</title>
      <link href="/2020/06/01/Flutter%E4%B9%8BAndroid%E6%89%93%E5%8C%85/"/>
      <url>/2020/06/01/Flutter%E4%B9%8BAndroid%E6%89%93%E5%8C%85/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="1-生成-key"><a href="#1-生成-key" class="headerlink" title="1.生成 key"></a>1.生成 key</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs bash">keytool -genkey -v -keystore my-reyarn lease-key.jks -keyalg RSA -keysize 2048 -validity 10000 -<span class="hljs-built_in">alias</span> key</code></pre></td></tr></table></figure><ol><li>-keystore 参数后的值: my-release-key.jks,是生成的key的文件名和存放路径</li><li>-alias 参数后的值: key 是key的名称</li></ol><p>执行之后会填写一些信息按照提示填写即可,生成的key,copy到 <code>android/app</code> 下,或者直接生成时填写完整地址.</p><h1 id="2-配置-key"><a href="#2-配置-key" class="headerlink" title="2.配置 key"></a>2.配置 key</h1><p>在<code>&lt;app dir&gt;/android/</code>目录下新建文件<code>key.properties</code></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">storePassword</span>=secret</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">keyPassword</span>=secret</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">keyAlias</span>=key</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">storeFile</span>=my-release-key.jks</code></pre></td></tr></table></figure><ul><li>storePassword 就是创建key时填写的口令,</li><li>keyPassword 填写口令即可</li><li>keyAlias 就时 -alias 后面的值</li><li>storeFile key的文件名</li></ul><h1 id="3-配置-gradle"><a href="#3-配置-gradle" class="headerlink" title="3.配置 gradle"></a>3.配置 gradle</h1><p><app dir>/android/app/build.gradle</app></p><p>修改这个代码块<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs armasm"><span class="hljs-keyword">android </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs armasm">      ...</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs armasm">&#125;</code></pre></td></tr></table></figure><br>修改之后<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">keystoreProperties</span> = <span class="hljs-title">new</span> <span class="hljs-title">Properties</span><span class="hljs-params">()</span></span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs ruby">   <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">keystorePropertiesFile</span> = <span class="hljs-title">rootProject</span>.<span class="hljs-title">file</span><span class="hljs-params">(<span class="hljs-string">'key.properties'</span>)</span></span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs ruby">   <span class="hljs-keyword">if</span> (keystorePropertiesFile.exists()) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs ruby">       keystoreProperties.load(new FileInputStream(keystorePropertiesFile))</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs ruby">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs ruby">android &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs ruby">         ...</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs ruby">&#125;</code></pre></td></tr></table></figure></p><p>然后替换<br><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-class">buildTypes </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs dts">    <span class="hljs-class">release </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs dts">        <span class="hljs-comment">// <span class="hljs-doctag">TODO:</span> Add your own signing config for the release build.</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs dts">        <span class="hljs-comment">// Signing with the debug keys for now,</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs dts">        <span class="hljs-comment">// so `flutter run --release` works.</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs dts">        signingConfig signingConfigs.debug</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs dts">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs dts">&#125;</code></pre></td></tr></table></figure></p><p>为<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">signingConfigs</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs nginx">    <span class="hljs-section">release</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs nginx">        <span class="hljs-attribute">keyAlias</span> keystoreProperties[<span class="hljs-string">'keyAlias'</span>]</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs nginx">        keyPassword keystoreProperties[<span class="hljs-string">'keyPassword'</span>]</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs nginx">        storeFile keystoreProperties[<span class="hljs-string">'storeFile'</span>] ? file(keystoreProperties[<span class="hljs-string">'storeFile'</span>]) : null</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs nginx">        storePassword keystoreProperties[<span class="hljs-string">'storePassword'</span>]</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs nginx">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs nginx">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs nginx">buildTypes &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs nginx">    <span class="hljs-section">release</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs nginx">        <span class="hljs-attribute">signingConfig</span> signingConfigs.release</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs nginx">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs nginx">&#125;</code></pre></td></tr></table></figure></p><h1 id="3-生成apk"><a href="#3-生成apk" class="headerlink" title="3.生成apk"></a>3.生成apk</h1><p>最后执行打包命令<br>生成的apk目录:<code>build\app\outputs\apk\app.apk</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs bash">flutter build apk</code></pre></td></tr></table></figure><p>官方文档:<a href="https://flutter.dev/docs/deployment/android" target="_blank" rel="noopener">https://flutter.dev/docs/deployment/android</a></p>]]></content>
      
      
      <categories>
          
          <category> Flutter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flutter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>函数节流与函数防抖</title>
      <link href="/2020/06/01/%E5%87%BD%E6%95%B0%E8%8A%82%E6%B5%81%E4%B8%8E%E5%87%BD%E6%95%B0%E9%98%B2%E6%8A%96/"/>
      <url>/2020/06/01/%E5%87%BD%E6%95%B0%E8%8A%82%E6%B5%81%E4%B8%8E%E5%87%BD%E6%95%B0%E9%98%B2%E6%8A%96/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="函数防抖-debounce"><a href="#函数防抖-debounce" class="headerlink" title="函数防抖(debounce)"></a>函数防抖(debounce)</h1><p>函数防抖是指在事件被触发n秒后再执行回调，如果在这n秒内又被触发，则重新计时。</p><p>例如我们需要做一个实时查询的输入框,需要在用户停止输入就发送请求.当用户输入时会清除上一个还未执行的<code>setTimeout</code>,然后创建一个新的<br><code>setTimeout</code>,这样如果用户一直输入的话,就不会执行<code>fn</code>函数</p><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> debounce = <span class="hljs-function">(<span class="hljs-params">fn, interval = <span class="hljs-number">300</span></span>) =&gt;</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">let</span> timer = <span class="hljs-literal">null</span> ;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">    clearTimeout(timer);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">    timer = setTimeout(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">      fn.apply(<span class="hljs-keyword">this</span>, <span class="hljs-built_in">arguments</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">    &#125;, interval);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr></table></figure><h1 id="函数节流-throttle"><a href="#函数节流-throttle" class="headerlink" title="函数节流(throttle)"></a>函数节流(throttle)</h1><p>函数节流是指规定一个时间，在这个时间内，只能有一次触发事件的回调函数执行，<br>如果在同一个时间内某事件被触发多次，只有一次能生效。</p><p>例如我们需要判断页面是否滚动到底部,一般我们监听<code>window</code>对象的<code>scroll</code>事件,但是这样浏览器滚动时,我们就会不断的执行这个判断逻辑.<br>然而我们实际上只需要隔一段时间来进行逻辑判断.</p><h2 id="实现-1"><a href="#实现-1" class="headerlink" title="实现"></a>实现</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> throttle = <span class="hljs-function">(<span class="hljs-params">fn, interval = <span class="hljs-number">300</span></span>) =&gt;</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">let</span> run = <span class="hljs-literal">true</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">        <span class="hljs-keyword">if</span> (!run)<span class="hljs-keyword">return</span>;  </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">        run = <span class="hljs-literal">false</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">        setTimeout(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">            fn.apply(<span class="hljs-keyword">this</span>, <span class="hljs-built_in">arguments</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">            run = <span class="hljs-literal">true</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript">        &#125;, interval);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript">    &#125;;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Function </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript工具函数</title>
      <link href="/2020/06/01/JavaScript%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%E5%87%BD%E6%95%B0/"/>
      <url>/2020/06/01/JavaScript%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="验证规则"><a href="#验证规则" class="headerlink" title="验证规则"></a>验证规则</h1><h2 id="验证邮箱"><a href="#验证邮箱" class="headerlink" title="验证邮箱"></a>验证邮箱</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> isEmail = <span class="hljs-function">(<span class="hljs-params">email</span>) =&gt;</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">return</span> <span class="hljs-regexp">/^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((.[a-zA-Z0-9_-]&#123;2,3&#125;)&#123;1,2&#125;)$/</span>.test(email);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr></table></figure><h2 id="验证手机号码"><a href="#验证手机号码" class="headerlink" title="验证手机号码"></a>验证手机号码</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> isMobile = <span class="hljs-function">(<span class="hljs-params">phone</span>) =&gt;</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">return</span> <span class="hljs-regexp">/^1(3|4|5|6|7|8|9)\d&#123;9&#125;$/</span>.test(phone);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr></table></figure><h2 id="验证电话号码"><a href="#验证电话号码" class="headerlink" title="验证电话号码"></a>验证电话号码</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> isTelPhone = <span class="hljs-function">(<span class="hljs-params">phone</span>) =&gt;</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">return</span> <span class="hljs-regexp">/^0\d&#123;2,3&#125;-?\d&#123;7,8&#125;$^/</span>.test(phone);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr></table></figure><h2 id="判断是否是身份证号"><a href="#判断是否是身份证号" class="headerlink" title="判断是否是身份证号"></a>判断是否是身份证号</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> isIdCard = <span class="hljs-function">(<span class="hljs-params">str</span>) =&gt;</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> reg = <span class="hljs-regexp">/^[1-9]\d&#123;5&#125;(18|19|([23]\d))\d&#123;2&#125;((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\d&#123;3&#125;[0-9Xx]$/</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">return</span> reg.test(str);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr></table></figure><h2 id="判断是否中文"><a href="#判断是否中文" class="headerlink" title="判断是否中文"></a>判断是否中文</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> isChina = <span class="hljs-function">(<span class="hljs-params">str</span>) =&gt;</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> reg = <span class="hljs-regexp">/^[\\u4E00-\\u9FA5]&#123;2,4&#125;$/</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">return</span> reg.test(str);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr></table></figure><h1 id="单位转化"><a href="#单位转化" class="headerlink" title="单位转化"></a>单位转化</h1><h2 id="将金额转化为带单位的字符串"><a href="#将金额转化为带单位的字符串" class="headerlink" title="将金额转化为带单位的字符串"></a>将金额转化为带单位的字符串</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> formatterUnit = <span class="hljs-function">(<span class="hljs-params">value</span>) =&gt;</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">return</span> <span class="hljs-string">`$ <span class="hljs-subst">$&#123;value&#125;</span>`</span>.replace(<span class="hljs-regexp">/\B(?=(\d&#123;3&#125;)+(?!\d))/g</span>, <span class="hljs-string">','</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr></table></figure><h2 id="将带单位的金额转化为数字"><a href="#将带单位的金额转化为数字" class="headerlink" title="将带单位的金额转化为数字"></a>将带单位的金额转化为数字</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> parserUnit = <span class="hljs-function">(<span class="hljs-params">value</span>) =&gt;</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">return</span> value.replace(<span class="hljs-regexp">/\$\s?|(,*)/g</span>, <span class="hljs-string">''</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr></table></figure><h2 id="将单词转换为首字母大写"><a href="#将单词转换为首字母大写" class="headerlink" title="将单词转换为首字母大写"></a>将单词转换为首字母大写</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> wordUpper = <span class="hljs-function">(<span class="hljs-params">word</span>) =&gt;</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">return</span> word.replace(word[<span class="hljs-number">0</span>], word[<span class="hljs-number">0</span>].toUpperCase());</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr></table></figure><h1 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h1><h2 id="检查一个对象是否有子元素"><a href="#检查一个对象是否有子元素" class="headerlink" title="检查一个对象是否有子元素"></a>检查一个对象是否有子元素</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> hasChildren = <span class="hljs-function">(<span class="hljs-params">item = &#123;&#125;, keyname = <span class="hljs-string">"children"</span></span>) =&gt;</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">return</span> item[keyname] &amp;&amp; <span class="hljs-built_in">Array</span>.isArray(item[keyname]) &amp;&amp; item[keyname].length &gt; <span class="hljs-number">0</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr></table></figure><h2 id="表单元素转化为对象"><a href="#表单元素转化为对象" class="headerlink" title="表单元素转化为对象"></a>表单元素转化为对象</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> formToObject = <span class="hljs-function">(<span class="hljs-params">form</span>) =&gt;</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">return</span> <span class="hljs-built_in">Array</span>.from(<span class="hljs-keyword">new</span> FormData(form)).reduce(<span class="hljs-function">(<span class="hljs-params">acc, [key, value]</span>) =&gt;</span> (&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">...acc,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">[key]: value</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;), &#123;&#125;, );</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr></table></figure><h2 id="从给定的键值对创建对象"><a href="#从给定的键值对创建对象" class="headerlink" title="从给定的键值对创建对象"></a>从给定的键值对创建对象</h2><p>使用<code>Array.reduce()</code>创建和组合键值对<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> objectFromPairs = <span class="hljs-function"><span class="hljs-params">arr</span> =&gt;</span> arr.reduce(<span class="hljs-function">(<span class="hljs-params">a, v</span>) =&gt;</span> (a[v[<span class="hljs-number">0</span>]] = v[<span class="hljs-number">1</span>], a), &#123;&#125;);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// objectFromPairs([['a',1],['b',2]]) -&gt; &#123;a: 1, b: 2&#125;</span></code></pre></td></tr></table></figure></p><h1 id="Array"><a href="#Array" class="headerlink" title="Array"></a>Array</h1><h2 id="对象数组去重"><a href="#对象数组去重" class="headerlink" title="对象数组去重"></a>对象数组去重</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> removalArr = <span class="hljs-function">(<span class="hljs-params">arr</span>) =&gt;</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">return</span> [...new <span class="hljs-built_in">Set</span>(arr.map(<span class="hljs-function"><span class="hljs-params">v</span> =&gt;</span> <span class="hljs-built_in">JSON</span>.stringify(v)))].map(<span class="hljs-function"><span class="hljs-params">v</span> =&gt;</span> <span class="hljs-built_in">JSON</span>.parse(v));</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr></table></figure><h2 id="获取数组交集"><a href="#获取数组交集" class="headerlink" title="获取数组交集"></a>获取数组交集</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> intersection = <span class="hljs-function">(<span class="hljs-params">list, ...args</span>) =&gt;</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">return</span> list.filter(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> args.every(<span class="hljs-function"><span class="hljs-params">list</span> =&gt;</span> list.includes(item)));</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr></table></figure><h2 id="分割指定长度的元素数组"><a href="#分割指定长度的元素数组" class="headerlink" title="分割指定长度的元素数组"></a>分割指定长度的元素数组</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> listChunk = <span class="hljs-function">(<span class="hljs-params">list, size = <span class="hljs-number">1</span>, cacheList = []</span>) =&gt;</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> tmp = [...list];</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">if</span> (size &lt;= <span class="hljs-number">0</span>) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">return</span> cacheList;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">while</span> (tmp.length) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">cacheList.push(tmp.splice(<span class="hljs-number">0</span>, size));</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">return</span> cacheList;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr></table></figure><h2 id="返回数组中的最大值"><a href="#返回数组中的最大值" class="headerlink" title="返回数组中的最大值"></a>返回数组中的最大值</h2><p>将<code>Math.max()</code>与扩展运算符 (<code>...</code>) 结合使用以获取数组中的最大值<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> arrayMax = <span class="hljs-function"><span class="hljs-params">arr</span> =&gt;</span> <span class="hljs-built_in">Math</span>.max(...arr);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// arrayMax([10, 1, 5]) -&gt; 10</span></code></pre></td></tr></table></figure></p><h2 id="返回数组中的最小值"><a href="#返回数组中的最小值" class="headerlink" title="返回数组中的最小值"></a>返回数组中的最小值</h2><p>将<code>Math.min()</code>与扩展运算符 (<code>...</code>) 结合使用以获取数组中的最小值<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> arrayMin = <span class="hljs-function"><span class="hljs-params">arr</span> =&gt;</span> <span class="hljs-built_in">Math</span>.min(...arr);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// arrayMin([10, 1, 5]) -&gt; 1</span></code></pre></td></tr></table></figure></p><h2 id="将数组块划分为指定大小的较小数组"><a href="#将数组块划分为指定大小的较小数组" class="headerlink" title="将数组块划分为指定大小的较小数组"></a>将数组块划分为指定大小的较小数组</h2><p>使用<code>Array.from()</code>创建新的数组, 这符合将生成的区块数。<br>使用<code>Array.slice()</code>将新数组的每个元素映射到<code>size</code>长度的区块。<br>如果原始数组不能均匀拆分, 则最终的块将包含剩余的元素。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> chunk = <span class="hljs-function">(<span class="hljs-params">arr, size</span>) =&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">Array</span>.from(&#123;<span class="hljs-attr">length</span>: <span class="hljs-built_in">Math</span>.ceil(arr.length / size)&#125;, (v, i) =&gt; arr.slice(i * size, i * size + size));</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// chunk([1,2,3,4,5], 2) -&gt; [[1,2],[3,4],[5]]</span></code></pre></td></tr></table></figure></p><h2 id="从数组中移除-falsey-值"><a href="#从数组中移除-falsey-值" class="headerlink" title="从数组中移除 falsey 值"></a>从数组中移除 <code>falsey</code> 值</h2><p>使用<code>Array.filter()</code>筛选出 <code>falsey</code> 值 (<code>false</code>、<code>null</code>、 <code>0</code>、 <code>&quot;&quot;&quot;</code>、<code>undefined</code>和<code>NaN</code>).</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> compact = <span class="hljs-function">(<span class="hljs-params">arr</span>) =&gt;</span> arr.filter(<span class="hljs-built_in">Boolean</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// compact([0, 1, false, 2, '', 3, 'a', 'e'*23, NaN, 's', 34]) -&gt; [ 1, 2, 3, 'a', 's', 34 ]</span></code></pre></td></tr></table></figure><h2 id="计算数组中值的出现次数"><a href="#计算数组中值的出现次数" class="headerlink" title="计算数组中值的出现次数"></a>计算数组中值的出现次数</h2><p>使用<code>Array.reduce()</code>在每次遇到数组中的特定值时递增计数器。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> countOccurrences = <span class="hljs-function">(<span class="hljs-params">arr, value</span>) =&gt;</span> arr.reduce(<span class="hljs-function">(<span class="hljs-params">a, v</span>) =&gt;</span> v === value ? a + <span class="hljs-number">1</span> : a + <span class="hljs-number">0</span>, <span class="hljs-number">0</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// countOccurrences([1,1,2,1,2,3], 1) -&gt; 3</span></code></pre></td></tr></table></figure><h2 id="深拼合数组"><a href="#深拼合数组" class="headerlink" title="深拼合数组"></a>深拼合数组</h2><p>使用递归。使用<code>Array.concat()</code>与空数组 (<code>[]</code>) 和跨页运算符 (<code>...</code>) 来拼合数组。递归拼合作为数组的每个元素。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> deepFlatten = <span class="hljs-function"><span class="hljs-params">arr</span> =&gt;</span> [].concat(...arr.map(<span class="hljs-function"><span class="hljs-params">v</span> =&gt;</span> <span class="hljs-built_in">Array</span>.isArray(v) ? deepFlatten(v) : v));</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// deepFlatten([1,[2],[[3],4],5]) -&gt; [1,2,3,4,5]</span></code></pre></td></tr></table></figure></p><h2 id="返回两个数组之间的差异"><a href="#返回两个数组之间的差异" class="headerlink" title="返回两个数组之间的差异"></a>返回两个数组之间的差异</h2><p>从<code>b</code>创建<code>Set</code> , 然后使用<code>Array.filter()</code> on 只保留<code>a b</code>中不包含的值.<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> difference = <span class="hljs-function">(<span class="hljs-params">a, b</span>) =&gt;</span> &#123; <span class="hljs-keyword">const</span> s = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Set</span>(b); <span class="hljs-keyword">return</span> a.filter(<span class="hljs-function"><span class="hljs-params">x</span> =&gt;</span> !s.has(x)); &#125;;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// difference([1,2,3], [1,2,4]) -&gt; [3]</span></code></pre></td></tr></table></figure></p><h2 id="返回数组的所有不同值"><a href="#返回数组的所有不同值" class="headerlink" title="返回数组的所有不同值"></a>返回数组的所有不同值</h2><p>使用 <code>ES6 Set</code>和<code>...rest</code>运算符放弃所有重复的值。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> distinctValuesOfArray = <span class="hljs-function"><span class="hljs-params">arr</span> =&gt;</span> [...new <span class="hljs-built_in">Set</span>(arr)];</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// distinctValuesOfArray([1,2,2,3,4,4,5]) -&gt; [1,2,3,4,5]</span></code></pre></td></tr></table></figure></p><h2 id="移除数组中的元素-直到传递的函数返回true。返回数组中的其余元素"><a href="#移除数组中的元素-直到传递的函数返回true。返回数组中的其余元素" class="headerlink" title="移除数组中的元素, 直到传递的函数返回true。返回数组中的其余元素"></a>移除数组中的元素, 直到传递的函数返回true。返回数组中的其余元素</h2><p>在数组中循环, 使用<code>Array.shift()</code>将数组的第一个元素除去, 直到函数的返回值为<code>true</code>。返回其余元素。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> dropElements = <span class="hljs-function">(<span class="hljs-params">arr, func</span>) =&gt;</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">while</span> (arr.length &gt; <span class="hljs-number">0</span> &amp;&amp; !func(arr[<span class="hljs-number">0</span>])) arr.shift();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">return</span> arr;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// dropElements([1, 2, 3, 4], n =&gt; n &gt;= 3) -&gt; [3,4]</span></code></pre></td></tr></table></figure></p><h2 id="返回数组中的每个第-n-个元素"><a href="#返回数组中的每个第-n-个元素" class="headerlink" title="返回数组中的每个第 n 个元素"></a>返回数组中的每个第 n 个元素</h2><p>使用<code>Array.filter()</code>创建一个包含给定数组的每个第 <code>n</code> 个元素的新数组。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> everyNth = <span class="hljs-function">(<span class="hljs-params">arr, nth</span>) =&gt;</span> arr.filter(<span class="hljs-function">(<span class="hljs-params">e, i</span>) =&gt;</span> i % nth === <span class="hljs-number">0</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// everyNth([1,2,3,4,5,6], 2) -&gt; [ 1, 3, 5 ]</span></code></pre></td></tr></table></figure></p><h2 id="筛选出数组中的非唯一值。"><a href="#筛选出数组中的非唯一值。" class="headerlink" title="筛选出数组中的非唯一值。"></a>筛选出数组中的非唯一值。</h2><p>对于只包含唯一值的数组, 请使用<code>Array.filter()</code> 。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> filterNonUnique = <span class="hljs-function"><span class="hljs-params">arr</span> =&gt;</span> arr.filter(<span class="hljs-function"><span class="hljs-params">i</span> =&gt;</span> arr.indexOf(i) === arr.lastIndexOf(i));</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// filterNonUnique([1,2,2,3,4,4,5]) -&gt; [1,3,5]</span></code></pre></td></tr></table></figure></p><h2 id="拼合数组"><a href="#拼合数组" class="headerlink" title="拼合数组"></a>拼合数组</h2><p>使用<code>Array.reduce()</code>获取数组中的所有元素和<code>concat()</code>以拼合它们。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> flatten = <span class="hljs-function"><span class="hljs-params">arr</span> =&gt;</span> arr.reduce(<span class="hljs-function">(<span class="hljs-params">a, v</span>) =&gt;</span> a.concat(v), []);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// flatten([1,[2],3,4]) -&gt; [1,2,3,4]</span></code></pre></td></tr></table></figure></p><h2 id="返回数组中的随机元素"><a href="#返回数组中的随机元素" class="headerlink" title="返回数组中的随机元素"></a>返回数组中的随机元素</h2><p> 使用<code>Math.random()</code>生成一个随机数, 将它与<code>length</code>相乘, 并使用数学将其舍入到最接近的整数<code>Math.floor()</code>。<br> 此方法也适用于字符串。<br> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> sample = <span class="hljs-function"><span class="hljs-params">arr</span> =&gt;</span> arr[<span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random() * arr.length)];</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// sample([3, 7, 9, 11]) -&gt; 9</span></code></pre></td></tr></table></figure></p><h2 id="返回两个数组中都显示的元素的数组"><a href="#返回两个数组中都显示的元素的数组" class="headerlink" title="返回两个数组中都显示的元素的数组"></a>返回两个数组中都显示的元素的数组</h2><p>使用<code>filter()</code>可删除不属于<code>values</code>的值, 使用<code>includes()</code>确定<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> similarity = <span class="hljs-function">(<span class="hljs-params">arr, values</span>) =&gt;</span> arr.filter(<span class="hljs-function"><span class="hljs-params">v</span> =&gt;</span> values.includes(v));</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// similarity([1,2,3], [1,2,4]) -&gt; [1,2]</span></code></pre></td></tr></table></figure></p><h1 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h1><h2 id="如果页的底部可见-则返回true-否则为false"><a href="#如果页的底部可见-则返回true-否则为false" class="headerlink" title="如果页的底部可见, 则返回true , 否则为false"></a>如果页的底部可见, 则返回<code>true</code> , 否则为<code>false</code></h2><p>使用<code>scrollY</code>、 <code>scrollHeight</code>和<code>clientHeight</code>来确定页面底部是否可见。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> bottomVisible = <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">document</span>.documentElement.clientHeight + <span class="hljs-built_in">window</span>.scrollY &gt;= <span class="hljs-built_in">document</span>.documentElement.scrollHeight || <span class="hljs-built_in">document</span>.documentElement.clientHeight;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// bottomVisible() -&gt; true</span></code></pre></td></tr></table></figure></p><h2 id="是否微信浏览器"><a href="#是否微信浏览器" class="headerlink" title="是否微信浏览器"></a>是否微信浏览器</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> isWeiXin = <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">let</span> ua = navigator.userAgent.toLowerCase();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">return</span> ua.match(<span class="hljs-regexp">/microMessenger/i</span>) == <span class="hljs-string">'micromessenger'</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr></table></figure><h2 id="是否移动端"><a href="#是否移动端" class="headerlink" title="是否移动端"></a>是否移动端</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> isDeviceMobile = <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">let</span> ua = navigator.userAgent.toLowerCase();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">return</span> <span class="hljs-regexp">/android|webos|iphone|ipod|balckberry/i</span>.test(ua)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr></table></figure><h2 id="是否ios"><a href="#是否ios" class="headerlink" title="是否ios"></a>是否ios</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> isIos = <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">let</span> ua = navigator.userAgent.toLowerCase();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">return</span> !!ua.match(<span class="hljs-regexp">/\(i[^;]+;( U;)? CPU.+Mac OS X/</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr></table></figure><h2 id="是否Android"><a href="#是否Android" class="headerlink" title="是否Android"></a>是否Android</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> isAndroid = <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">return</span> u.indexOf(<span class="hljs-string">'Android'</span>) &gt; <span class="hljs-number">-1</span> || u.indexOf(<span class="hljs-string">'Adr'</span>) &gt; <span class="hljs-number">-1</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr></table></figure><h2 id="是否PC"><a href="#是否PC" class="headerlink" title="是否PC"></a>是否PC</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> isPC = <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">var</span> userAgentInfo = navigator.userAgent;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">var</span> Agents = [<span class="hljs-string">"Android"</span>, <span class="hljs-string">"iPhone"</span>,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-string">"SymbianOS"</span>, <span class="hljs-string">"Windows Phone"</span>,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-string">"iPad"</span>, <span class="hljs-string">"iPod"</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">  ];</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">var</span> flag = <span class="hljs-literal">true</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> v = <span class="hljs-number">0</span>; v &lt; Agents.length; v++) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">if</span> (userAgentInfo.indexOf(Agents[v]) &gt; <span class="hljs-number">0</span>) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript">      flag = <span class="hljs-literal">false</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-keyword">break</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs javascript">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">return</span> flag;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr></table></figure><h2 id="获取url参数"><a href="#获取url参数" class="headerlink" title="获取url参数"></a>获取url参数</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> getQueryString = <span class="hljs-function">(<span class="hljs-params">name</span>) =&gt;</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">const</span> reg = <span class="hljs-keyword">new</span> <span class="hljs-built_in">RegExp</span>(<span class="hljs-string">'(^|&amp;)'</span> + name + <span class="hljs-string">'=([^&amp;]*)(&amp;|$)'</span>, <span class="hljs-string">'i'</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">const</span> search = <span class="hljs-built_in">window</span>.location.search.split(<span class="hljs-string">'?'</span>)[<span class="hljs-number">1</span>] || <span class="hljs-string">''</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">const</span> params = search.match(reg) || [];</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">return</span> params[<span class="hljs-number">2</span>];</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr></table></figure><h2 id="复制粘贴"><a href="#复制粘贴" class="headerlink" title="复制粘贴"></a>复制粘贴</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> copyTextToClipboard = <span class="hljs-function">(<span class="hljs-params">value</span>) =&gt;</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">var</span> textArea = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">"textarea"</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">  textArea.style.background = <span class="hljs-string">'transparent'</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">  textArea.value = value;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-built_in">document</span>.body.appendChild(textArea);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">  textArea.select();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">try</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">var</span> successful = <span class="hljs-built_in">document</span>.execCommand(<span class="hljs-string">'copy'</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125; <span class="hljs-keyword">catch</span> (err) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'Oops, unable to copy'</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-built_in">document</span>.body.removeChild(textArea);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr></table></figure><h2 id="获取当前页面的滚动位置"><a href="#获取当前页面的滚动位置" class="headerlink" title="获取当前页面的滚动位置"></a>获取当前页面的滚动位置</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> getScrollPosition = <span class="hljs-function">(<span class="hljs-params">el = <span class="hljs-built_in">window</span></span>) =&gt;</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">return</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-attr">x</span>: el.pageXOffset !== <span class="hljs-literal">undefined</span> ? el.pageXOffset : el.scrollLeft,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-attr">y</span>: el.pageYOffset !== <span class="hljs-literal">undefined</span> ? el.pageYOffset : el.scrollTop</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr></table></figure><h2 id="平滑滚动到页面顶部"><a href="#平滑滚动到页面顶部" class="headerlink" title="平滑滚动到页面顶部"></a>平滑滚动到页面顶部</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> scrollToTop = <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> offset = <span class="hljs-built_in">document</span>.documentElement.scrollTop || <span class="hljs-built_in">document</span>.body.scrollTop;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">if</span> (offset &gt; <span class="hljs-number">0</span>) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">window</span>.requestAnimationFrame(scrollToTop);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">window</span>.scrollTo(<span class="hljs-number">0</span>, offset - offset / <span class="hljs-number">8</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr></table></figure><h2 id="如果指定的元素在视区中可见-则返回true-否则为false"><a href="#如果指定的元素在视区中可见-则返回true-否则为false" class="headerlink" title="如果指定的元素在视区中可见, 则返回true, 否则为false"></a>如果指定的元素在视区中可见, 则返回<code>true</code>, 否则为<code>false</code></h2><p>使用<code>Element.getBoundingClientRect()</code>和<code>window.inner(Width|Height)</code>值以确定给定元素在视区中是否可见。<br>省略第二个参数以确定该元素是否完全可见, 或指定<code>true</code>以确定它是否部分可见。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> elementIsVisibleInViewport = <span class="hljs-function">(<span class="hljs-params">el, partiallyVisible = <span class="hljs-literal">false</span></span>) =&gt;</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> &#123; top, left, bottom, right &#125; = el.getBoundingClientRect();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">return</span> partiallyVisible</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">? ((top &gt; <span class="hljs-number">0</span> &amp;&amp; top &lt; innerHeight) || (bottom &gt; <span class="hljs-number">0</span> &amp;&amp; bottom &lt; innerHeight)) &amp;&amp;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">((left &gt; <span class="hljs-number">0</span> &amp;&amp; left &lt; innerWidth) || (right &gt; <span class="hljs-number">0</span> &amp;&amp; right &lt; innerWidth))</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">: top &gt;= <span class="hljs-number">0</span> &amp;&amp; left &gt;= <span class="hljs-number">0</span> &amp;&amp; bottom &lt;= innerHeight &amp;&amp; right &lt;= innerWidth;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// e.g. 100x100 viewport and a 10x10px element at position &#123;top: -1, left: 0, bottom: 9, right: 10&#125;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// elementIsVisibleInViewport(el) -&gt; false (not fully visible)</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// elementIsVisibleInViewport(el, true) -&gt; true (partially visible)</span></code></pre></td></tr></table></figure></p><h2 id="返回一个包含当前-URL-参数的对象"><a href="#返回一个包含当前-URL-参数的对象" class="headerlink" title="返回一个包含当前 URL 参数的对象"></a>返回一个包含当前 <code>URL</code> 参数的对象</h2><p>使用<code>match()</code>与适当的正则表达式来获取所有键值对, <code>Array.reduce()</code>可将它们映射并合并到单个对象中。<br>将<code>location.search</code>作为要应用于当前url的参数传递.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> getURLParameters = <span class="hljs-function"><span class="hljs-params">url</span> =&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">url.match(<span class="hljs-regexp">/([^?=&amp;]+)(=([^&amp;]*))/g</span>).reduce(</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function">(<span class="hljs-params">a, v</span>) =&gt;</span> (a[v.slice(<span class="hljs-number">0</span>, v.indexOf(<span class="hljs-string">'='</span>))] = v.slice(v.indexOf(<span class="hljs-string">'='</span>) + <span class="hljs-number">1</span>), a), &#123;&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// getURLParameters('http://url.com/page?name=Adam&amp;surname=Smith') -&gt; &#123;name: 'Adam', surname: 'Smith'&#125;</span></code></pre></td></tr></table></figure><h1 id="日期"><a href="#日期" class="headerlink" title="日期"></a>日期</h1><h2 id="返回两个日期之间的差异-以天为值"><a href="#返回两个日期之间的差异-以天为值" class="headerlink" title="返回两个日期之间的差异 (以天为值)"></a>返回两个日期之间的差异 (以天为值)</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> getDaysDiffBetweenDates = <span class="hljs-function">(<span class="hljs-params">dateInitial, dateFinal</span>) =&gt;</span> (dateFinal - dateInitial) / (<span class="hljs-number">1000</span> * <span class="hljs-number">3600</span> * <span class="hljs-number">24</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// getDaysDiffBetweenDates(new Date("2017-12-13"), new Date("2017-12-22")) -&gt; 9</span></code></pre></td></tr></table></figure><h2 id="将-JSON-对象转换为日期"><a href="#将-JSON-对象转换为日期" class="headerlink" title="将 JSON 对象转换为日期"></a>将 JSON 对象转换为日期</h2><p>使用<code>Date()</code>, 将 <code>JSON</code> 格式的日期转换为可读格式 <code>(dd/mm/yyyy日)</code>).<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> JSONToDate = <span class="hljs-function"><span class="hljs-params">arr</span> =&gt;</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> dt = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(<span class="hljs-built_in">parseInt</span>(arr.toString().substr(<span class="hljs-number">6</span>)));</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">return</span> <span class="hljs-string">`<span class="hljs-subst">$&#123; dt.getDate() &#125;</span>/<span class="hljs-subst">$&#123; dt.getMonth() + <span class="hljs-number">1</span> &#125;</span>/<span class="hljs-subst">$&#123; dt.getFullYear() &#125;</span>`</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// JSONToDate(/Date(1489525200000)/) -&gt; "14/3/2017"</span></code></pre></td></tr></table></figure></p><h2 id="将日期从美国格式转换为英文格式"><a href="#将日期从美国格式转换为英文格式" class="headerlink" title="将日期从美国格式转换为英文格式"></a>将日期从美国格式转换为英文格式</h2><p>用<code>Date.toISOString()</code>、<code>split(&#39;T&#39;)</code>和<code>replace(</code>)将日期从美式格式转换为英文格式。<br>如果传递的时间不能转换为日期, 则抛出错误。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> toEnglishDate  = <span class="hljs-function">(<span class="hljs-params">time</span>) =&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">&#123;<span class="hljs-keyword">try</span>&#123;<span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(time).toISOString().split(<span class="hljs-string">'T'</span>)[<span class="hljs-number">0</span>].replace(<span class="hljs-regexp">/-/g</span>, <span class="hljs-string">'/'</span>)&#125;<span class="hljs-keyword">catch</span>(e)&#123;<span class="hljs-keyword">return</span>&#125;&#125;;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// toEnglishDate('09/21/2010') -&gt; '21/09/2010'</span></code></pre></td></tr></table></figure></p><h1 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h1><h2 id="链异步函数"><a href="#链异步函数" class="headerlink" title="链异步函数"></a>链异步函数</h2><p>循环遍历包含异步事件的函数数组, 当每个异步事件完成时调用<code>next</code> 。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> chainAsync = <span class="hljs-function"><span class="hljs-params">fns</span> =&gt;</span> &#123; <span class="hljs-keyword">let</span> curr = <span class="hljs-number">0</span>; <span class="hljs-keyword">const</span> next = <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> fns[curr++](next); next(); &#125;;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/*</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">chainAsync([</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">  next =&gt; &#123; console.log('0 seconds'); setTimeout(next, 1000); &#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">  next =&gt; &#123; console.log('1 second');  setTimeout(next, 1000); &#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">  next =&gt; &#123; console.log('2 seconds'); &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">])</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">*/</code></pre></td></tr></table></figure></p><h1 id="数学"><a href="#数学" class="headerlink" title="数学"></a>数学</h1><h2 id="生成随机len位数字"><a href="#生成随机len位数字" class="headerlink" title="生成随机len位数字"></a>生成随机len位数字</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> randomLenNum = <span class="hljs-function">(<span class="hljs-params">len, date</span>) =&gt;</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> random = <span class="hljs-string">""</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">random = <span class="hljs-built_in">Math</span>.ceil(<span class="hljs-built_in">Math</span>.random() * <span class="hljs-number">100000000000000</span>)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">.toString().substr(<span class="hljs-number">0</span>, len || <span class="hljs-number">4</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">if</span> (date) random = random + <span class="hljs-built_in">Date</span>.now();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">return</span> random;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr></table></figure><h2 id="小数位不够，用0补足位数"><a href="#小数位不够，用0补足位数" class="headerlink" title="小数位不够，用0补足位数"></a>小数位不够，用0补足位数</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> dealWithFun = <span class="hljs-function">(<span class="hljs-params">num, bit</span>) =&gt;</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> fixNum = <span class="hljs-built_in">parseFloat</span>(num);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">if</span> (<span class="hljs-built_in">isNaN</span>(fixNum)) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> str_x = num.toString(); <span class="hljs-comment">// 为了后面值的拼接</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> point_decimal = fixNum.indexOf(<span class="hljs-string">"."</span>); <span class="hljs-comment">// 取得小数点的下标key</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 位数不足补0</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">while</span> (fixNum.length &lt;= point_decimal.length + bit) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript">str_x += <span class="hljs-string">"0"</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">return</span> str_x;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr></table></figure><h2 id="返回数字数组的平均值"><a href="#返回数字数组的平均值" class="headerlink" title="返回数字数组的平均值"></a>返回数字数组的平均值</h2><p>使用<code>Array.reduce()</code>将每个值添加到累加器中, 并以0的值初始化, 除以数组的<code>length</code>。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> arrayAverage = <span class="hljs-function"><span class="hljs-params">arr</span> =&gt;</span> arr.reduce(<span class="hljs-function">(<span class="hljs-params">acc, val</span>) =&gt;</span> acc + val, <span class="hljs-number">0</span>) / arr.length;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// arrayAverage([1,2,3]) -&gt; 2</span></code></pre></td></tr></table></figure></p><h2 id="返回一个数字数组的总和"><a href="#返回一个数字数组的总和" class="headerlink" title="返回一个数字数组的总和"></a>返回一个数字数组的总和</h2><p>使用<code>Array.reduce()</code>将每个值添加到累加器中, 并以<code>0</code>值初始化.<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> arraySum = <span class="hljs-function"><span class="hljs-params">arr</span> =&gt;</span> arr.reduce(<span class="hljs-function">(<span class="hljs-params">acc, val</span>) =&gt;</span> acc + val, <span class="hljs-number">0</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// arraySum([1,2,3,4]) -&gt; 10</span></code></pre></td></tr></table></figure></p><h2 id="应用-Collatz-算法"><a href="#应用-Collatz-算法" class="headerlink" title="应用 Collatz 算法"></a>应用 Collatz 算法</h2><p>如果<code>n</code>是偶数, 则返回<code>n/2</code>。否则返回<code>3n+1</code>.<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> collatz = <span class="hljs-function"><span class="hljs-params">n</span> =&gt;</span> (n % <span class="hljs-number">2</span> == <span class="hljs-number">0</span>) ? (n / <span class="hljs-number">2</span>) : (<span class="hljs-number">3</span> * n + <span class="hljs-number">1</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// collatz(8) --&gt; 4</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// collatz(5) --&gt; 16</span></code></pre></td></tr></table></figure></p><h2 id="将数字转换为数字数组"><a href="#将数字转换为数字数组" class="headerlink" title="将数字转换为数字数组"></a>将数字转换为数字数组</h2><p>将数字转换为字符串, 在 ES6 (<code>[...string]</code>) 中使用扩展运算符生成数组。<br>使用<code>Array.map()</code>和<code>parseInt(</code>)将每个值转换为整数<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> digitize = <span class="hljs-function"><span class="hljs-params">n</span> =&gt;</span> [...<span class="hljs-string">''</span>+n].map(<span class="hljs-function"><span class="hljs-params">i</span> =&gt;</span> <span class="hljs-built_in">parseInt</span>(i));</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// digitize(2334) -&gt; [2, 3, 3, 4]</span></code></pre></td></tr></table></figure></p><h2 id="返回两点之间的距离"><a href="#返回两点之间的距离" class="headerlink" title="返回两点之间的距离"></a>返回两点之间的距离</h2><p>使用<code>Math.hypot()</code>计算两个点之间的欧氏距离。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> distance = <span class="hljs-function">(<span class="hljs-params">x0, y0, x1, y1</span>) =&gt;</span> <span class="hljs-built_in">Math</span>.hypot(x1 - x0, y1 - y0);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// distance(1,1, 2,3) -&gt; 2.23606797749979</span></code></pre></td></tr></table></figure></p><h2 id="返回指定范围内的随机整数"><a href="#返回指定范围内的随机整数" class="headerlink" title="返回指定范围内的随机整数"></a>返回指定范围内的随机整数</h2><p> 使用<code>Math.random()</code>生成一个随机数并将其映射到所需的范围, 使用<code>Math.floor()</code>使其成为整数。<br> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> randomIntegerInRange = <span class="hljs-function">(<span class="hljs-params">min, max</span>) =&gt;</span> <span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random() * (max - min + <span class="hljs-number">1</span>)) + min;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// randomIntegerInRange(0, 5) -&gt; 2</span></code></pre></td></tr></table></figure></p><h2 id="返回指定范围内的随机数"><a href="#返回指定范围内的随机数" class="headerlink" title="返回指定范围内的随机数"></a>返回指定范围内的随机数</h2><p>使用<code>Math.random()</code>生成随机值, 并使用乘法将其映射到所需的范围<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> randomNumberInRange = <span class="hljs-function">(<span class="hljs-params">min, max</span>) =&gt;</span> <span class="hljs-built_in">Math</span>.random() * (max - min) + min;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// randomNumberInRange(2,10) -&gt; 6.0211363285087005</span></code></pre></td></tr></table></figure></p><h1 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h1><h2 id="将字符串的第一个字母大写"><a href="#将字符串的第一个字母大写" class="headerlink" title="将字符串的第一个字母大写"></a>将字符串的第一个字母大写</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> capitalize = <span class="hljs-function">(<span class="hljs-params">[first,...rest], lowerRest = <span class="hljs-literal">false</span></span>) =&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">first.toUpperCase() + (lowerRest ? rest.join(<span class="hljs-string">''</span>).toLowerCase() : rest.join(<span class="hljs-string">''</span>));</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// capitalize('myName') -&gt; 'MyName'</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// capitalize('myName', true) -&gt; 'Myname'</span></code></pre></td></tr></table></figure><h2 id="将字符串中每个单词的首字母大写"><a href="#将字符串中每个单词的首字母大写" class="headerlink" title="将字符串中每个单词的首字母大写"></a>将字符串中每个单词的首字母大写</h2><p>使用<code>replace()</code>匹配每个单词和<code>toUpperCase()</code>的第一个字符以将其大写<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> capitalizeEveryWord = <span class="hljs-function"><span class="hljs-params">str</span> =&gt;</span> str.replace(<span class="hljs-regexp">/b[a-z]/g</span>, char =&gt; char.toUpperCase());</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// capitalizeEveryWord('hello world!') -&gt; 'Hello World!'</span></code></pre></td></tr></table></figure></p><h2 id="从匹配转换字符串"><a href="#从匹配转换字符串" class="headerlink" title="从匹配转换字符串"></a>从匹配转换字符串</h2><p>使用<code>replace()</code>可删除下划线、连字符和空格, 并将单词转换为匹配。省略第二个参数以使用默认分隔符<code>_</code>.<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> fromCamelCase = <span class="hljs-function">(<span class="hljs-params">str, separator = <span class="hljs-string">'_'</span></span>) =&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">str.replace(<span class="hljs-regexp">/([a-zd])([A-Z])/g</span>, <span class="hljs-string">'$1'</span> + separator + <span class="hljs-string">'$2'</span>)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">.replace(<span class="hljs-regexp">/([A-Z]+)([A-Z][a-zd]+)/g</span>, <span class="hljs-string">'$1'</span> + separator + <span class="hljs-string">'$2'</span>).toLowerCase();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// fromCamelCase('someDatabaseFieldName', ' ') -&gt; 'some database field name'</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// fromCamelCase('someLabelThatNeedsToBeCamelized', '-') -&gt; 'some-label-that-needs-to-be-camelized'</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// fromCamelCase('someJavascriptProperty', '_') -&gt; 'some_javascript_property'</span></code></pre></td></tr></table></figure></p><h2 id="反转字符串"><a href="#反转字符串" class="headerlink" title="反转字符串"></a>反转字符串</h2><p>使用数组 <code>destructuring</code> 和<code>Array.reverse()</code>可反转字符串中字符的顺序。使用<code>join(&#39;&#39;)</code>组合字符以获取字符串.<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> reverseString = <span class="hljs-function"><span class="hljs-params">str</span> =&gt;</span> [...str].reverse().join(<span class="hljs-string">''</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// reverseString('foobar') -&gt; 'raboof'</span></code></pre></td></tr></table></figure></p><h2 id="按字母顺序对字符串中的字符进行排序"><a href="#按字母顺序对字符串中的字符进行排序" class="headerlink" title="按字母顺序对字符串中的字符进行排序"></a>按字母顺序对字符串中的字符进行排序</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> sortCharactersInString = <span class="hljs-function"><span class="hljs-params">str</span> =&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">str.split(<span class="hljs-string">''</span>).sort(<span class="hljs-function">(<span class="hljs-params">a, b</span>) =&gt;</span> a.localeCompare(b)).join(<span class="hljs-string">''</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// sortCharactersInString('cabbage') -&gt; 'aabbceg'</span></code></pre></td></tr></table></figure><h1 id="实用函数"><a href="#实用函数" class="headerlink" title="实用函数"></a>实用函数</h1><h2 id="isArray"><a href="#isArray" class="headerlink" title="isArray"></a>isArray</h2><p>检查给定参数是否为数组。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> isArray = <span class="hljs-function"><span class="hljs-params">val</span> =&gt;</span> !!val &amp;&amp; <span class="hljs-built_in">Array</span>.isArray(val);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// isArray(null) -&gt; false</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// isArray([1]) -&gt; true</span></code></pre></td></tr></table></figure></p><h2 id="isBoolean"><a href="#isBoolean" class="headerlink" title="isBoolean"></a>isBoolean</h2><p>检查给定的参数是否为布尔元素。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> isBoolean = <span class="hljs-function"><span class="hljs-params">val</span> =&gt;</span> <span class="hljs-keyword">typeof</span> val === <span class="hljs-string">'boolean'</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// isBoolean(null) -&gt; false</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// isBoolean(false) -&gt; true</span></code></pre></td></tr></table></figure></p><h2 id="isFunction"><a href="#isFunction" class="headerlink" title="isFunction"></a>isFunction</h2><p>检查给定参数是否为函数。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> isFunction = <span class="hljs-function"><span class="hljs-params">val</span> =&gt;</span> val &amp;&amp; <span class="hljs-keyword">typeof</span> val === <span class="hljs-string">'function'</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// isFunction('x') -&gt; false</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// isFunction(x =&gt; x) -&gt; true</span></code></pre></td></tr></table></figure></p><h2 id="isNumber"><a href="#isNumber" class="headerlink" title="isNumber"></a>isNumber</h2><p>检查给定参数是否为数字<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> isNumber = <span class="hljs-function"><span class="hljs-params">val</span> =&gt;</span> <span class="hljs-keyword">typeof</span> val === <span class="hljs-string">'number'</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// isNumber('1') -&gt; false</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// isNumber(1) -&gt; true</span></code></pre></td></tr></table></figure></p><h2 id="isString"><a href="#isString" class="headerlink" title="isString"></a>isString</h2><p>检查给定参数是否为字符串<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> isString = <span class="hljs-function"><span class="hljs-params">val</span> =&gt;</span> <span class="hljs-keyword">typeof</span> val === <span class="hljs-string">'string'</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// isString(10) -&gt; false</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// isString('10') -&gt; true</span></code></pre></td></tr></table></figure></p><h2 id="isSymbol"><a href="#isSymbol" class="headerlink" title="isSymbol"></a>isSymbol</h2><p>检查给定参数是否为<code>Symbol</code><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> isSymbol = <span class="hljs-function"><span class="hljs-params">val</span> =&gt;</span> <span class="hljs-keyword">typeof</span> val === <span class="hljs-string">'symbol'</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// isSymbol('x') -&gt; false</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// isSymbol(Symbol('x')) -&gt; true</span></code></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Function </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Javascript之函数柯里化</title>
      <link href="/2020/05/20/Javascript%E4%B9%8B%E5%87%BD%E6%95%B0%E6%9F%AF%E9%87%8C%E5%8C%96/"/>
      <url>/2020/05/20/Javascript%E4%B9%8B%E5%87%BD%E6%95%B0%E6%9F%AF%E9%87%8C%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="什么是柯里化"><a href="#什么是柯里化" class="headerlink" title="什么是柯里化"></a>什么是柯里化</h1><p>柯里化（Currying）是把接受多个参数的函数变换成接受一个单一参数的函数，并且返回接受余下的参数且返回结果的新函数的技术。</p><h1 id="简单示例"><a href="#简单示例" class="headerlink" title="简单示例"></a>简单示例</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 普通函数</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">add</span>(<span class="hljs-params">x,y</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">return</span> x+y;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">add(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>);           <span class="hljs-comment">// 3</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 柯里化函数</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">addCurry</span>(<span class="hljs-params">x</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">y</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript">        <span class="hljs-keyword">return</span> x+y;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs javascript">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(addCurry(<span class="hljs-number">1</span>)(<span class="hljs-number">2</span>));        <span class="hljs-comment">// 3</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(addCurry(<span class="hljs-number">1</span>));</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// ƒ (y) &#123;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//   return x+y;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// &#125;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> addCurryX = addCurry(<span class="hljs-number">1</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(addCurryX(<span class="hljs-number">2</span>));</code></pre></td></tr></table></figure><p>柯里化之后就是先接受add函数的x,然后返回一个函数接受y，在进行计算。我们可以通过<code>addCurry(1)(2)</code>这种方式一次性传递全部的值来进行调用。<br>第二次调用时我们只传了x，返回了一个接受y值的函数，所以我们可以将它赋值给一个变量，如<code>addCurryX</code>随时进行二次调用，这样就做到了代码复用。</p><h1 id="提前返回"><a href="#提前返回" class="headerlink" title="提前返回"></a>提前返回</h1><p>例如我们给元素绑定点击事件监听时，每次都要判断<code>else if</code>,柯里化后如果不是IE浏览器的话直接就返回。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//普通函数</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> addClickEvent = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">el, fn</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">window</span>.addEventListener) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">        el.addEventListener(<span class="hljs-string">'click'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">event</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">            fn.call(el, event);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">        &#125;);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">window</span>.attachEvent) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript">        el.attachEvent(<span class="hljs-string">"onclick"</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">event</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript">            fn.call(el, event);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript">        &#125;);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs javascript">    &#125; </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//柯里化函数</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">var</span> event = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">window</span>.addEventListener) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">el,fn</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs javascript">        el.addEventListener(<span class="hljs-string">'click'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">event</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><code class="hljs javascript">            fn.call(el, event);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><code class="hljs javascript">        &#125;);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><code class="hljs javascript">      &#125;;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><code class="hljs javascript">    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">window</span>.attachEvent) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">el,fn</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><code class="hljs javascript">        el.attachEvent(<span class="hljs-string">"onclick"</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">event</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><code class="hljs javascript">            fn.call(el, event);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><code class="hljs javascript">        &#125;);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><code class="hljs javascript">      &#125;;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><code class="hljs javascript">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><code class="hljs javascript">  event()();</code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Function </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript事件循环</title>
      <link href="/2020/05/06/JavaScript%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF/"/>
      <url>/2020/05/06/JavaScript%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="事件循环"><a href="#事件循环" class="headerlink" title="事件循环"></a>事件循环</h1><p>JavaScript中的事件循环负责执行代码、收集和处理事件以及执行队列中的子任务。</p><p>事件循环包含两个队列:</p><pre><code>- macrotask- microtask</code></pre><h2 id="macrotask-宏任务"><a href="#macrotask-宏任务" class="headerlink" title="macrotask(宏任务)"></a>macrotask(宏任务)</h2><ul><li>setTimeout</li><li>setInterval</li><li>setImmediate</li><li>I/O</li><li>UI渲染</li><li>script(整体代码)</li></ul><h2 id="microtask-微任务"><a href="#microtask-微任务" class="headerlink" title="microtask(微任务)"></a>microtask(微任务)</h2><ul><li>Promise</li><li>Object.observe</li><li>MutationObserver</li></ul><h2 id="执行顺序"><a href="#执行顺序" class="headerlink" title="执行顺序"></a>执行顺序</h2><ol><li>将脚本作为一个宏任务执行</li><li>执行同步代码，宏任务进入宏任务队列，微任务进入微任务队列</li><li>宏任务队列里的宏任务执行完后，检查微任务队列里是否又微任务，有就依次执行，直到全部执行完毕</li><li>执行浏览器UI线程的渲染任务</li><li>执行完一次循环流程后，从2开始继续循环，直到宏任务与微任务都执行完毕</li></ol><p>一个<code>Event Loop</code>会有一个或多个 <code>MacroTask Queue</code>，而 <code>Event Loop</code> 仅有一个 <code>MicroTask Queue</code>。</p><p>是因为在产生新的<code>microtask</code>任务前，会优先执行完所有的<code>microtask</code>。</p>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 事件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript事件委托</title>
      <link href="/2020/05/06/JavaScript%E4%BA%8B%E4%BB%B6%E5%A7%94%E6%89%98/"/>
      <url>/2020/05/06/JavaScript%E4%BA%8B%E4%BB%B6%E5%A7%94%E6%89%98/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="事件委托"><a href="#事件委托" class="headerlink" title="事件委托"></a>事件委托</h1><p>事件委托就是把原本需要绑定在子元素上面的响应事件委托给它们的父元素或者更外层元素。<br>可以把事件分为事件冒泡和事件捕获。</p><h1 id="事件冒泡"><a href="#事件冒泡" class="headerlink" title="事件冒泡"></a>事件冒泡</h1><p>当鼠标点击或其他方式触发事件时，事件会从点击的元素不断上升直到根节点。会在某一个外层捕获这个冒泡事件，执行操作。</p><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>如下只需要监听ul上是否触发点击事件，而不需要在每一个li上添加点击事件。<br>因为每个函数都会占用内存空间，现在只需要一个事件处理程序酒可以代理所有事件，减少了内存消耗。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"app"</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs html">    <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"content"</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs html">        <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"1"</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs html">        <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"2"</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs html">        <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"3"</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs html">    <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"content"</span>).addEventListener(<span class="hljs-string">"click"</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">event</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">var</span> target = event.target;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">switch</span> (target.id) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">case</span> <span class="hljs-string">"1"</span>:</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"点击了第"</span> + target.id + <span class="hljs-string">"个li"</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-keyword">break</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">case</span> <span class="hljs-string">"2"</span>:</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"点击了第"</span> + target.id + <span class="hljs-string">"个li"</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-keyword">break</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">case</span> <span class="hljs-string">"3"</span>:</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"点击了第"</span> + target.id + <span class="hljs-string">"个li"</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-keyword">break</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">default</span>:</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-keyword">break</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-comment">// 阻止事件冒泡 </span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs javascript">  event.stopPropagation();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;,<span class="hljs-literal">false</span>);</code></pre></td></tr></table></figure><h1 id="事件捕获"><a href="#事件捕获" class="headerlink" title="事件捕获"></a>事件捕获</h1><p>事件捕获正好与事件冒泡相反，是从顶层开始项下寻找。然后被各个元素的事件监听器捕获。</p><h2 id="示例-1"><a href="#示例-1" class="headerlink" title="示例"></a>示例</h2><p>设置 <code>addEventListener</code> 的第三个参数 <code>useCapture</code> 为true后， 事件捕获会从 app-&gt;content-&gt;btn 依次触发。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"app"</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs html">    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"content"</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs html">        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"btn"</span>&gt;</span>按钮<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs html">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"app"</span>).addEventListener(<span class="hljs-string">"click"</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">event</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">var</span> target = event.target;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-built_in">console</span>.log(target);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;, <span class="hljs-literal">true</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"content"</span>).addEventListener(<span class="hljs-string">"click"</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">event</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">var</span> target = event.target;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-built_in">console</span>.log(target);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;, <span class="hljs-literal">true</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"btn"</span>).addEventListener(<span class="hljs-string">"click"</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">event</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">var</span> target = event.target;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-built_in">console</span>.log(target);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;, <span class="hljs-literal">true</span>);</code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 事件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>认识Object.defineProperty()</title>
      <link href="/2020/05/06/%E8%AE%A4%E8%AF%86Object-defineProperty/"/>
      <url>/2020/05/06/%E8%AE%A4%E8%AF%86Object-defineProperty/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="defineProperty"><a href="#defineProperty" class="headerlink" title="defineProperty"></a>defineProperty</h1><p><code>Object.defineProperty()</code> 方法会直接在一个对象上定义一个新属性，或者修改一个对象的现有属性，并返回此对象。</p><h1 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h1><blockquote><p>Object.defineProperty(obj, prop, descriptor)</p></blockquote><h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><pre><code>- obj 要操作的对象- prop 修改或新增的属性名称- descriptor 属性描述符</code></pre><h2 id="属性描述符"><a href="#属性描述符" class="headerlink" title="属性描述符"></a>属性描述符</h2><pre><code>描述符不能两者同时存在，只能是其中一个。1. 数据描述符  数据描述符是一个具有值的属性，该值可以是可写的，也可以是不可写的。2. 存取描述符  存取描述符是由 getter 函数和 setter 函数所描述的属性。数据描述符 和 存取描述符 同时具有的键值：`configurable`  当该属性的`configurable`为 `true` 时该属性的描述符改变，该属性可以从对象上删除。默认为 `false`。`enumerable`    当且仅当该属性的 `enumerable` 键值为 true 时，该属性才会出现在对象的枚举属性中。</code></pre><h2 id="数据描述符"><a href="#数据描述符" class="headerlink" title="数据描述符"></a>数据描述符</h2><pre><code>`value`     该属性对应的值。默认为 `undefined``writable`  当该属性的 `writable` 键值为 true 时，属性的值，也就是上面的 `value`，才能被赋值运算符改变。默认值为 `false`</code></pre><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> people = &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">name</span>:<span class="hljs-string">'Fireworks'</span>,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">age</span>:<span class="hljs-number">18</span>,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">gender</span>: <span class="hljs-string">'male'</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">Object</span>.defineProperty(people, <span class="hljs-string">'age'</span>, &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">value</span>: <span class="hljs-number">42</span>,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">writable</span>: <span class="hljs-literal">true</span>,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">configurable</span>:<span class="hljs-literal">true</span>,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">enumerable</span>:<span class="hljs-literal">true</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(people);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// &#123;name: "Fireworks", age: 42, gender: "male"&#125;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs javascript">people.age = <span class="hljs-number">20</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(people);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// &#123;name: "Fireworks", age: 20, gender: "male"&#125;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">Object</span>.keys(people));</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// ["name", "age", "gender"]</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">delete</span> people.age;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(people);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// &#123;name: "Fireworks", gender: "male"&#125;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">Object</span>.defineProperty(people, <span class="hljs-string">'age'</span>, &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">value</span>: <span class="hljs-number">5</span>,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">writable</span>: <span class="hljs-literal">false</span>,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">configurable</span>:<span class="hljs-literal">false</span>,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">enumerable</span>:<span class="hljs-literal">false</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(people);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// &#123;name: "Fireworks", gender: "male", age: 5&#125;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><code class="hljs javascript">people.age = <span class="hljs-number">20</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(people);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// &#123;name: "Fireworks", gender: "male", age: 5&#125;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">Object</span>.keys(people));</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// ["name", "gender"]</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">delete</span> people.age;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(people);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// &#123;name: "Fireworks", gender: "male", age: 5&#125;</span></code></pre></td></tr></table></figure><h2 id="存取描述符"><a href="#存取描述符" class="headerlink" title="存取描述符"></a>存取描述符</h2><pre><code>`get`    属性的 `getter` 函数，如果没有 `getter`，则为 `undefined`。当访问该属性时，会调用此函数。该函数的返回值会被用作属性的值。默认为 `undefined`。`set`    属性的 setter 函数，如果没有 setter，则为 undefined。当属性值被修改时，会调用此函数。默认为 `undefined`。</code></pre><h2 id="示例-1"><a href="#示例-1" class="headerlink" title="示例"></a>示例</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> people = &#123;&#125;;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> name = <span class="hljs-string">"Jack"</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">Object</span>.defineProperty(people, <span class="hljs-string">"name"</span>, &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">get</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"执行 get 操作"</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">return</span> name;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">set</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">value</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"执行 set 操作"</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs javascript">    name = value;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">enumerable</span>: <span class="hljs-literal">true</span>,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">configurable</span>: <span class="hljs-literal">true</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(people.name);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// Jack</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><code class="hljs javascript">name = <span class="hljs-string">"Fireworks"</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(people.name);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// Fireworks</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><code class="hljs javascript">people.name = <span class="hljs-string">"mile"</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(people.name);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// mile</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(name);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// mile</span></code></pre></td></tr></table></figure><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty" target="_blank" rel="noopener">MDN参考</a></p>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Object </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP中Trait的使用</title>
      <link href="/2020/04/27/PHP%E4%B8%ADTrait%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2020/04/27/PHP%E4%B8%ADTrait%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="Trait"><a href="#Trait" class="headerlink" title="Trait"></a>Trait</h1><p><a href="https://www.php.net/manual/zh/language.oop5.traits.php" target="_blank" rel="noopener">triat</a>是PHP中一种代码复用技术。  </p><p><strong>官方解释:</strong> </p><blockquote><p>Trait 是为类似 PHP 的单继承语言而准备的一种代码复用机制。Trait 为了减少单继承语言的限制，使开发人员能够自由地在不同层次结构内独立的类中复用 method。Trait 和 Class 组合的语义定义了一种减少复杂性的方式，避免传统多继承和 Mixin 类相关典型问题。</p></blockquote><h1 id="创建-Triat"><a href="#创建-Triat" class="headerlink" title="创建 Triat"></a>创建 Triat</h1><p>使用关键字<code>trait</code>来创建,以<code>Laravel</code>中的用户认证作为实例：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs php"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">namespace</span> <span class="hljs-title">Illuminate</span>\<span class="hljs-title">Foundation</span>\<span class="hljs-title">Auth</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs php"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">use</span> <span class="hljs-title">Illuminate</span>\<span class="hljs-title">Http</span>\<span class="hljs-title">Request</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">use</span> <span class="hljs-title">Illuminate</span>\<span class="hljs-title">Support</span>\<span class="hljs-title">Facades</span>\<span class="hljs-title">Auth</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">use</span> <span class="hljs-title">Illuminate</span>\<span class="hljs-title">Validation</span>\<span class="hljs-title">ValidationException</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs php"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">trait</span> AuthenticatesUsers</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs php">&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs php">    <span class="hljs-keyword">use</span> <span class="hljs-title">RedirectsUsers</span>, <span class="hljs-title">ThrottlesLogins</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs php"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs php">    <span class="hljs-keyword">protected</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">validateLogin</span><span class="hljs-params">(Request $request)</span></span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs php">    &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs php">        <span class="hljs-keyword">$this</span>-&gt;validate($request, [</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs php">            <span class="hljs-keyword">$this</span>-&gt;username() =&gt; <span class="hljs-string">'required|string'</span>,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs php">            <span class="hljs-string">'password'</span> =&gt; <span class="hljs-string">'required|string'</span>,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs php">        ]);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><code class="hljs php">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><code class="hljs php"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><code class="hljs php">    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">logout</span><span class="hljs-params">(Request $request)</span></span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><code class="hljs php">    &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><code class="hljs php">        <span class="hljs-keyword">$this</span>-&gt;guard()-&gt;logout();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><code class="hljs php"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><code class="hljs php">        $request-&gt;session()-&gt;invalidate();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><code class="hljs php"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><code class="hljs php">        <span class="hljs-keyword">return</span> redirect(<span class="hljs-string">'/'</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><code class="hljs php">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><code class="hljs php">    </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><code class="hljs php">    .</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><code class="hljs php">    .</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><code class="hljs php">    .</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><code class="hljs php">&#125;</code></pre></td></tr></table></figure></p><p>通过<code>use</code>引入<code>AuthenticatesUsers</code>,然后我们创建一个<code>adminLogin</code>登录方法，在这我们可以调用<code>triat</code>中定义的验证方法<code>validateLogin</code>.<br>还可以重写<code>logout</code>方法。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">namespace</span> <span class="hljs-title">App</span>\<span class="hljs-title">Http</span>\<span class="hljs-title">Controllers</span>\<span class="hljs-title">Admin</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs php"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">use</span> <span class="hljs-title">App</span>\<span class="hljs-title">Http</span>\<span class="hljs-title">Controllers</span>\<span class="hljs-title">Controller</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">use</span> <span class="hljs-title">Auth</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">use</span> <span class="hljs-title">Illuminate</span>\<span class="hljs-title">Foundation</span>\<span class="hljs-title">Auth</span>\<span class="hljs-title">AuthenticatesUsers</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs php"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">LoginController</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Controller</span></span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs php">&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs php">    <span class="hljs-keyword">use</span> <span class="hljs-title">AuthenticatesUsers</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs php"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs php">    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">index</span><span class="hljs-params">()</span></span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs php">    &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs php">        <span class="hljs-keyword">return</span> view(<span class="hljs-string">'admin/login/index'</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs php">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs php"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs php">    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">adminLogin</span><span class="hljs-params">(Request $request)</span></span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs php">    &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><code class="hljs php">        <span class="hljs-keyword">$this</span>-&gt;validateLogin($request);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><code class="hljs php">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><code class="hljs php"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><code class="hljs php">    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">logout</span><span class="hljs-params">()</span></span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><code class="hljs php">    &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><code class="hljs php">        Auth::guard(<span class="hljs-string">'admin'</span>)-&gt;logout();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><code class="hljs php">        <span class="hljs-keyword">return</span> redirect(<span class="hljs-string">'admin/login/index'</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><code class="hljs php">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><code class="hljs php">&#125;</code></pre></td></tr></table></figure><h1 id="优先级"><a href="#优先级" class="headerlink" title="优先级"></a>优先级</h1><p>优先顺序是当前类中的方法会覆盖 <code>trait</code> 方法，而 <code>trait</code> 方法又覆盖了基类中的方法。</p><p>MyHelloWorld 继承 Base 的 sayHello 方法被 SayWorld Triat 中的 sayHello 方法覆盖。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Base</span> </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs php">    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sayHello</span><span class="hljs-params">()</span> </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs php">        <span class="hljs-keyword">echo</span> <span class="hljs-string">'Hello '</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs php">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs php">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs php"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">trait</span> SayWorld &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs php">    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sayHello</span><span class="hljs-params">()</span> </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs php">        <span class="hljs-keyword">parent</span>::sayHello();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs php">        <span class="hljs-keyword">echo</span> <span class="hljs-string">'World!'</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs php">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs php">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs php"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyHelloWorld</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Base</span> </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs php">    <span class="hljs-keyword">use</span> <span class="hljs-title">SayWorld</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs php">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs php"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><code class="hljs php">$o = <span class="hljs-keyword">new</span> MyHelloWorld();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><code class="hljs php">$o-&gt;sayHello();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">?&gt;</span></code></pre></td></tr></table></figure><p>输出：</p><blockquote><p>Hello World!</p></blockquote><p>如果在 MyHelloWorld 中定义一个 sayHello 方法的话。那么 MyHelloWorld 中的 sayHello 就会覆盖 SayWorld Triat 中的方法。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Base</span> </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs php">    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sayHello</span><span class="hljs-params">()</span> </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs php">        <span class="hljs-keyword">echo</span> <span class="hljs-string">'Hello '</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs php">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs php">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs php"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">trait</span> SayWorld &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs php">    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sayHello</span><span class="hljs-params">()</span> </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs php">        <span class="hljs-keyword">parent</span>::sayHello();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs php">        <span class="hljs-keyword">echo</span> <span class="hljs-string">'World!'</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs php">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs php">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs php"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyHelloWorld</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Base</span> </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs php">    <span class="hljs-keyword">use</span> <span class="hljs-title">SayWorld</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs php">    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sayHello</span><span class="hljs-params">()</span> </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs php">        <span class="hljs-keyword">echo</span> <span class="hljs-string">'Hello My World'</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><code class="hljs php">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><code class="hljs php">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><code class="hljs php"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><code class="hljs php">$o = <span class="hljs-keyword">new</span> MyHelloWorld();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><code class="hljs php">$o-&gt;sayHello();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">?&gt;</span></code></pre></td></tr></table></figure><p>输出：</p><blockquote><p>Hello My World</p></blockquote><h1 id="多个-trait"><a href="#多个-trait" class="headerlink" title="多个 trait"></a>多个 trait</h1><p>通过逗号分隔，在 use 声明列出多个 trait，可以都插入到一个类中。<br>如果两个 trait 都插入了一个同名的方法，使用 insteadof 操作符来明确指定使用冲突方法中的哪一个。或者使用 as 为某个方法引入别名。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">trait</span> A &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs php">    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">smallTalk</span><span class="hljs-params">()</span> </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs php">        <span class="hljs-keyword">echo</span> <span class="hljs-string">'a'</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs php">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs php">    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bigTalk</span><span class="hljs-params">()</span> </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs php">        <span class="hljs-keyword">echo</span> <span class="hljs-string">'A'</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs php">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs php">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs php"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">trait</span> B &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs php">    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">smallTalk</span><span class="hljs-params">()</span> </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs php">        <span class="hljs-keyword">echo</span> <span class="hljs-string">'b'</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs php">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs php">    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bigTalk</span><span class="hljs-params">()</span> </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs php">        <span class="hljs-keyword">echo</span> <span class="hljs-string">'B'</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs php">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs php">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><code class="hljs php"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Talker</span> </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><code class="hljs php">    <span class="hljs-keyword">use</span> <span class="hljs-title">A</span>, <span class="hljs-title">B</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><code class="hljs php">        <span class="hljs-title">B</span>::<span class="hljs-title">smallTalk</span> <span class="hljs-title">insteadof</span> <span class="hljs-title">A</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><code class="hljs php">        A::bigTalk <span class="hljs-keyword">insteadof</span> B;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><code class="hljs php">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><code class="hljs php">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><code class="hljs php"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Aliased_Talker</span> </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><code class="hljs php">    <span class="hljs-keyword">use</span> <span class="hljs-title">A</span>, <span class="hljs-title">B</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><code class="hljs php">        <span class="hljs-title">B</span>::<span class="hljs-title">smallTalk</span> <span class="hljs-title">insteadof</span> <span class="hljs-title">A</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><code class="hljs php">        A::bigTalk <span class="hljs-keyword">insteadof</span> B;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><code class="hljs php">        B::bigTalk <span class="hljs-keyword">as</span> talk;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><code class="hljs php">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><code class="hljs php">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">?&gt;</span></code></pre></td></tr></table></figure><p><a href="https://www.php.net/manual/zh/language.oop5.traits.php" target="_blank" rel="noopener">官方文档</a><br><a href="https://zhuanlan.zhihu.com/p/31362082" target="_blank" rel="noopener">掌握 PHP Trait 的概念和用法</a><br><a href="https://cloud.tencent.com/developer/article/1401381" target="_blank" rel="noopener">在 Laravel 中使用 Trait 优化代码结构</a></p>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Trait </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ThinkPHP5使用laravel-mix</title>
      <link href="/2020/04/20/ThinkPHP5%E4%BD%BF%E7%94%A8laravel-mix/"/>
      <url>/2020/04/20/ThinkPHP5%E4%BD%BF%E7%94%A8laravel-mix/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="安装-Laravel-mix"><a href="#安装-Laravel-mix" class="headerlink" title="安装 Laravel-mix"></a>安装 <code>Laravel-mix</code></h1><h2 id="移动文件"><a href="#移动文件" class="headerlink" title="移动文件"></a>移动文件</h2><p>将<code>webpack.mix.js</code> 和 <code>package.json</code>两个文件复制到<code>ThinkPHP5</code>项目的根目录</p><h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs bash">yarn install</code></pre></td></tr></table></figure><h2 id="设置路径"><a href="#设置路径" class="headerlink" title="设置路径"></a>设置路径</h2><p>修改<code>webpack.mix.js</code>文件,增加<code>.setPublicPath(&#39;./public&#39;);</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">const</span> mix = <span class="hljs-keyword">require</span>(<span class="hljs-string">'laravel-mix'</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs php">mix.js(<span class="hljs-string">'resources/js/app.js'</span>, <span class="hljs-string">'public/js'</span>)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs php">    .sass(<span class="hljs-string">'resources/sass/app.scss'</span>, <span class="hljs-string">'public/css'</span>)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs php">    .setPublicPath(<span class="hljs-string">'./public'</span>);</code></pre></td></tr></table></figure><h2 id="修改模板路径"><a href="#修改模板路径" class="headerlink" title="修改模板路径"></a>修改模板路径</h2><p>将路径修改为根目录下的<code>resources</code>文件，方便我们管理。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">return</span> [</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs php">    <span class="hljs-comment">// 模板引擎类型 支持 php think 支持扩展</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs php">    <span class="hljs-string">'type'</span>         =&gt; <span class="hljs-string">'Think'</span>,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs php">    <span class="hljs-comment">// 模板路径</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs php">    <span class="hljs-string">'view_path'</span>    =&gt; <span class="hljs-string">'../resources/'</span>,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs php">    <span class="hljs-comment">// 模板后缀</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs php">    <span class="hljs-string">'view_suffix'</span>  =&gt; <span class="hljs-string">'html'</span>,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs php">    <span class="hljs-comment">// 模板文件名分隔符</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs php">    <span class="hljs-string">'view_depr'</span>    =&gt; <span class="hljs-string">'/'</span>,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs php">    <span class="hljs-comment">// 模板引擎普通标签开始标记</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs php">    <span class="hljs-string">'tpl_begin'</span>    =&gt; <span class="hljs-string">'&#123;'</span>,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs php">    <span class="hljs-comment">// 模板引擎普通标签结束标记</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs php">    <span class="hljs-string">'tpl_end'</span>      =&gt; <span class="hljs-string">'&#125;'</span>,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs php">    <span class="hljs-comment">// 标签库标签开始标记</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs php">    <span class="hljs-string">'taglib_begin'</span> =&gt; <span class="hljs-string">'&#123;'</span>,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs php">    <span class="hljs-comment">// 标签库标签结束标记</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs php">    <span class="hljs-string">'taglib_end'</span>   =&gt; <span class="hljs-string">'&#125;'</span>,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs php">],</code></pre></td></tr></table></figure><h2 id="执行编译命令"><a href="#执行编译命令" class="headerlink" title="执行编译命令"></a>执行编译命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs yarn">yarn run dev</code></pre></td></tr></table></figure><p>也可以执行 <code>yarn run watch</code> 来监视你的前段资源改变，然后即时重新编译。</p><p>此时就会将<code>resources</code>目录下的文件编译到<code>public</code>下去.<br><code>resources</code>和<code>public</code>的位置都是可以修改的。</p><hr><p><a href="https://github.com/JeffreyWay/laravel-mix/tree/master/docs#readme" target="_blank" rel="noopener">Laravel-mix 3.0 GitHub</a><br><a href="https://learnku.com/laravel/t/22126" target="_blank" rel="noopener">Laravel-mix 3.0 中文文档</a></p>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ThinkPHP </tag>
            
            <tag> PHP </tag>
            
            <tag> Laravel-mix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ThinkPHP5.1中数据库迁移migration与数据填充Faker的使用</title>
      <link href="/2020/04/20/ThinkPHP5-1%E4%B8%AD%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%81%E7%A7%BBmigration%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%A1%AB%E5%85%85Faker%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2020/04/20/ThinkPHP5-1%E4%B8%AD%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%81%E7%A7%BBmigration%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%A1%AB%E5%85%85Faker%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="数据库迁移工具-think-migration"><a href="#数据库迁移工具-think-migration" class="headerlink" title="数据库迁移工具 think-migration"></a>数据库迁移工具 <code>think-migration</code></h1><h2 id="通过composer安装"><a href="#通过composer安装" class="headerlink" title="通过composer安装"></a>通过<code>composer</code>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs bash">composer require topthink/think-migration=2.0.*</code></pre></td></tr></table></figure><h2 id="安装完成后，在命令行下查看，就会发现新增了几个migrate和seed命令"><a href="#安装完成后，在命令行下查看，就会发现新增了几个migrate和seed命令" class="headerlink" title="安装完成后，在命令行下查看，就会发现新增了几个migrate和seed命令"></a>安装完成后，在命令行下查看，就会发现新增了几个<code>migrate</code>和<code>seed</code>命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs bash">php think</code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs bash">migrate</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs bash"> migrate:create     Create a new migration</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs bash"> migrate:rollback   Rollback the last or to a specific migration</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs bash"> migrate:run        Migrate the database</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs bash"> migrate:status     Show migration status</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs bash">optimize</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs bash"> optimize:<span class="hljs-built_in">autoload</span>  Optimizes PSR0 and PSR4 packages to be loaded with classmaps too, good <span class="hljs-keyword">for</span> production.</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs bash"> optimize:config    Build config and common file cache.</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs bash"> optimize:route     Build route cache.</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs bash"> optimize:schema    Build database schema cache.</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs bash">seed</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs bash"> seed:create        Create a new database seeder</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs bash"> seed:run           Run database seeders</code></pre></td></tr></table></figure><h2 id="创建迁移类"><a href="#创建迁移类" class="headerlink" title="创建迁移类"></a>创建迁移类</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs bash">php think migrate:create Users</code></pre></td></tr></table></figure><p>可以看到在根目录下创建了迁移文件 <code>.\database\migrations\20200420115806_users.php</code></p><p>在<code>change()</code>方法中,编写创建表结构的代码。可以在<code>up()</code>方法中进行修改数据库,<code>down()</code>方法中进行回滚操作。<br>更详细的使用方法参考<a href="https://tsy12321.gitbooks.io/phinx-doc/content/" target="_blank" rel="noopener">中文文档</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs php"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">use</span> <span class="hljs-title">think</span>\<span class="hljs-title">migration</span>\<span class="hljs-title">Migrator</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">use</span> <span class="hljs-title">think</span>\<span class="hljs-title">migration</span>\<span class="hljs-title">db</span>\<span class="hljs-title">Column</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs php"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Users</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Migrator</span></span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs php">&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs php">    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">change</span><span class="hljs-params">()</span></span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs php">    &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs php">        $table = <span class="hljs-keyword">$this</span>-&gt;table(<span class="hljs-string">'users'</span>,<span class="hljs-keyword">array</span>(<span class="hljs-string">'engine'</span>=&gt;<span class="hljs-string">'InnoDB'</span>));</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs php">        $table-&gt;addColumn(<span class="hljs-string">'username'</span>, <span class="hljs-string">'string'</span>,<span class="hljs-keyword">array</span>(<span class="hljs-string">'limit'</span> =&gt; <span class="hljs-number">15</span>,<span class="hljs-string">'default'</span>=&gt;<span class="hljs-string">''</span>,<span class="hljs-string">'comment'</span>=&gt;<span class="hljs-string">'用户名，登陆使用'</span>))</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs php">            -&gt;addColumn(<span class="hljs-string">'password'</span>, <span class="hljs-string">'string'</span>,<span class="hljs-keyword">array</span>(<span class="hljs-string">'limit'</span> =&gt; <span class="hljs-number">32</span>,<span class="hljs-string">'default'</span>=&gt;md5(<span class="hljs-string">'123456'</span>),<span class="hljs-string">'comment'</span>=&gt;<span class="hljs-string">'用户密码'</span>))</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs php">            -&gt;addColumn(<span class="hljs-string">'is_delete'</span>, <span class="hljs-string">'boolean'</span>,<span class="hljs-keyword">array</span>(<span class="hljs-string">'limit'</span> =&gt; <span class="hljs-number">1</span>,<span class="hljs-string">'default'</span>=&gt;<span class="hljs-number">0</span>,<span class="hljs-string">'comment'</span>=&gt;<span class="hljs-string">'删除状态，1已删除'</span>))</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs php">            -&gt;addIndex(<span class="hljs-keyword">array</span>(<span class="hljs-string">'username'</span>), <span class="hljs-keyword">array</span>(<span class="hljs-string">'unique'</span> =&gt; <span class="hljs-keyword">true</span>))</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs php">            -&gt;create();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs php">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs php"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs php">    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">up</span><span class="hljs-params">()</span></span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><code class="hljs php">    &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><code class="hljs php"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><code class="hljs php">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><code class="hljs php"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><code class="hljs php">    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">down</span><span class="hljs-params">()</span></span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><code class="hljs php">    &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><code class="hljs php"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><code class="hljs php">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><code class="hljs php">&#125;</code></pre></td></tr></table></figure><h2 id="执行迁移"><a href="#执行迁移" class="headerlink" title="执行迁移"></a>执行迁移</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs bash">php think migrate:run</code></pre></td></tr></table></figure><p>执行迁移命令后创建如下两张表:</p><ul><li>migrations            这个表就是用来管理数据库的表</li><li>users                 就是我们创建的用户表</li></ul><p><img src="/.io//post/migraterunsql.jpg" srcset="/img/loading.gif" lazyload alt="avatar"></p><h1 id="数据填充-Faker"><a href="#数据填充-Faker" class="headerlink" title="数据填充 Faker"></a>数据填充 <code>Faker</code></h1><h2 id="安装-Faker"><a href="#安装-Faker" class="headerlink" title="安装 Faker"></a>安装 <code>Faker</code></h2><p><a href="https://github.com/fzaninotto/Faker" target="_blank" rel="noopener">Faker GitHub</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs bash">composer require fzaninotto/faker</code></pre></td></tr></table></figure><h2 id="创建数据生成文件"><a href="#创建数据生成文件" class="headerlink" title="创建数据生成文件"></a>创建数据生成文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs bash">php think seed:create UserSeeder</code></pre></td></tr></table></figure><p>创建了新文件 <code>.\database\seeds\UserSeeder.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs php"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">use</span> <span class="hljs-title">think</span>\<span class="hljs-title">migration</span>\<span class="hljs-title">Seeder</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs php"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UserSeeder</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Seeder</span></span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs php">&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs php">    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">run</span><span class="hljs-params">()</span></span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs php">    &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs php">        $faker = Faker\Factory::create(<span class="hljs-string">'zh_CN'</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs php"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs php">        $data = [];</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs php">        <span class="hljs-comment">// 循环生成50条数据</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs php">        <span class="hljs-keyword">for</span> ($i = <span class="hljs-number">0</span>; $i &lt; <span class="hljs-number">50</span>; $i++) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs php">            $data[] = [</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs php">                <span class="hljs-string">'username'</span>      =&gt; $faker-&gt;name,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs php">                <span class="hljs-string">'password'</span>      =&gt; md5($faker-&gt;password),</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs php">            ];</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs php">        &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><code class="hljs php">        <span class="hljs-keyword">$this</span>-&gt;insert(<span class="hljs-string">'users'</span>, $data);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><code class="hljs php">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><code class="hljs php">&#125;</code></pre></td></tr></table></figure><h2 id="运行命令生成数据"><a href="#运行命令生成数据" class="headerlink" title="运行命令生成数据"></a>运行命令生成数据</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs bash">php think seed:run</code></pre></td></tr></table></figure><p>此时再去数据库查看，就生成了50条数据</p>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ThinkPHP </tag>
            
            <tag> Migration </tag>
            
            <tag> Faker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue组件间的通信</title>
      <link href="/2020/03/28/Vue%E7%BB%84%E4%BB%B6%E9%97%B4%E7%9A%84%E9%80%9A%E4%BF%A1/"/>
      <url>/2020/03/28/Vue%E7%BB%84%E4%BB%B6%E9%97%B4%E7%9A%84%E9%80%9A%E4%BF%A1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="父组件向子组件传值"><a href="#父组件向子组件传值" class="headerlink" title="父组件向子组件传值"></a>父组件向子组件传值</h1><blockquote><p>父组件通过 <code>v-bind</code> 绑定 <code>message</code> 值到子组件的 <code>prop</code>.</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs vue">  &lt;div id&#x3D;&quot;app&quot;&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs vue">    &lt;Children v-bind:message&#x3D;&quot;message&quot;&gt;&lt;&#x2F;Children&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs vue">  &lt;&#x2F;div&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;&#x2F;template&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;script&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs vue">import Children from &quot;.&#x2F;components&#x2F;Children&quot;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs vue">export default &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs vue">  name: &#39;Parents&#39;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs vue">  data()&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs vue">    return&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs vue">      message:&quot;父组件传递数据到子组件&quot;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs vue">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs vue">  &#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs vue">  components:&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs vue">    &quot;Children&quot;:Children</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs vue">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs vue">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;&#x2F;script&gt;</code></pre></td></tr></table></figure><blockquote><p>子组件通过 <code>props</code> 获取到父组件的值，即可渲染</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs vue">  &lt;div id&#x3D;&quot;app&quot;&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs vue">    &#123;message&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs vue">  &lt;&#x2F;div&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;&#x2F;template&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;script&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs vue">export default &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs vue">  name: &#39;Children&#39;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs vue">   props: [&#39;message&#39;],</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs vue">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;&#x2F;script&gt;</code></pre></td></tr></table></figure><h1 id="子组件向父组件传值"><a href="#子组件向父组件传值" class="headerlink" title="子组件向父组件传值"></a>子组件向父组件传值</h1><blockquote><p>父组件通过 <code>v-on:changeInput=&quot;updateInput&quot;</code>, 绑定一个自定义事件 <code>changeInput</code>,当子组件触发时调用事件回调函数<code>updateInput</code></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs vue">  &lt;div id&#x3D;&quot;app&quot;&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs vue">    &lt;Children v-on:changeInput&#x3D;&quot;updateInput&quot;&gt;&lt;&#x2F;Children&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs vue">  &lt;&#x2F;div&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;&#x2F;template&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;script&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs vue">import Children from &quot;.&#x2F;components&#x2F;Children&quot;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs vue">export default &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs vue">  name: &#39;Parents&#39;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs vue">  data()&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs vue">    return&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs vue">      input:&quot;默认值&quot;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs vue">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs vue">  &#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs vue">  components:&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs vue">    &quot;Children&quot;:Children</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs vue">  &#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs vue">  methods:&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><code class="hljs vue">    updateInput(e)&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><code class="hljs vue">        this.input &#x3D; e; </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><code class="hljs vue">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><code class="hljs vue">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><code class="hljs vue">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;&#x2F;script&gt;</code></pre></td></tr></table></figure><blockquote><p>子组件通过<code>$emit</code>,触发父组件的自定义事件<code>changeInput</code>,来传递值到父组件</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs vue">  &lt;div id&#x3D;&quot;app&quot;&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs vue">    &lt;input type&#x3D;&quot;text&quot; v-on:click&#x3D;&quot;changeInput&quot;&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs vue">  &lt;&#x2F;div&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;&#x2F;template&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;script&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs vue">export default &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs vue">  name: &#39;Children&#39;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs vue">  methods:&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs vue">    changeInput()&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs vue">        this.$emit(&#39;changeInput&#39;,&#39;子向父组件传值&#39;)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs vue">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs vue">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs vue">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;&#x2F;script&gt;</code></pre></td></tr></table></figure><h1 id="兄弟间通信"><a href="#兄弟间通信" class="headerlink" title="兄弟间通信"></a>兄弟间通信</h1><p>同级传参或者隔级传参可以用<code>eventBus</code>.这种方法通过一个空的Vue实例作为中央事件总线,然后给每个子组件绑定一个方法(触发时候发布eventBus),在 每个子组件做一个订阅的监控,触发绑在created里的方法执行,靠传递参数的不同实现同步数据</p><p>首先创建一个空的Vue实例：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">'vue'</span>;  </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">new</span> Vue();</code></pre></td></tr></table></figure></p><p>然后创建A组件,定义一个click点击事件，每次点击都会在bus中触发这个名为’click’的事件，并将点击事件的<code>event.target</code>顺着事件传递出去。：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs vue">  &lt;div id&#x3D;&quot;app&quot;&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs vue">  &lt;&#x2F;div&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;&#x2F;template&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;script&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs vue">import Bus from &#39;.&#x2F;Bus&#39;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs vue">export default &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs vue">  name: &#39;A&#39;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs vue">  methods:&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs vue">    clickA(event)&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs vue">        Bus.$emit(&#39;click&#39;, event.target);  </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs vue">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs vue">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs vue">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;&#x2F;script&gt;</code></pre></td></tr></table></figure></p><p>创建B组件,在<code>created</code>中调用Bus监听或者事件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs vue">  &lt;div id&#x3D;&quot;app&quot;&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs vue">  &lt;&#x2F;div&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;&#x2F;template&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;script&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs vue">import Bus from &#39;.&#x2F;Bus&#39;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs vue">export default &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs vue">  name: &#39;B&#39;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs vue">    created() &#123;  </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs vue">            Bus.$on(&#39;click&#39;, target &#x3D;&gt; &#123;  </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs vue">                console.log(target);  </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs vue">            &#125;);  </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs vue">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs vue">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;&#x2F;script&gt;</code></pre></td></tr></table></figure></p><h1 id="attrs-listeners"><a href="#attrs-listeners" class="headerlink" title="$attrs/$listeners"></a>$attrs/$listeners</h1><ul><li><code>$attrs</code>: 包含了父作用域中不作为 prop 被识别 (且获取) 的特性绑定 (class 和 style 除外)。当一个组件没有声明任何 prop 时，这里会包含所有父作用域的绑定 (class 和 style 除外)，并且可以通过 v-bind=”$attrs” 传入内部组件——在创建高级别的组件时非常有用。</li><li><code>$listeners</code>: 包含了父作用域中的 (不含 .native 修饰器的) v-on 事件监听器。它可以通过 v-on=”$listeners” 传入内部组件——在创建更高层次的组件时非常有用</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs vue">  &lt;div&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs vue">    &lt;child1</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs vue">      :a&#x3D;&quot;a&quot;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs vue">      :b&#x3D;&quot;b&quot;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs vue">      :c&#x3D;&quot;c&quot;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs vue">      :d&#x3D;&quot;d&quot;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs vue">      title&#x3D;&quot;title&quot;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs vue">     v-on:click1&#x3D;&quot;onclick1&quot;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs vue">    &gt;&lt;&#x2F;child1&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs vue">  &lt;&#x2F;div&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;&#x2F;template&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;script&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs vue">import child1 from &#39;.&#x2F;child1.vue&#39;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs vue">export default &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs vue">  components: &#123; child1 &#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs vue">  data() &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs vue">    return &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><code class="hljs vue">      a: &quot;Javascript&quot;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><code class="hljs vue">      b: &quot;Html&quot;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><code class="hljs vue">      c: &quot;CSS&quot;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><code class="hljs vue">      d: &quot;Vue&quot;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><code class="hljs vue">    &#125;;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><code class="hljs vue">  &#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><code class="hljs vue">  methods:&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><code class="hljs vue">    onclick1()&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><code class="hljs vue">        console.log(&quot;click1 running...&quot;);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><code class="hljs vue">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><code class="hljs vue">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><code class="hljs vue">&#125;;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;&#x2F;script&gt;</code></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs vue">  &lt;div&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs vue">    &lt;div&gt;&#123;&#123;this.$attrs&#125;&#125;&lt;&#x2F;div&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs vue">    &lt;child2</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs vue">    v-bind&#x3D;&quot;$attrs&quot;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs vue">    v-on&#x3D;&quot;$listeners&quot;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs vue">    &#x2F;&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs vue">  &lt;&#x2F;div&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;&#x2F;template&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;script&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs vue">import child2 from &#39;.&#x2F;child2.vue&#39;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs vue">export default &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs vue">  components: &#123; child2 &#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs vue">  inheritAttrs: false,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs vue">  created() &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs vue">&#x2F;&#x2F; &#123; &quot;a&quot;: &quot;Javascript&quot;,&quot;b&quot;: &quot;Html&quot;, &quot;c&quot;: &quot;CSS&quot;, &quot;d&quot;: &quot;Vue&quot;, &quot;title&quot;: &quot;前端工匠&quot; &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs vue">      console.log(this.$attrs); </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs vue">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><code class="hljs vue">&#125;;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;&#x2F;script&gt;</code></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs vue">  &lt;div&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs vue">    &lt;div&gt;&#123;&#123;this.$attrs&#125;&#125;&lt;&#x2F;div&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs vue">    &lt;button v-on:click&#x3D;&quot;$emit(&#39;click1&#39;,&#39;按钮点击&#39;)&quot;&gt;触发事件&lt;&#x2F;button&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs vue">  &lt;&#x2F;div&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;&#x2F;template&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;script&gt;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs vue">export default &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs vue">   created() &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs vue">      console.log(this.$attrs); </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs vue">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs vue">&#125;;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs vue">&lt;&#x2F;script&gt;</code></pre></td></tr></table></figure><h1 id="provide-inject"><a href="#provide-inject" class="headerlink" title="provide/inject"></a>provide/inject</h1><p>在A组件设置 <code>provide</code> 属性 name 值为 fireworks，它将这个name提供给了它所有的子组件。在它的子组件 B 中，通过 inject 注入了从 A 组件中提供的 name 变量，所以 this.name 就等于 fireworks.<br>但是它们并不是响应式的，所以 A 里面的name改变了，B还是 fireworks。然而，如果你传入了一个可监听的对象，那么其对象的属性还是可响应的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs vue">&#x2F;&#x2F; A.vue</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs vue">export default &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs vue">  provide: &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs vue">    name: &#39;fireworks&#39;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs vue">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs vue">&#125;</code></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs vue">&#x2F;&#x2F; B.vue</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs vue">export default &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs vue">  inject: [&#39;name&#39;],</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs vue">  mounted () &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs vue">    console.log(this.name);  &#x2F;&#x2F; fireworks</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs vue">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs vue">&#125;</code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS权重</title>
      <link href="/2020/03/27/CSS%E6%9D%83%E9%87%8D/"/>
      <url>/2020/03/27/CSS%E6%9D%83%E9%87%8D/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="CSS-选择器"><a href="#CSS-选择器" class="headerlink" title="CSS 选择器"></a>CSS 选择器</h1><p><a href="https://www.w3school.com.cn/cssref/css_selectors.asp" target="_blank" rel="noopener">CSS 选择器参考手册</a></p><div class="table-container"><table><thead><tr><th>选择器</th><th>例子</th><th>描述</th></tr></thead><tbody><tr><td>通配符</td><td>*</td><td>选择所有元素</td></tr><tr><td>id</td><td>#id</td><td>选择 id=”firstname” 的所有元素</td></tr><tr><td>class</td><td>.container</td><td>选择 class=”container” 的所有元素</td></tr><tr><td>标签</td><td>span</td><td>选择所有 <span> 元素</span></td></tr><tr><td>后代选择器</td><td>div p</td><td>选择 <div> 元素内部的所有 <p> 元素</p></div></td></tr><tr><td>子元素选择器</td><td>div&gt;p</td><td>选择父元素为 <div> 元素的所有 <p> 元素</p></div></td></tr><tr><td>兄弟选择器</td><td>div+p</td><td>选择紧接在 <div> 元素之后的所有 <p> 元素</p></div></td></tr><tr><td>属性选择器</td><td>[target]</td><td>选择带有 target 属性所有元素</td></tr><tr><td>伪类选择器</td><td>a:link</td><td>选择所有未被访问的链接</td></tr><tr><td>伪元素选择器</td><td>p:before</td><td>在每个 <p> 元素的内容之前插入内容</p></td></tr></tbody></table></div><h1 id="CSS-权重规则"><a href="#CSS-权重规则" class="headerlink" title="CSS 权重规则"></a>CSS 权重规则</h1><ol><li>第一优先级：如果使用了<code>!important</code>,那么它会覆盖全部的样式</li><li>第一等：内联样式，如: style=”color:red;”，权值为1000。</li><li>第二等：ID选择器，如：#wrapper，权值为0100。</li><li>第三等：类，伪类和属性选择器，如.content，权值为0010。</li><li>第四等：标签选择器和伪元素选择器，如div p，权值为0001。</li><li>通配符、子选择器、相邻选择器等的。如*、&gt;、+,权值为0000。</li><li>继承的样式没有权值。</li></ol><h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-id">#wrapper</span> <span class="hljs-selector-tag">div</span><span class="hljs-selector-id">#container</span> <span class="hljs-selector-tag">h2</span> &#123; <span class="hljs-comment">/* 0100 + 0001 + 0100 + 0001 = 0202 */</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">color</span>: red;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs css">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-id">#wrapper</span> <span class="hljs-selector-id">#container</span> &gt; <span class="hljs-selector-tag">h2</span> &#123; <span class="hljs-comment">/* 0100 + 0100 + 0001 = 0201 */</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">color</span>: blue</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs css">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">body</span> <span class="hljs-selector-id">#wrapper</span> <span class="hljs-selector-tag">div</span><span class="hljs-selector-attr">[id="container"]</span> <span class="hljs-selector-tag">h2</span> &#123; <span class="hljs-comment">/*  0001 + 0100 + 0001 + 0001 = 0103 */</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">color</span>: green;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs css">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-id">#container</span> <span class="hljs-selector-tag">div</span><span class="hljs-selector-class">.paragraph</span> <span class="hljs-selector-tag">h2</span> &#123; <span class="hljs-comment">/*  0100 + 0001 + 0010 + 0001 = 0112 */</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">color</span>: orange;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs css">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-id">#container</span> <span class="hljs-selector-attr">[class="paragraph"]</span> <span class="hljs-selector-tag">h2</span> &#123; <span class="hljs-comment">/*  0100 + 0010 + 0001 = 0111 */</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">color</span>: yellow;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs css">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span><span class="hljs-selector-id">#container</span> <span class="hljs-selector-tag">div</span><span class="hljs-selector-class">.paragraph</span> <span class="hljs-selector-tag">h2</span><span class="hljs-selector-class">.first</span> &#123; <span class="hljs-comment">/*  0001 + 0100 + 0001 + 0010 + 0001 + 0010 = 0122 */</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">color</span>: pink;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs css">&#125;</code></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"wrapper"</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs html">    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"container"</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs html">        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>优先级是如何计算的？<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs html">        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>优先级就是分配给指定的 CSS 声明的一个权重，它由 匹配的选择器中的 每一种选择器类型的 数值 决定。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs html">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"paragraph"</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs html">            <span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"first"</span>&gt;</span>!important 例外规则<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs html">            <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>当在一个样式声明中使用一个 !important 规则时，此声明将覆盖任何其他声明。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs html">        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs html">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 选择器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS3动画初识</title>
      <link href="/2020/03/27/CSS3%E5%8A%A8%E7%94%BB%E5%88%9D%E8%AF%86/"/>
      <url>/2020/03/27/CSS3%E5%8A%A8%E7%94%BB%E5%88%9D%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="CSS3-动画库"><a href="#CSS3-动画库" class="headerlink" title="CSS3 动画库"></a>CSS3 动画库</h1><p>推荐：<br><a href="https://animista.net/" target="_blank" rel="noopener">Animista</a><br><a href="http://www.animate.net.cn/" target="_blank" rel="noopener">Animate</a><br><a href="http://ianlunn.github.io/Hover/" target="_blank" rel="noopener">Hover</a><br><a href="https://nzbin.github.io/three-dots/" target="_blank" rel="noopener">Three Dots</a><br><a href="https://elrumordelaluz.github.io/csshake/" target="_blank" rel="noopener">CSShake</a><br><a href="http://cssanimation.io/index.html" target="_blank" rel="noopener">cssanimation</a></p><h1 id="CSS3-创建动画"><a href="#CSS3-创建动画" class="headerlink" title="CSS3 创建动画"></a>CSS3 创建动画</h1><ol><li>将元素与动画进行绑定,设置动画持续时间</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">width</span>:<span class="hljs-number">100px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">height</span>:<span class="hljs-number">100px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">background</span>:red;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">animation</span>:change <span class="hljs-number">5s</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs css">&#125;</code></pre></td></tr></table></figure><ol><li>创建 <code>@keyframes</code> 动画规则</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs css">@<span class="hljs-keyword">keyframes</span> change</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs css">&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">from</span> &#123;<span class="hljs-attribute">background</span>:red;&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">to</span> &#123;<span class="hljs-attribute">background</span>:green;&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs css">&#125;</code></pre></td></tr></table></figure><p>这样一个简单的改变div颜色的动画就完成了。</p><h1 id="animation-属性"><a href="#animation-属性" class="headerlink" title="animation 属性"></a>animation 属性</h1><blockquote><p>animation: name duration timing-function delay iteration-count direction fill-mode play-state;</p></blockquote><p>name：动画名称<br>duration： 动画指定需要多少秒或毫秒完成，默认是 0<br>timing-function： 规定动画的速度曲线，默认是 “ease”<br>delay： 规定动画何时开始，默认是 0<br>iteration-count： 定义动画的播放次数，默认是 1<br>direction：    规定动画是否在下一周期逆向地播放，默认是 “normal”<br>fill-mode： 规定当动画不播放时（当动画完成时，或当动画有一个延迟未开始播放时），要应用到元素的样式<br>play-state： 规定动画是否正在运行或暂停，默认是 “running”</p>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 动画 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js常用事件汇总</title>
      <link href="/2020/03/27/js%E5%B8%B8%E7%94%A8%E4%BA%8B%E4%BB%B6%E6%B1%87%E6%80%BB/"/>
      <url>/2020/03/27/js%E5%B8%B8%E7%94%A8%E4%BA%8B%E4%BB%B6%E6%B1%87%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="JavaScript事件类型"><a href="#JavaScript事件类型" class="headerlink" title="JavaScript事件类型"></a>JavaScript事件类型</h1><p>浏览器中的事件有很多，在这我只记录了常用的一些事件。详细内容请前往<a href="https://developer.mozilla.org/zh-CN/docs/Web/Events" target="_blank" rel="noopener">MDN</a>查看。</p><h1 id="资源事件"><a href="#资源事件" class="headerlink" title="资源事件"></a>资源事件</h1><h2 id="onload-事件"><a href="#onload-事件" class="headerlink" title="onload 事件"></a>onload 事件</h2><p>onload 事件会在页面或图像加载完成后立即发生。</p><p>在 HTML 中:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">body</span> <span class="hljs-attr">onload</span>=<span class="hljs-string">"loadHtml()"</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> &gt;</span><span class="javascript"></span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs html">  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">loadHtml</span>(<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs html">     <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'页面已加载'</span>)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs html">   &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span></code></pre></td></tr></table></figure></p><p>在 javascript 中可以这样使用:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">window</span>.onload = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'资源已加载'</span>)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr></table></figure></p><h2 id="unload-事件"><a href="#unload-事件" class="headerlink" title="unload 事件"></a>unload 事件</h2><p>当一个页面关闭，或者跳转到其他页面将触发<code>unload</code>事件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">window</span>.addEventListener(<span class="hljs-string">'unload'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">event</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'再见！'</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">    &#125;);</code></pre></td></tr></table></figure><h1 id="视图事件"><a href="#视图事件" class="headerlink" title="视图事件"></a>视图事件</h1><h2 id="resize-事件"><a href="#resize-事件" class="headerlink" title="resize 事件"></a>resize 事件</h2><p>当浏览器的窗口大小被重置时，就会触发<code>onresize</code>事件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">window</span>.onresize = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'窗口在变化'</span>)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr></table></figure><h2 id="scroll-事件"><a href="#scroll-事件" class="headerlink" title="scroll 事件"></a>scroll 事件</h2><p><code>onscroll</code> 事件在元素滚动条在滚动时触发</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> object = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">'list'</span>)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"> object.onscroll=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">   <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'滚动事件'</span>)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript"> &#125;;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript"> object.addEventListener(<span class="hljs-string">"scroll"</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">   <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'滚动事件'</span>)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript"> &#125;);</code></pre></td></tr></table></figure><h1 id="焦点事件"><a href="#焦点事件" class="headerlink" title="焦点事件"></a>焦点事件</h1><p>焦点事件会在页面元素获得或失去焦点时触发。</p><h2 id><a href="#" class="headerlink" title=" "></a> </h2><h1 id="blur-事件"><a href="#blur-事件" class="headerlink" title="blur 事件"></a>blur 事件</h1><p>在元素失去焦点时触发。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"input"</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> &gt;</span><span class="javascript"></span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"input"</span>).onblur=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-built_in">console</span>.log(<span class="hljs-string">'失去焦点'</span>)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs html">&#125;;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre></td></tr></table></figure><h1 id="focus-事件"><a href="#focus-事件" class="headerlink" title="focus 事件"></a>focus 事件</h1><p>在元素获得焦点时触发</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"input"</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> &gt;</span><span class="javascript"></span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"input"</span>).onfocus=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-built_in">console</span>.log(<span class="hljs-string">'获得焦点'</span>)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs html">&#125;;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre></td></tr></table></figure><h1 id="鼠标事件"><a href="#鼠标事件" class="headerlink" title="鼠标事件"></a>鼠标事件</h1><h2 id="click-事件"><a href="#click-事件" class="headerlink" title="click 事件"></a>click 事件</h2><p>在元素上按下并释放任意鼠标按键。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">'btn'</span>).onclick=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'点击事件'</span>)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;;</code></pre></td></tr></table></figure><h2 id="dblclick-事件"><a href="#dblclick-事件" class="headerlink" title="dblclick 事件"></a>dblclick 事件</h2><p>在元素上双击鼠标按钮</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">'btn'</span>).ondblclick=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'双击事件'</span>)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;;</code></pre></td></tr></table></figure><h2 id="mousedown-事件"><a href="#mousedown-事件" class="headerlink" title="mousedown 事件"></a>mousedown 事件</h2><p>鼠标按下事件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">'btn'</span>).onmousedown=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'鼠标按下事件'</span>)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;;</code></pre></td></tr></table></figure><h2 id="mouseenter-事件"><a href="#mouseenter-事件" class="headerlink" title="mouseenter 事件"></a>mouseenter 事件</h2><p>指针移到有事件监听的元素内，只会在进入时触发一次。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript">list.onmouseenter = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"鼠标移入"</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">list.addEventListener(<span class="hljs-string">"mouseenter"</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"鼠标移入"</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;);</code></pre></td></tr></table></figure><h2 id="mouseleave-事件"><a href="#mouseleave-事件" class="headerlink" title="mouseleave 事件"></a>mouseleave 事件</h2><p>指针移出元素范围外，只会在进入时触发一次。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript">list.mouseleave = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"鼠标移出"</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">list.addEventListener(<span class="hljs-string">"mouseleave"</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"鼠标移出"</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;);</code></pre></td></tr></table></figure><h2 id="mousemove-事件"><a href="#mousemove-事件" class="headerlink" title="mousemove 事件"></a>mousemove 事件</h2><p>指针在元素内移动时持续触发.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript">object.addEventListener(<span class="hljs-string">"onmousemove"</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">let</span> oEvent = e||<span class="hljs-built_in">window</span>.event||event;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"坐标值:X:"</span> + oEvent.clientX + <span class="hljs-string">" Y:"</span> + oEvent.clientY);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">object.onmousemove = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">let</span> oEvent = e||<span class="hljs-built_in">window</span>.event||event;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"坐标值:X:"</span> + oEvent.clientX + <span class="hljs-string">" Y:"</span> + oEvent.clientY);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;;</code></pre></td></tr></table></figure><h2 id="mouseover-事件"><a href="#mouseover-事件" class="headerlink" title="mouseover 事件"></a>mouseover 事件</h2><p>指针移到有事件监听的元素或者它的子元素内,在它的子元素之间移动也将触发事件.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript">list.onmouseover = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"鼠标进入"</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;;</code></pre></td></tr></table></figure><h2 id="mouseout-事件"><a href="#mouseout-事件" class="headerlink" title="mouseout 事件"></a>mouseout 事件</h2><p>指针移出元素，或者移到它的子元素上，在它的子元素之间移动也将触发事件。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript">list.addEventListener(<span class="hljs-string">"mouseout"</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"鼠标移出1"</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;);</code></pre></td></tr></table></figure><h2 id="mouseup-事件"><a href="#mouseup-事件" class="headerlink" title="mouseup 事件"></a>mouseup 事件</h2><p>释放鼠标时触发</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript">list.addEventListener(<span class="hljs-string">'mouseup'</span>,<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"松开了鼠标"</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;)</code></pre></td></tr></table></figure><h2 id="select-事件"><a href="#select-事件" class="headerlink" title="select 事件"></a>select 事件</h2><p>select 事件会在文本框中的文本被选中时发生.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript">input.onselect = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)</span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`触发了选中事件`</span>)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr></table></figure><h2 id="wheel-事件"><a href="#wheel-事件" class="headerlink" title="wheel 事件"></a>wheel 事件</h2><p>wheel 事件在鼠标滚轮在元素上下滚动时触发。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript">object.addEventListener(<span class="hljs-string">"wheel"</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">   <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"鼠标滚轮事件"</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"> &#125;);</code></pre></td></tr></table></figure><h1 id="拖放事件"><a href="#拖放事件" class="headerlink" title="拖放事件"></a>拖放事件</h1><h2 id="drag-事件"><a href="#drag-事件" class="headerlink" title="drag 事件"></a>drag 事件</h2><p>正在拖动元素或文本选区（在此过程中持续触发，每 350ms 触发一次）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript">p.addEventListener(<span class="hljs-string">"drag"</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">   <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"拖放事件"</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"> &#125;);</code></pre></td></tr></table></figure><h2 id="dragend-事件"><a href="#dragend-事件" class="headerlink" title="dragend 事件"></a>dragend 事件</h2><p>拖放操作结束。（松开鼠标按钮或按下 Esc 键）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript">p.addEventListener(<span class="hljs-string">"dragend"</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">   <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"拖放结束事件"</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"> &#125;);</code></pre></td></tr></table></figure><h2 id="dragenter-事件"><a href="#dragenter-事件" class="headerlink" title="dragenter 事件"></a>dragenter 事件</h2><p>被拖动的元素或文本选区移入有效释放目标区</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr></table></figure><h2 id="dragstart-事件"><a href="#dragstart-事件" class="headerlink" title="dragstart 事件"></a>dragstart 事件</h2><p>用户开始拖动HTML元素或选中的文本</p><h2 id="dragleave-事件"><a href="#dragleave-事件" class="headerlink" title="dragleave 事件"></a>dragleave 事件</h2><p>被拖动的元素或文本选区移出有效释放目标区</p><h2 id="dragover-事件"><a href="#dragover-事件" class="headerlink" title="dragover 事件"></a>dragover 事件</h2><p>被拖动的元素或文本选区正在有效释放目标上被拖动 （在此过程中持续触发，每350ms触发一次）</p><h2 id="drop-事件"><a href="#drop-事件" class="headerlink" title="drop 事件"></a>drop 事件</h2><p>元素在有效释放目标区上释放</p><h1 id="键盘事件"><a href="#键盘事件" class="headerlink" title="键盘事件"></a>键盘事件</h1><h2 id="keydown-事件"><a href="#keydown-事件" class="headerlink" title="keydown 事件"></a>keydown 事件</h2><p>按下任意按键。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">document</span>.addEventListener(<span class="hljs-string">"keydown"</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">keydown</span>(<span class="hljs-params">event</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-built_in">console</span>.log(event.keyCode);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;);</code></pre></td></tr></table></figure><h2 id="keypress-事件"><a href="#keypress-事件" class="headerlink" title="keypress 事件"></a>keypress 事件</h2><p>除 Shift、Fn、CapsLock 外的任意键被按住。（连续触发。）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">document</span>.addEventListener(<span class="hljs-string">"keypress"</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">keydown</span>(<span class="hljs-params">event</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-built_in">console</span>.log(event.keyCode);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;);</code></pre></td></tr></table></figure><h2 id="keyup-事件"><a href="#keyup-事件" class="headerlink" title="keyup 事件"></a>keyup 事件</h2><p>释放任意按键</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">document</span>.addEventListener(<span class="hljs-string">"keyup"</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">keydown</span>(<span class="hljs-params">event</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">   <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'释放按键'</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"> &#125;);</code></pre></td></tr></table></figure><h2 id="input-事件"><a href="#input-事件" class="headerlink" title="input 事件"></a>input 事件</h2><p>在用户输入时触发。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript">input.addEventListener(<span class="hljs-string">"input"</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"输入事件"</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;);</code></pre></td></tr></table></figure><h1 id="剪贴板事件"><a href="#剪贴板事件" class="headerlink" title="剪贴板事件"></a>剪贴板事件</h1><h2 id="cut-事件"><a href="#cut-事件" class="headerlink" title="cut 事件"></a>cut 事件</h2><p>已经剪贴选中的文本内容并且复制到了剪贴板。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript">input.addEventListener(<span class="hljs-string">'cut'</span>,<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">       <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'剪切文本'</span>)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"> &#125;)</code></pre></td></tr></table></figure><h2 id="copy-事件"><a href="#copy-事件" class="headerlink" title="copy 事件"></a>copy 事件</h2><p>已经把选中的文本内容复制到了剪贴板。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript">input.addEventListener(<span class="hljs-string">'copy'</span>,<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">   <span class="hljs-built_in">console</span>.log()</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">   <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'拷贝文本:'</span>+e.target.value)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript"> &#125;)</code></pre></td></tr></table></figure><h2 id="paste-事件"><a href="#paste-事件" class="headerlink" title="paste 事件"></a>paste 事件</h2><p>从剪贴板复制的文本内容被粘贴。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript">input.addEventListener(<span class="hljs-string">'paste'</span>,<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'黏贴了文本'</span>)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;)</code></pre></td></tr></table></figure><h1 id="媒体事件"><a href="#媒体事件" class="headerlink" title="媒体事件"></a>媒体事件</h1><h2 id="canplay-事件"><a href="#canplay-事件" class="headerlink" title="canplay 事件"></a>canplay 事件</h2><p>可以开始播放视频/音频（audio/video）时触发</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">audio</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"audio"</span> <span class="hljs-attr">src</span>=<span class="hljs-string">""</span> <span class="hljs-attr">oncanplay</span>=<span class="hljs-string">"play"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">audio</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs html">  <span class="hljs-keyword">var</span> audio = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"audio"</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs html">  audio.addEventListener(<span class="hljs-string">"canplay"</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs html">    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"可以开始播放视频"</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs html">  &#125;);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre></td></tr></table></figure><h2 id="ended-事件"><a href="#ended-事件" class="headerlink" title="ended 事件"></a>ended 事件</h2><p>在视频/音频（audio/video）播放结束时触发</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript">object.addEventListener(<span class="hljs-string">"ended"</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'视频已播放结束'</span>)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;);</code></pre></td></tr></table></figure><h2 id="error-事件"><a href="#error-事件" class="headerlink" title="error 事件"></a>error 事件</h2><p>在视频/音频（audio/video）数据加载期间发生错误时触发。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript">object.addEventListener(<span class="hljs-string">"ended"</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'视频加载出现问题'</span>)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;);</code></pre></td></tr></table></figure><h2 id="play-事件"><a href="#play-事件" class="headerlink" title="play 事件"></a>play 事件</h2><p>在视频/音频（audio/video）开始播放时触发。</p><h2 id="pause-事件"><a href="#pause-事件" class="headerlink" title="pause 事件"></a>pause 事件</h2><p>在视频/音频（audio/video）暂停时触发。</p><h2 id="playing-事件"><a href="#playing-事件" class="headerlink" title="playing 事件"></a>playing 事件</h2><p>在视频/音频（audio/video）暂停或者在缓冲后准备重新开始播放时触发。</p><h2 id="seeked-事件"><a href="#seeked-事件" class="headerlink" title="seeked 事件"></a>seeked 事件</h2><p>在用户重新定位视频/音频（audio/video）的播放位置后触发。</p><h2 id="volumechange-事件"><a href="#volumechange-事件" class="headerlink" title="volumechange 事件"></a>volumechange 事件</h2><p>在视频/音频（audio/video）的音量发生改变时触发。</p><h2 id="timeupdate-事件"><a href="#timeupdate-事件" class="headerlink" title="timeupdate 事件"></a>timeupdate 事件</h2><p>在视频/音频（audio/video）当前的播放位置发送改变时触发。</p><h1 id="触摸事件"><a href="#触摸事件" class="headerlink" title="触摸事件"></a>触摸事件</h1><h2 id="touchstart-事件"><a href="#touchstart-事件" class="headerlink" title="touchstart  事件"></a>touchstart  事件</h2><p>手指刚接触屏幕时触发</p><h2 id="touchend-事件"><a href="#touchend-事件" class="headerlink" title="touchend  事件"></a>touchend  事件</h2><p>手指从屏幕上移开时触发</p><h2 id="touchmove-事件"><a href="#touchmove-事件" class="headerlink" title="touchmove 事件"></a>touchmove 事件</h2><p>手指在屏幕上移动时触发</p><h2 id="touchcancel-事件"><a href="#touchcancel-事件" class="headerlink" title="touchcancel 事件"></a>touchcancel 事件</h2><p>触摸过程被系统取消时触发</p>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 事件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用css创建三角形</title>
      <link href="/2020/03/26/%E7%94%A8css%E5%88%9B%E5%BB%BA%E4%B8%89%E8%A7%92%E5%BD%A2/"/>
      <url>/2020/03/26/%E7%94%A8css%E5%88%9B%E5%BB%BA%E4%B8%89%E8%A7%92%E5%BD%A2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><p>设置一个<code>div</code>宽高都为0，通过<code>border</code>来控制这个<code>div</code>的大小。然后将其中几个边background设置为transparent，即可得到三角形</p><h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">'triangle'</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.triangle</span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs css">      <span class="hljs-attribute">width</span>: <span class="hljs-number">0</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs css">      <span class="hljs-attribute">height</span>: <span class="hljs-number">0</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs css">      <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#fff</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs css">      <span class="hljs-attribute">border-right</span>: <span class="hljs-number">100px</span> solid transparent;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs css">      <span class="hljs-attribute">border-left</span>: <span class="hljs-number">100px</span> solid transparent;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs css">      <span class="hljs-attribute">border-top</span>: <span class="hljs-number">100px</span> solid <span class="hljs-built_in">rgb</span>(131,194,177);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs css">      <span class="hljs-attribute">border-bottom</span>: <span class="hljs-number">100px</span> solid transparent;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs css">&#125;</code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 样式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在页面上隐藏元素的方法</title>
      <link href="/2020/03/26/%E5%9C%A8%E9%A1%B5%E9%9D%A2%E4%B8%8A%E9%9A%90%E8%97%8F%E5%85%83%E7%B4%A0%E7%9A%84%E6%96%B9%E6%B3%95/"/>
      <url>/2020/03/26/%E5%9C%A8%E9%A1%B5%E9%9D%A2%E4%B8%8A%E9%9A%90%E8%97%8F%E5%85%83%E7%B4%A0%E7%9A%84%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><ul><li>display:none;         // 让元素在页面中消失，不占据实际的空间</li><li>overflow:hidden;      </li><li>visibility:hidden;    // 隐藏内容，但占位保留</li><li>opacity:0;            // 视觉上的隐藏，元素还是占据有文档的位置</li><li>width:0,height:0;     // 元素宽高为0</li><li>z-index: -9999999999999   // 使层级隐藏在其他元素之下</li><li>margin-left: -100%        // 将元素移动到视口之外</li></ul>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 隐藏元素 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>圣杯布局和双飞翼布局的理解和区别</title>
      <link href="/2020/03/26/%E5%9C%A3%E6%9D%AF%E5%B8%83%E5%B1%80%E5%92%8C%E5%8F%8C%E9%A3%9E%E7%BF%BC%E5%B8%83%E5%B1%80%E7%9A%84%E7%90%86%E8%A7%A3%E5%92%8C%E5%8C%BA%E5%88%AB/"/>
      <url>/2020/03/26/%E5%9C%A3%E6%9D%AF%E5%B8%83%E5%B1%80%E5%92%8C%E5%8F%8C%E9%A3%9E%E7%BF%BC%E5%B8%83%E5%B1%80%E7%9A%84%E7%90%86%E8%A7%A3%E5%92%8C%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="圣杯布局和双飞翼布局作用"><a href="#圣杯布局和双飞翼布局作用" class="headerlink" title="圣杯布局和双飞翼布局作用"></a>圣杯布局和双飞翼布局作用</h1><p>圣杯布局和双飞翼布局的作用是一样的，就是两边顶宽然后中间自适应的三栏布局，中间栏要在放在文档流前面以优先渲染。</p><h1 id="圣杯布局"><a href="#圣杯布局" class="headerlink" title="圣杯布局"></a>圣杯布局</h1><p>三栏利用 <code>float</code> 和 负<code>margin</code> 并排，设置父容器的<code>padding</code>给两边的侧边栏预留位置。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"wrapper"</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs html">    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"middle"</span>&gt;</span>middle<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs html">    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"left"</span>&gt;</span>left<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs html">    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"right"</span>&gt;</span>right<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.wrapper</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span> <span class="hljs-number">100px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs css">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.middle</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">float</span>: left;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">height</span>: <span class="hljs-number">300px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">background</span>: red;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs css">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.left</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">float</span>: left;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs css">     <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">margin-left</span>: -<span class="hljs-number">100%</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">background</span>: blue;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">height</span>: <span class="hljs-number">300px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">position</span>: relative;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">right</span>: <span class="hljs-number">100px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs css">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.right</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">float</span>: left;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">margin-left</span>: -<span class="hljs-number">100px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">background</span>: yellow;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">height</span>: <span class="hljs-number">300px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">position</span>: relative;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">left</span>: <span class="hljs-number">100px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><code class="hljs css">&#125;</code></pre></td></tr></table></figure><h1 id="双飞翼布局"><a href="#双飞翼布局" class="headerlink" title="双飞翼布局"></a>双飞翼布局</h1><p>三栏利用 <code>float</code> 和 负<code>margin</code> 并排，实在中间栏加了一层同情，利用<code>margin</code>给两边预留位置</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"wrapper"</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs html">    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"container"</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs html">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"middle"</span>&gt;</span>middle<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs html">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs html">    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"left"</span>&gt;</span>left<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs html">    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"right"</span>&gt;</span>right<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.wrapper</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs css">         <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs css">     &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs css">     <span class="hljs-selector-class">.container</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs css">         <span class="hljs-attribute">float</span>: left;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs css">         <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs css">     &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs css">     <span class="hljs-selector-class">.middle</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs css">         <span class="hljs-attribute">margin</span>:  <span class="hljs-number">0</span> <span class="hljs-number">100px</span> <span class="hljs-number">0</span> <span class="hljs-number">100px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs css">         <span class="hljs-attribute">height</span>: <span class="hljs-number">300px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs css">         <span class="hljs-attribute">background</span>: red;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs css">     &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs css">     <span class="hljs-selector-class">.left</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs css">         <span class="hljs-attribute">float</span>: left;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs css">         <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs css">         <span class="hljs-attribute">margin-left</span>: -<span class="hljs-number">100%</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs css">         <span class="hljs-attribute">background</span>: blue;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs css">         <span class="hljs-attribute">height</span>: <span class="hljs-number">300px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><code class="hljs css">     &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><code class="hljs css">     <span class="hljs-selector-class">.right</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><code class="hljs css">         <span class="hljs-attribute">float</span>: left;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><code class="hljs css">         <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><code class="hljs css">         <span class="hljs-attribute">margin-left</span>: -<span class="hljs-number">100px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><code class="hljs css">         <span class="hljs-attribute">background</span>: yellow;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><code class="hljs css">         <span class="hljs-attribute">height</span>: <span class="hljs-number">300px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><code class="hljs css">     &#125;</code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 布局 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何清除浮动？</title>
      <link href="/2020/03/26/%E5%A6%82%E4%BD%95%E6%B8%85%E9%99%A4%E6%B5%AE%E5%8A%A8/"/>
      <url>/2020/03/26/%E5%A6%82%E4%BD%95%E6%B8%85%E9%99%A4%E6%B5%AE%E5%8A%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="浮动的定义"><a href="#浮动的定义" class="headerlink" title="浮动的定义"></a>浮动的定义</h1><p><code>float</code> 会使元素脱离文档流，造成父元素的高度塌陷。所以使用<code>float</code>后需要清除浮动。</p><h1 id="通过空标签和-clear-both-来清除浮动"><a href="#通过空标签和-clear-both-来清除浮动" class="headerlink" title="通过空标签和 clear:both 来清除浮动"></a>通过空标签和 <code>clear:both</code> 来清除浮动</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"parent"</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs html">      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"son"</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs html">      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"son"</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs html">      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"clear"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs html">  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.son</span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs css">   <span class="hljs-attribute">float</span>: left;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs css">   <span class="hljs-attribute">background</span>: royalblue;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs css">   <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs css">   <span class="hljs-attribute">height</span>: <span class="hljs-number">200px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs css">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.clear</span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs css">     <span class="hljs-attribute">clear</span>: both;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs css">&#125;</code></pre></td></tr></table></figure><blockquote><p>缺点：需要添加很多额外的标签</p></blockquote><h1 id="给父元素设置-overflow：auto"><a href="#给父元素设置-overflow：auto" class="headerlink" title="给父元素设置 overflow：auto"></a>给父元素设置 <code>overflow：auto</code></h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"parent"</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs html">    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"son"</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs html">    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"son"</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.parent</span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs css">     <span class="hljs-attribute">overflow</span>: auto;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs css"> &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.son</span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">float</span>: left;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">background</span>: royalblue;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">height</span>: <span class="hljs-number">200px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs css">&#125;</code></pre></td></tr></table></figure><blockquote><p>缺点：当内容增多时容易因为不会自动换行而导致内容被隐藏掉，无法显示需要溢出的元素</p></blockquote><h1 id="在父元素上添加伪元素"><a href="#在父元素上添加伪元素" class="headerlink" title="在父元素上添加伪元素"></a>在父元素上添加伪元素</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"parent clearfix"</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs html">    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"son"</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs html">    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"son"</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs css"> .son&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs css">     float: left;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs css">     background: royalblue;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs css">     width: 200px;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs css">     height: 200px;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs css"> &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs css"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs css">.clearfix&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs css">        zoom: 1;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs css">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs css">.clearfix::before,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs css">.clearfix::after&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs css">        content:" ";     // 生成内容作为最后一个元素</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs css">        display:block;   // 使生成的元素以块级元素显示,占满剩余空间</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs css">        height:0;        // 避免生成内容破坏原有布局的高度</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs css">        visibility:hidden;   //使生成的内容不可见，并允许可能被生成内容盖住的内容可以进行点击和交互</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs css">        clear:both;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs css">&#125;</code></pre></td></tr></table></figure><blockquote><p>注：由于IE6-7不支持:after，需要使用 zoom:1触发 hasLayout</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Float </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>better-scroll使用</title>
      <link href="/2020/02/20/better-scroll%E4%BD%BF%E7%94%A8/"/>
      <url>/2020/02/20/better-scroll%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="better-scroll-是什么"><a href="#better-scroll-是什么" class="headerlink" title="better-scroll 是什么"></a>better-scroll 是什么</h1><p><code>better-scroll</code> 是一款重点解决移动端（已支持 PC）各种滚动场景需求的插件。它的核心是借鉴的 <code>iscroll</code> 的实现，它的 API 设计基本兼容 <code>iscroll</code>，在 iscroll 的基础上又扩展了一些 feature 以及做了一些性能优化。</p><p><code>better-scroll</code> 是基于原生 JS 实现的，不依赖任何框架。它编译后的代码大小是 63kb，压缩后是 35kb，gzip 后仅有 9kb，是一款非常轻量的 JS lib。</p><p><a href="http://ustbhuangyi.github.io/better-scroll/#/examples/zh" target="_blank" rel="noopener"><code>better-scroll 官网：http://ustbhuangyi.github.io/better-scroll/#/examples/zh</code></a></p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="NPM"><a href="#NPM" class="headerlink" title="NPM"></a>NPM</h2><blockquote><p>yarn add better-scroll</p><p>import BScroll from ‘better-scroll’</p></blockquote><h2 id="script"><a href="#script" class="headerlink" title="script"></a>script</h2><blockquote><script src="https://unpkg.com/better-scroll/dist/bscroll.min.js"></script></blockquote><h1 id="使用-better-scroll-实现移动端整屏滚动"><a href="#使用-better-scroll-实现移动端整屏滚动" class="headerlink" title="使用 better-scroll 实现移动端整屏滚动"></a>使用 better-scroll 实现移动端整屏滚动</h1><p>HTML</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"wrapper"</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs html">    <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"content"</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs html">        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>第一屏<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs html">        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>第二屏<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs html">        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>第三屏<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs html">        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>第四屏<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs html">        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>第五屏<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs html">    <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></td></tr></table></figure><p>css</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">body</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs css">         <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs css">     &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs css">     <span class="hljs-selector-class">.wrapper</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs css">         <span class="hljs-attribute">height</span>: <span class="hljs-number">100vh</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs css">         <span class="hljs-attribute">overflow</span>: hidden;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs css">     &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs css">     <span class="hljs-selector-class">.content</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs css">         <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs css">         <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs css">     &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs css">     <span class="hljs-selector-class">.content</span> <span class="hljs-selector-tag">li</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs css">         <span class="hljs-attribute">display</span>: flex;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs css">         <span class="hljs-attribute">justify-content</span>: center;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs css">         <span class="hljs-attribute">align-items</span>: center;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs css">         <span class="hljs-attribute">height</span>: <span class="hljs-number">100vh</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs css">         <span class="hljs-attribute">list-style</span>: none;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs css">         <span class="hljs-attribute">font-size</span>: <span class="hljs-number">50px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><code class="hljs css">         <span class="hljs-attribute">font-weight</span>: bold;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><code class="hljs css">         <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><code class="hljs css">     &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><code class="hljs css">     <span class="hljs-selector-class">.content</span> <span class="hljs-selector-tag">li</span><span class="hljs-selector-pseudo">:nth-child(1)</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><code class="hljs css">         <span class="hljs-attribute">background</span>: <span class="hljs-number">#f00</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><code class="hljs css">     &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><code class="hljs css">     <span class="hljs-selector-class">.content</span> <span class="hljs-selector-tag">li</span><span class="hljs-selector-pseudo">:nth-child(2)</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><code class="hljs css">         <span class="hljs-attribute">background</span>: <span class="hljs-number">#0f0</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><code class="hljs css">     &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><code class="hljs css">     <span class="hljs-selector-class">.content</span> <span class="hljs-selector-tag">li</span><span class="hljs-selector-pseudo">:nth-child(3)</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><code class="hljs css">         <span class="hljs-attribute">background</span>: <span class="hljs-number">#00f</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><code class="hljs css">     &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><code class="hljs css">     <span class="hljs-selector-class">.content</span> <span class="hljs-selector-tag">li</span><span class="hljs-selector-pseudo">:nth-child(4)</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><code class="hljs css">         <span class="hljs-attribute">background</span>: <span class="hljs-number">#ff89de</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><code class="hljs css">     &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><code class="hljs css">     <span class="hljs-selector-class">.content</span> <span class="hljs-selector-tag">li</span><span class="hljs-selector-pseudo">:nth-child(5)</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><code class="hljs css">         <span class="hljs-attribute">background</span>: <span class="hljs-number">#ff7a27</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><code class="hljs css">     &#125;</code></pre></td></tr></table></figure><p>JavaScript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> bscroll = <span class="hljs-keyword">new</span> BScroll(<span class="hljs-string">".wrapper"</span>, &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">click</span>: <span class="hljs-literal">true</span>,  <span class="hljs-comment">// 元素可触发点击事件</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">scrollY</span>: <span class="hljs-literal">true</span>,  <span class="hljs-comment">// 纵向可滑动，默认为true</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">snap</span>: &#123;  <span class="hljs-comment">// 滑块切换的一些配置</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">     <span class="hljs-attr">threshold</span>: <span class="hljs-number">0.5</span>,  <span class="hljs-comment">// 滑动切换到超过一半时切换到下一屏</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">     <span class="hljs-attr">stepY</span>: <span class="hljs-built_in">window</span>.innerHeight  <span class="hljs-comment">// 纵向切换距离为窗口高度</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">   &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;);</code></pre></td></tr></table></figure><h1 id="下拉刷新-和-上拉加载"><a href="#下拉刷新-和-上拉加载" class="headerlink" title="下拉刷新 和 上拉加载"></a>下拉刷新 和 上拉加载</h1><blockquote><p>一定要让content高度大于wrapper高度，否则无滚动效果</p></blockquote><p>css </p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">ul</span>, <span class="hljs-selector-tag">li</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">list-style</span>: none;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs css">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs css"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">body</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs css">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs css"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.wrapper</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">display</span>: flex;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">flex-direction</span>: column;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">align-items</span>: center;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">height</span>: <span class="hljs-built_in">calc</span>(100vh - 40px);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">text-align</span>: center;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">line-height</span>: <span class="hljs-number">40px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">overflow</span>: hidden;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><code class="hljs css">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><code class="hljs css"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.header</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">height</span>: <span class="hljs-number">40px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">color</span>: white;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">background</span>: <span class="hljs-number">#333</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><code class="hljs css">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><code class="hljs css"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.content</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">flex</span>: <span class="hljs-number">1</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">box-sizing</span>: border-box;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><code class="hljs css">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><code class="hljs css"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.content</span> <span class="hljs-selector-tag">li</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">height</span>: <span class="hljs-number">80px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">12px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">background</span>: aquamarine;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><code class="hljs css">&#125;</code></pre></td></tr></table></figure><p>html<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"wrapper"</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs html">    <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"content"</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs html">        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>分类列表<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs html">        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>分类列表<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs html">        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>分类列表<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs html">        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>分类列表<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs html">        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>分类列表<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs html">        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>分类列表<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs html">        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>分类列表<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs html">        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>分类列表<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs html">        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>分类列表<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs html">        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>分类列表<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs html">        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>分类列表<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs html">        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>分类列表<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs html">        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>分类列表<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs html">        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>分类列表<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs html">        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>分类列表<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs html">        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>分类列表<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><code class="hljs html">        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>分类列表<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><code class="hljs html">        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>分类列表<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><code class="hljs html">        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>分类列表<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><code class="hljs html">    <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></td></tr></table></figure></p><p>javascript<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> scroll = <span class="hljs-keyword">new</span> BScroll(<span class="hljs-string">".wrapper"</span>, &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">probeType</span>: <span class="hljs-number">3</span>,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">scrollY</span>: <span class="hljs-literal">true</span>,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">click</span>: <span class="hljs-literal">true</span>,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">pullDownRefresh</span>: &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-attr">threshold</span>: <span class="hljs-number">50</span>,         <span class="hljs-comment">//顶部下拉的距离 来决定刷新时机以及回弹停留的距离 当下拉刷新数据加载完毕后，需要执行 finishPullDown 方法</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-attr">probeType</span>: <span class="hljs-number">3</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">pullUpLoad</span>: &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-attr">threshold</span>: <span class="hljs-number">50</span>        <span class="hljs-comment">// 底部上拉的距离 决定开始加载的时机。当上拉加载数据加载完毕后，需要执行 finishPullUp 方法</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//上拉加载事件</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs javascript">scroll.on(<span class="hljs-string">"pullingUp"</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;    </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"上拉加载数据"</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-comment">//可以多次执行上拉加载，没有这段代码上拉只会加载一次</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs javascript">  scroll.finishPullUp();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//下拉刷新事件</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><code class="hljs javascript">scroll.on(<span class="hljs-string">"pullingDown"</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;  </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"下拉刷新数据"</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-comment">//可以多次执行下拉刷新，没有这段代码下只会刷新一次</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><code class="hljs javascript">  scroll.finishPullDown();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//初始化</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><code class="hljs javascript">scroll.refresh();</code></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> better-scroll </tag>
            
            <tag> 上拉加载 </tag>
            
            <tag> 下拉刷新 </tag>
            
            <tag> 移动端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL常用命令语句</title>
      <link href="/2020/01/16/MySQL%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E8%AF%AD%E5%8F%A5/"/>
      <url>/2020/01/16/MySQL%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E8%AF%AD%E5%8F%A5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="一、MySQL常用SQL修改语句"><a href="#一、MySQL常用SQL修改语句" class="headerlink" title="一、MySQL常用SQL修改语句"></a>一、MySQL常用SQL修改语句</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs mysql"># 创建数据库</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs mysql">create database database_name;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs mysql"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs mysql"># 创建数据表</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs mysql">create table blog_archive(</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs mysql"> aid int unsigned not null default 0,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs mysql"> cid SMALLINT UNSIGNED NOT NULL DEFAULT 0,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs mysql"> title varchar(50) not null default &#39;&#39;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs mysql"> contents text not null default &#39;&#39;,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs mysql"> click mediumint unsigned not null default 0,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs mysql"> primary key(aid),</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs mysql"> key cid(cid)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs mysql">)engine&#x3D;MyISAM default charset&#x3D;utf8;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs mysql"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs mysql"># 增加一个字段</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs mysql">alter table blog_archive add column sort smallint not null default 0 after contents;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs mysql">alter table blog_archive add column is_del tinyint(1) not null default 1;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs mysql"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><code class="hljs mysql"># 删除一个字段</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><code class="hljs mysql">alter table blog_archive drop column is_del;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><code class="hljs mysql">alter table blog_archive drop is_del;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><code class="hljs mysql"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><code class="hljs mysql"># 修改字段名和字段类型</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><code class="hljs mysql">alter table blog_archive change click click_num smallint not null default 0;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><code class="hljs mysql">alter table blog_archive change  click_num mediumint not null default 0;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><code class="hljs mysql"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><code class="hljs mysql"># 修改表名</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><code class="hljs mysql">alter table blog_archive rename to blog_article;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><code class="hljs mysql"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><code class="hljs mysql"># 修改表引擎</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><code class="hljs mysql">alter table blog_archive engine&#x3D;InnoDB;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><code class="hljs mysql"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><code class="hljs mysql"># 清空表</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><code class="hljs mysql">truncate table blog_archive;</code></pre></td></tr></table></figure><h1 id="MySQL索引相关语句"><a href="#MySQL索引相关语句" class="headerlink" title="MySQL索引相关语句"></a>MySQL索引相关语句</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs mysql"># 添加主键索引</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs mysql">alter table &#96;blog_archive&#96; add primary key (&#39;id&#39;);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs mysql"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs mysql"># 添加唯一索引</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs mysql">alter table &#96;blog_archive&#96; add UNIQUE (&#39;name&#39;);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs mysql"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs mysql"># 添加普通索引</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs mysql">alter table &#39;blog_archive&#39; add index index_name (&#39;index&#39;);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs mysql"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs mysql"># 添加全文索引</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs mysql">alter table &#39;blog_archive&#39; add FULLTEXT (&#39;label&#39;);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs mysql"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs mysql"># 添加多索引</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs mysql">alter table &#39;blog_archive&#39; add index index_name (&#39;id&#39;,&#39;name&#39;,&#39;label&#39;);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs mysql"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs mysql"># 查看索引</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs mysql">show index from blog_archive;</code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML5:meta标签</title>
      <link href="/2020/01/16/HTML5-meta%E6%A0%87%E7%AD%BE/"/>
      <url>/2020/01/16/HTML5-meta%E6%A0%87%E7%AD%BE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- 声明文档使用的字符编码 --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">'utf-8'</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- 优先使用 IE 最新版本和 Chrome --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">"X-UA-Compatible"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"IE=edge,chrome=1"</span>/&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- 页面描述 --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"description"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"不超过150个字符"</span>/&gt;</span>  </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- 页面关键词 --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"keywords"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">""</span>/&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- 网页作者 --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"author"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"name, email@gmail.com"</span>/&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- 搜索引擎抓取 --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"robots"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"index,follow"</span>/&gt;</span>  </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- 为移动设备添加 viewport --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- `width=device-width` 会导致 iPhone 5 添加到主屏后以 WebApp 全屏模式打开页面时出现黑边 http://bigc.at/ios-webapp-viewport-meta.orz --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"viewport"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"initial-scale=1, maximum-scale=3, minimum-scale=1, user-scalable=no"</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- iOS 设备 begin --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"apple-mobile-web-app-title"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"标题"</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- 添加到主屏后的标题（iOS 6 新增） --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"apple-mobile-web-app-capable"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"yes"</span>/&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- 是否启用 WebApp 全屏模式，删除苹果默认的工具栏和菜单栏 --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"apple-itunes-app"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"app-id=myAppStoreID, affiliate-data=myAffiliateData, app-argument=myURL"</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- 添加智能 App 广告条 Smart App Banner（iOS 6+ Safari） --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"apple-mobile-web-app-status-bar-style"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"black"</span>/&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- 设置苹果工具栏颜色 --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"format-detection"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"telphone=no, email=no"</span>/&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- 忽略页面中的数字识别为电话，忽略email识别 --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- 启用360浏览器的极速模式(webkit) --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"renderer"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"webkit"</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- 避免IE使用兼容模式 --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">"X-UA-Compatible"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"IE=edge"</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- 不让百度转码 --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">"Cache-Control"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"no-siteapp"</span> /&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- 针对手持设备优化，主要是针对一些老的不识别viewport的浏览器，比如黑莓 --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"HandheldFriendly"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"true"</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- 微软的老式浏览器 --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"MobileOptimized"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"320"</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- uc强制竖屏 --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"screen-orientation"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"portrait"</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- QQ强制竖屏 --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"x5-orientation"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"portrait"</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- UC强制全屏 --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"full-screen"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"yes"</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- QQ强制全屏 --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"x5-fullscreen"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"true"</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- UC应用模式 --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"browsermode"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"application"</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- QQ应用模式 --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"x5-page-mode"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"app"</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- windows phone 点击无高光 --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"msapplication-tap-highlight"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"no"</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- iOS 图标 begin --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"apple-touch-icon-precomposed"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"/apple-touch-icon-57x57-precomposed.png"</span>/&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- iPhone 和 iTouch，默认 57x57 像素，必须有 --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"apple-touch-icon-precomposed"</span> <span class="hljs-attr">sizes</span>=<span class="hljs-string">"114x114"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"/apple-touch-icon-114x114-precomposed.png"</span>/&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- Retina iPhone 和 Retina iTouch，114x114 像素，可以没有，但推荐有 --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"apple-touch-icon-precomposed"</span> <span class="hljs-attr">sizes</span>=<span class="hljs-string">"144x144"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"/apple-touch-icon-144x144-precomposed.png"</span>/&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- Retina iPad，144x144 像素，可以没有，但推荐有 --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- iOS 图标 end --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><code class="hljs html"> </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- iOS 启动画面 begin --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"apple-touch-startup-image"</span> <span class="hljs-attr">sizes</span>=<span class="hljs-string">"768x1004"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"/splash-screen-768x1004.png"</span>/&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">62</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- iPad 竖屏 768 x 1004（标准分辨率） --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">63</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"apple-touch-startup-image"</span> <span class="hljs-attr">sizes</span>=<span class="hljs-string">"1536x2008"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"/splash-screen-1536x2008.png"</span>/&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">64</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- iPad 竖屏 1536x2008（Retina） --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">65</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"apple-touch-startup-image"</span> <span class="hljs-attr">sizes</span>=<span class="hljs-string">"1024x748"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"/Default-Portrait-1024x748.png"</span>/&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">66</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- iPad 横屏 1024x748（标准分辨率） --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">67</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"apple-touch-startup-image"</span> <span class="hljs-attr">sizes</span>=<span class="hljs-string">"2048x1496"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"/splash-screen-2048x1496.png"</span>/&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">68</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- iPad 横屏 2048x1496（Retina） --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">69</span></pre></td><td class="code"><pre><code class="hljs html"> </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">70</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"apple-touch-startup-image"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"/splash-screen-320x480.png"</span>/&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">71</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- iPhone/iPod Touch 竖屏 320x480 (标准分辨率) --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">72</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"apple-touch-startup-image"</span> <span class="hljs-attr">sizes</span>=<span class="hljs-string">"640x960"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"/splash-screen-640x960.png"</span>/&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">73</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- iPhone/iPod Touch 竖屏 640x960 (Retina) --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">74</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"apple-touch-startup-image"</span> <span class="hljs-attr">sizes</span>=<span class="hljs-string">"640x1136"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"/splash-screen-640x1136.png"</span>/&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">75</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- iPhone 5/iPod Touch 5 竖屏 640x1136 (Retina) --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">76</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- iOS 启动画面 end --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">77</span></pre></td><td class="code"><pre><code class="hljs html"> </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">78</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- iOS 设备 end --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">79</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"msapplication-TileColor"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"#000"</span>/&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">80</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- Windows 8 磁贴颜色 --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">81</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"msapplication-TileImage"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"icon.png"</span>/&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">82</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- Windows 8 磁贴图标 --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">83</span></pre></td><td class="code"><pre><code class="hljs html"> </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">84</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"alternate"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"application/rss+xml"</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"RSS"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"/rss.xml"</span>/&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">85</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- 添加 RSS 订阅 --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">86</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"shortcut icon"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"image/ico"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"/favicon.ico"</span>/&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">87</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- 添加 favicon icon --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">88</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- sns 社交标签 begin --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">89</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- 参考微博API --&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">90</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">property</span>=<span class="hljs-string">"og:type"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"类型"</span> /&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">91</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">property</span>=<span class="hljs-string">"og:url"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"URL地址"</span> /&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">92</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">property</span>=<span class="hljs-string">"og:title"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"标题"</span> /&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">93</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">property</span>=<span class="hljs-string">"og:image"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"图片"</span> /&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">94</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">property</span>=<span class="hljs-string">"og:description"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"描述"</span> /&gt;</span></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML5 </tag>
            
            <tag> meta </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端适配IOS、Android刘海屏</title>
      <link href="/2020/01/16/%E5%89%8D%E7%AB%AF%E9%80%82%E9%85%8DIOS%E3%80%81Android%E5%88%98%E6%B5%B7%E5%B1%8F/"/>
      <url>/2020/01/16/%E5%89%8D%E7%AB%AF%E9%80%82%E9%85%8DIOS%E3%80%81Android%E5%88%98%E6%B5%B7%E5%B1%8F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="设置网页在可视窗口的布局方式"><a href="#设置网页在可视窗口的布局方式" class="headerlink" title="设置网页在可视窗口的布局方式"></a>设置网页在可视窗口的布局方式</h1><p>设置 <code>viweport-fit</code> 属性，使得页面内容完全覆盖整个窗口，设置后可以使用<code>env</code>函数</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">“viewport”</span> <span class="hljs-attr">content</span>=<span class="hljs-string">“width</span>=<span class="hljs-string">device-width,</span> <span class="hljs-attr">viewport-fit</span>=<span class="hljs-string">cover”</span>&gt;</span></code></pre></td></tr></table></figure><h1 id="安全区"><a href="#安全区" class="headerlink" title="安全区"></a>安全区</h1><p>将页面内容限制在安全区域内。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">body</span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">display</span>: block;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">padding</span>: <span class="hljs-number">20px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">padding</span>: </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs css">        <span class="hljs-built_in">env</span>(safe-area-inset-top)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs css">        <span class="hljs-built_in">env</span>(safe-area-inset-right)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs css">        <span class="hljs-built_in">env</span>(safe-area-inset-bottom)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs css">        <span class="hljs-built_in">env</span>(safe-area-inset-left);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs css">&#125;</code></pre></td></tr></table></figure><h1 id="Fixed"><a href="#Fixed" class="headerlink" title="Fixed"></a>Fixed</h1><p>当有时我们将<code>header</code>和<code>footer</code>设置为<code>position: fixed</code>,高度基于视口，所以还是会出现遮挡问题。</p><p>1.通过加内边距 padding 扩展高度</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs css">&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">padding-bottom</span>: <span class="hljs-built_in">env</span>(safe-area-inset-bottom);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs css">&#125;</code></pre></td></tr></table></figure><p>2.通过计算函数 calc 覆盖原来高度</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs css">&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">height</span>: <span class="hljs-built_in">calc</span>(60px + env(safe-area-inset-bottom));</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs css">&#125;</code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 移动端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
            <tag> 适配 </tag>
            
            <tag> 刘海屏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript拷贝数组</title>
      <link href="/2020/01/09/Javascipt%E6%8B%B7%E8%B4%9D%E6%95%B0%E7%BB%84/"/>
      <url>/2020/01/09/Javascipt%E6%8B%B7%E8%B4%9D%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="1-使用Array-slice方法"><a href="#1-使用Array-slice方法" class="headerlink" title="1.使用Array.slice方法"></a>1.使用<code>Array.slice</code>方法</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> numbers = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>]</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> copy = numbers.slice()</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">copy.push(<span class="hljs-number">6</span>); <span class="hljs-comment">// 添加新项以证明不会修改原始数组</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(copy);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(numbers);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 输出</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// [1, 2, 3, 4, 5, 6]</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// [1, 2, 3, 4, 5]</span></code></pre></td></tr></table></figure><h1 id="2-使用Array-map方法"><a href="#2-使用Array-map方法" class="headerlink" title="2. 使用Array.map方法"></a>2. 使用<code>Array.map</code>方法</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> numbers = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>]</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> copy = numbers.map( <span class="hljs-function"><span class="hljs-params">num</span> =&gt;</span> num )</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">copy.push(<span class="hljs-number">6</span>); <span class="hljs-comment">// 添加新项以证明不会修改原始数组</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(copy);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(numbers);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 输出</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// [1, 2, 3, 4, 5, 6]</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// [1, 2, 3, 4, 5]</span></code></pre></td></tr></table></figure><h1 id="3-使用Array-from方法"><a href="#3-使用Array-from方法" class="headerlink" title="3.使用Array.from方法"></a>3.使用<code>Array.from</code>方法</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> numbers = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>];</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> copy = <span class="hljs-built_in">Array</span>.from(<span class="hljs-keyword">new</span> <span class="hljs-built_in">Set</span>(numbers));</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">copy.push(<span class="hljs-number">6</span>); <span class="hljs-comment">// 添加新项以证明不会修改原始数组</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(copy);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(numbers);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 输出</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// [1, 2, 3, 4, 5, 6]</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// [1, 2, 3, 4, 5]</span></code></pre></td></tr></table></figure><h1 id="4-使用展开操作符"><a href="#4-使用展开操作符" class="headerlink" title="4.使用展开操作符"></a>4.使用展开操作符</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> numbers = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>];</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> copy = [...numbers];</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">copy.push(<span class="hljs-number">6</span>); <span class="hljs-comment">// 添加新项以证明不会修改原始数组</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(copy);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(numbers);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 输出 </span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// [1, 2, 3, 4, 5, 6]</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// [1, 2, 3, 4, 5]</span></code></pre></td></tr></table></figure><h1 id="5-使用解构"><a href="#5-使用解构" class="headerlink" title="5.使用解构"></a>5.使用解构</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> numbers = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>];</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> [...copy] = numbers;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">copy.push(<span class="hljs-number">6</span>); <span class="hljs-comment">// 添加新项以证明不会修改原始数组</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(copy);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(numbers);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 输出</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// [1, 2, 3, 4, 5, 6]</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// [1, 2, 3, 4, 5]</span></code></pre></td></tr></table></figure><h1 id="6-使用-Array-concat-方法"><a href="#6-使用-Array-concat-方法" class="headerlink" title="6. 使用 Array.concat 方法"></a>6. 使用 <code>Array.concat</code> 方法</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> numbers = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>];</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> copy = numbers.concat();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">copy.push(<span class="hljs-number">6</span>); <span class="hljs-comment">// 添加新项以证明不会修改原始数组</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(copy);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(numbers);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 输出</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// [1, 2, 3, 4, 5, 6]</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// [1, 2, 3, 4, 5]</span></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Array </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Javascipt数组去重</title>
      <link href="/2020/01/09/Javascipt%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D/"/>
      <url>/2020/01/09/Javascipt%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="一、利用ES6-Set去重"><a href="#一、利用ES6-Set去重" class="headerlink" title="一、利用ES6 Set去重"></a>一、利用ES6 Set去重</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">unique</span>(<span class="hljs-params">arr</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">   <span class="hljs-keyword">return</span> <span class="hljs-built_in">Array</span>.from(<span class="hljs-keyword">new</span> <span class="hljs-built_in">Set</span>(arr));</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"> &#125;</code></pre></td></tr></table></figure><h1 id="二、利用for嵌套for，然后splice去重"><a href="#二、利用for嵌套for，然后splice去重" class="headerlink" title="二、利用for嵌套for，然后splice去重"></a>二、利用for嵌套for，然后splice去重</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">unique</span>(<span class="hljs-params">arr</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; arr.length; i++) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> j = i + <span class="hljs-number">1</span>; j &lt; arr.length; j++) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-keyword">if</span> (arr[i] === arr[j]) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">        arr.splice(j, <span class="hljs-number">1</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">        j--;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">      &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">return</span> arr;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr></table></figure><h1 id="三、利用indexOf去重"><a href="#三、利用indexOf去重" class="headerlink" title="三、利用indexOf去重"></a>三、利用indexOf去重</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">unique</span>(<span class="hljs-params">arr</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">var</span> array = [];</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; arr.length; i++) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">if</span> (array.indexOf(arr[i]) === <span class="hljs-number">-1</span>) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">      array.push(arr[i]);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">return</span> array;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr></table></figure><h1 id="四、利用sort"><a href="#四、利用sort" class="headerlink" title="四、利用sort()"></a>四、利用sort()</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">unique</span>(<span class="hljs-params">arr</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  arr = arr.sort();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">var</span> array = [arr[<span class="hljs-number">0</span>]];</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">1</span>; i &lt; arr.length; i++) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">if</span> (arr[i] !== arr[i - <span class="hljs-number">1</span>]) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">      array.push(arr[i]);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">return</span> array;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr></table></figure><h1 id="五、利用includes"><a href="#五、利用includes" class="headerlink" title="五、利用includes"></a>五、利用includes</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">unique</span>(<span class="hljs-params">arr</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">var</span> array = [];</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; arr.length; i++) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">if</span> (!array.includes(arr[i])) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">      array.push(arr[i]);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">return</span> array;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr></table></figure><h1 id="六、利用filter"><a href="#六、利用filter" class="headerlink" title="六、利用filter"></a>六、利用filter</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">unique</span>(<span class="hljs-params">arr</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">return</span> arr.filter(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">item, index, arr</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">return</span> arr.indexOf(item, <span class="hljs-number">0</span>) === index;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr></table></figure><h1 id="七、利用递归去重"><a href="#七、利用递归去重" class="headerlink" title="七、利用递归去重"></a>七、利用递归去重</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">unique</span>(<span class="hljs-params">arr</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">var</span> array = arr;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">var</span> len = array.length;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">  array.sort(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">a, b</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">return</span> a - b;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">loop</span>(<span class="hljs-params">index</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">if</span> (index &gt;= <span class="hljs-number">1</span>) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-keyword">if</span> (array[index] === array[index - <span class="hljs-number">1</span>]) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript">        array.splice(index, <span class="hljs-number">1</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs javascript">      &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs javascript">      loop(index - <span class="hljs-number">1</span>); <span class="hljs-comment">//递归loop，然后数组去重</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs javascript">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs javascript">  loop(len - <span class="hljs-number">1</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">return</span> array;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr></table></figure><h1 id="八、利用Map数据结构去重"><a href="#八、利用Map数据结构去重" class="headerlink" title="八、利用Map数据结构去重"></a>八、利用Map数据结构去重</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">unique</span>(<span class="hljs-params">arr</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">let</span> map = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">let</span> array = []; <span class="hljs-comment">//数组用于返回结果</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; arr.length; i++) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">if</span>(map.has(arr[i])) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">      map.set(arr[i],<span class="hljs-literal">true</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">    &#125;<span class="hljs-keyword">else</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">      map.set(arr[i],<span class="hljs-literal">false</span>); <span class="hljs-comment">//如果没有该key值；</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript">      array.push(arr[i]);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">return</span> array;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Array </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flex布局实现充值价格界面</title>
      <link href="/2020/01/09/Flex%E5%B8%83%E5%B1%80%E5%AE%9E%E7%8E%B0%E5%85%85%E5%80%BC%E4%BB%B7%E6%A0%BC%E7%95%8C%E9%9D%A2/"/>
      <url>/2020/01/09/Flex%E5%B8%83%E5%B1%80%E5%AE%9E%E7%8E%B0%E5%85%85%E5%80%BC%E4%BB%B7%E6%A0%BC%E7%95%8C%E9%9D%A2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在一次项目中，当时写一个类似QQ的充值界面。看到UI图时，就想到了用<code>Flex Box</code>进行布局，然后就尴尬了。</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-selector-class">.container</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs scss">     <span class="hljs-attribute">display</span>: flex;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs scss">     <span class="hljs-attribute">justify-content</span>: space-between;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs scss">     <span class="hljs-attribute">flex-wrap</span>: wrap;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs scss">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs scss"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-selector-class">.list</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs scss">       <span class="hljs-attribute">width</span>: <span class="hljs-number">24%</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs scss">       <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs scss">       <span class="hljs-attribute">background-color</span>: skyblue;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs scss">       <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">15px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs scss">&#125;</code></pre></td></tr></table></figure><p>由于<code>justify-content: space-between;</code>属性，当数量为<code>7</code>个时,第一行是符合要求的，但第二行剩下3个，它们之间<br>的距离就很大。</p><p>后面在网上寻找了一下，大概两种方案。 </p><p>如果每一行列数是固定的，则下面两种方法可以实现最后一行左对齐。</p><h1 id="模拟space-between和间隙"><a href="#模拟space-between和间隙" class="headerlink" title="模拟space-between和间隙"></a>模拟space-between和间隙</h1><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs scss"> <span class="hljs-selector-class">.container</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs scss">       <span class="hljs-attribute">display</span>: flex;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs scss">       <span class="hljs-attribute">flex-wrap</span>: wrap;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs scss">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs scss"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-selector-class">.list</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs scss">       <span class="hljs-attribute">width</span>: <span class="hljs-number">24%</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs scss">       <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs scss">       <span class="hljs-attribute">background-color</span>: red;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs scss">       <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">15px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs scss">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs scss"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-selector-class">.list</span>:not(:nth-child(4n)) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs scss">       <span class="hljs-attribute">margin-right</span>: calc(<span class="hljs-number">4%</span> / <span class="hljs-number">3</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs scss">&#125;</code></pre></td></tr></table></figure><h1 id="根据个数最后一个元素动态margin"><a href="#根据个数最后一个元素动态margin" class="headerlink" title="根据个数最后一个元素动态margin"></a>根据个数最后一个元素动态margin</h1><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-selector-class">.container</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs scss">    <span class="hljs-attribute">display</span>: flex; <span class="hljs-comment">/* 两端对齐 */</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs scss">    <span class="hljs-attribute">justify-content</span>: space-between;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs scss">    <span class="hljs-attribute">flex-wrap</span>: wrap;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs scss">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs scss"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-selector-class">.list</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs scss">    <span class="hljs-attribute">width</span>: <span class="hljs-number">24%</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs scss">    <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs scss">    <span class="hljs-attribute">background-color</span>: skyblue;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs scss">    <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">15px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs scss">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs scss"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-comment">/* 如果最后一行是3个元素 */</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-selector-class">.list</span>:last-child:nth-child(4n - 1) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs scss">    <span class="hljs-attribute">margin-right</span>: calc(<span class="hljs-number">24%</span> + <span class="hljs-number">4%</span> / <span class="hljs-number">3</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs scss">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs scss"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-comment">/* 如果最后一行是2个元素 */</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-selector-class">.list</span>:last-child:nth-child(4n - 2) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><code class="hljs scss">    <span class="hljs-attribute">margin-right</span>: calc(<span class="hljs-number">48%</span> + <span class="hljs-number">8%</span> / <span class="hljs-number">3</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><code class="hljs scss">&#125;</code></pre></td></tr></table></figure><h1 id="如果列数不固定HTML又不能调整"><a href="#如果列数不固定HTML又不能调整" class="headerlink" title="如果列数不固定HTML又不能调整"></a>如果列数不固定HTML又不能调整</h1><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-selector-class">.container</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs scss">    <span class="hljs-attribute">display</span>: grid;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs scss">    <span class="hljs-attribute">justify-content</span>: space-between;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs scss">    grid-template-<span class="hljs-attribute">columns</span>: repeat(auto-fill, <span class="hljs-number">100px</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs scss">    grid-gap: <span class="hljs-number">10px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs scss">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs scss"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-selector-class">.list</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs scss">    <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs scss">    <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs scss">    <span class="hljs-attribute">background-color</span>: skyblue;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs scss">    <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">5px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs scss">&#125;</code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flex Box </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS文字处理</title>
      <link href="/2020/01/09/CSS%E6%96%87%E5%AD%97%E5%A4%84%E7%90%86/"/>
      <url>/2020/01/09/CSS%E6%96%87%E5%AD%97%E5%A4%84%E7%90%86/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>平时在工作中经常遇到文字相关的各种问题，例如：文字溢出、对齐、截断等各种问题。<br>so，就记录一下经常遇到的一些解决方案。</p><h1 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h1><p>下面介绍一些使用场景</p><h2 id="两端对齐-最后一行居中对齐"><a href="#两端对齐-最后一行居中对齐" class="headerlink" title="两端对齐,最后一行居中对齐"></a>两端对齐,最后一行居中对齐</h2><p>不过此属性浏览器的支持不行。ios和安卓不支持</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"justify-text"</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs html">     <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"text"</span>&gt;</span>账号<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs html">     <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"text"</span>&gt;</span>密码<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs html">     <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"text"</span>&gt;</span>电子邮件<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></td></tr></table></figure><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-selector-class">.justify-text</span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs scss">     <span class="hljs-attribute">margin</span>: auto;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs scss">     <span class="hljs-selector-class">.text</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs scss">           <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span> <span class="hljs-number">20px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs scss">           <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">10px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs scss">           <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs scss">           <span class="hljs-attribute">background-color</span>: red;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs scss">           <span class="hljs-attribute">line-height</span>: <span class="hljs-number">40px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs scss">           <span class="hljs-attribute">text-align-last</span>: justify;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs scss">           <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs scss">           <span class="hljs-attribute">list-style</span>: none;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs scss">           &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs scss">&#125;</code></pre></td></tr></table></figure><h2 id="文本溢出控制"><a href="#文本溢出控制" class="headerlink" title="文本溢出控制"></a>文本溢出控制</h2><h3 id="单行文本溢出"><a href="#单行文本溢出" class="headerlink" title="单行文本溢出"></a>单行文本溢出</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-selector-class">.ellipsis</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs scss">    <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;      <span class="hljs-comment">// 需要改一个宽度</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-attribute">overflow</span>: hidden; <span class="hljs-comment">// 溢出隐藏</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-attribute">text-overflow</span>: ellipsis; <span class="hljs-comment">// 溢出修饰 ellipsis省略号</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-attribute">white-space</span>: nowrap; <span class="hljs-comment">// 文本不会换行</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs scss">&#125;</code></pre></td></tr></table></figure><h3 id="多行文本溢出"><a href="#多行文本溢出" class="headerlink" title="多行文本溢出"></a>多行文本溢出</h3><p>多用于移动端页面，因为移动设备浏览器更多是基于 webkit 内核,比如Firefox, IE 浏览器不支持该属性。</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-selector-class">.ellipsis</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs scss">    <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-attribute">display</span>: -webkit-box;   <span class="hljs-comment">// 将对象作为弹性伸缩盒子模型显示</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs scss">-webkit-line-clamp: <span class="hljs-number">2</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs scss">    -webkit-box-orient: vertical;  <span class="hljs-comment">// 设置或检索伸缩盒对象的子元素的排列方式</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-attribute">overflow</span>: hidden;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-attribute">text-overflow</span>: ellipsis;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs scss">&#125;</code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文字处理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ES6语法之解构赋值</title>
      <link href="/2020/01/05/ES6%E8%AF%AD%E6%B3%95%E4%B9%8B%E8%A7%A3%E6%9E%84%E8%B5%8B%E5%80%BC/"/>
      <url>/2020/01/05/ES6%E8%AF%AD%E6%B3%95%E4%B9%8B%E8%A7%A3%E6%9E%84%E8%B5%8B%E5%80%BC/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="什么是解构赋值"><a href="#什么是解构赋值" class="headerlink" title="什么是解构赋值"></a>什么是解构赋值</h1><p><code>ES6</code>允许按照一定的模式，从数组或对象中提取值，给变量进行赋值，称为解构赋值。</p><h1 id="解构赋值的分类"><a href="#解构赋值的分类" class="headerlink" title="解构赋值的分类"></a>解构赋值的分类</h1><ol><li>数组解构赋值  </li><li>对象解构赋值</li><li>字符串解构赋值</li><li>布尔解构赋值</li><li>函数解构赋值</li><li>数值解构赋值</li></ol><h1 id="数组解构赋值"><a href="#数组解构赋值" class="headerlink" title="数组解构赋值"></a>数组解构赋值</h1><p>按照索引位置匹配</p><h2 id="常用示例"><a href="#常用示例" class="headerlink" title="常用示例"></a>常用示例</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> a,b;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">[a,b] = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>];</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(a,b);         <span class="hljs-comment">// 1 ,2</span></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> a,b,rest;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">[a,b,...rest] = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>];</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(a,b,rest);     <span class="hljs-comment">//  1 ,2 ,[1 ,2 ,3 ,4 ,5 ,6]</span></code></pre></td></tr></table></figure><h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><h3 id="默认值"><a href="#默认值" class="headerlink" title="默认值"></a>默认值</h3><p>如果解构赋值没有在结构上成功配对，就是只声明了变量，没有赋值为<code>undefined</code>,所以用默认赋值来解决这种情况。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> a,b,c;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">[a,b,c] = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>];</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(a,b,c);         <span class="hljs-comment">// 1 ,2 , undefined      </span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">[a,b,c = <span class="hljs-number">3</span>] = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>];</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(a,b,c);         <span class="hljs-comment">// 1 ,2 ,3</span></code></pre></td></tr></table></figure><h3 id="变量交换"><a href="#变量交换" class="headerlink" title="变量交换"></a>变量交换</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> a = <span class="hljs-number">1</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> b = <span class="hljs-number">2</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">[a,b] = [b,a];</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(a,b);</code></pre></td></tr></table></figure><h3 id="函数返回值"><a href="#函数返回值" class="headerlink" title="函数返回值"></a>函数返回值</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">f</span>(<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">return</span> [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>];</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> a,b;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">[a,b] =f();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(a,b);    <span class="hljs-comment">// 1,2</span></code></pre></td></tr></table></figure><h3 id="选择性结构赋值"><a href="#选择性结构赋值" class="headerlink" title="选择性结构赋值"></a>选择性结构赋值</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">f</span>(<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">return</span> [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>];</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> a,b,c;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">[a,,,b] =f();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(a,b);   <span class="hljs-comment">// 1,4</span></code></pre></td></tr></table></figure><h3 id><a href="#" class="headerlink" title=" "></a> </h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">f</span>(<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">return</span> [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>];</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> a,b,c;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">[a,...b] =f();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(a,b);   <span class="hljs-comment">// 1,[2,3,4,5,6]</span></code></pre></td></tr></table></figure><h1 id="对象解构赋值"><a href="#对象解构赋值" class="headerlink" title="对象解构赋值"></a>对象解构赋值</h1><p>按照 <code>key</code> <code>value</code> 匹配分方式</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> a,b;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">(&#123;a,b&#125; = &#123;<span class="hljs-attr">a</span>:<span class="hljs-number">1</span>,<span class="hljs-attr">b</span>:<span class="hljs-number">2</span>&#125;)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(a,b)       <span class="hljs-comment">// 1 ,2</span></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> o = &#123;<span class="hljs-attr">p</span>:<span class="hljs-number">42</span>,<span class="hljs-attr">q</span>:<span class="hljs-literal">true</span>&#125;;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> &#123;p,q&#125; = o;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(p,q);     <span class="hljs-comment">// 42,true</span></code></pre></td></tr></table></figure><h2 id="使用场景-1"><a href="#使用场景-1" class="headerlink" title="使用场景"></a>使用场景</h2><h3 id="默认值-1"><a href="#默认值-1" class="headerlink" title="默认值"></a>默认值</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> &#123;a=<span class="hljs-number">10</span>,b=<span class="hljs-number">5</span>&#125; = &#123;<span class="hljs-attr">a</span>:<span class="hljs-number">3</span>&#125;;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(a,b);      <span class="hljs-comment">// 3,5</span></code></pre></td></tr></table></figure><h3 id="嵌套对象"><a href="#嵌套对象" class="headerlink" title="嵌套对象"></a>嵌套对象</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> metaData = &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">title</span>:<span class="hljs-string">'abc'</span>,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">test</span>:[&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-attr">title</span>:<span class="hljs-string">'title'</span>,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-attr">desc</span>:<span class="hljs-string">'description'</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;]</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> &#123;<span class="hljs-attr">title</span>:esTitle,<span class="hljs-attr">test</span>:[&#123;<span class="hljs-attr">title</span>:cnTitle&#125;]&#125; = metaData;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(esTitle,cnTitle);</code></pre></td></tr></table></figure><h1 id="函数解构赋值"><a href="#函数解构赋值" class="headerlink" title="函数解构赋值"></a>函数解构赋值</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">f</span>(<span class="hljs-params">&#123;x = <span class="hljs-number">0</span>, y = <span class="hljs-number">0</span>&#125; = &#123;&#125;</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">return</span> [x, y];</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(f(&#123;<span class="hljs-attr">x</span>: <span class="hljs-number">3</span>, <span class="hljs-attr">y</span>: <span class="hljs-number">8</span>&#125;)); <span class="hljs-comment">// [3, 8]</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 说明：传递了实参，所以函数默认值&#123;&#125;不生效，对实参&#123;x: 3, y: 8&#125;解构赋值，对应的属性都有值，所以解构赋值的默认值不生效，所以x = 3，y = 8；</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(f(&#123;<span class="hljs-attr">x</span>: <span class="hljs-number">3</span>&#125;));<span class="hljs-comment">// [3, 0]</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//说明：传递了实参，所以函数默认值&#123;&#125;不生效，对实参&#123;x: 3&#125;解构赋值，对应的属性x有值，y没有值，所以解构赋值的默认值y生效,x不生效，所以x = 3，y = 0；</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(f(&#123;&#125;));<span class="hljs-comment">// [0, 0]</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//说明：传递了实参&#123;&#125;，所以函数默认值&#123;&#125;不生效，对实参&#123;&#125;解构赋值，对应的属性都没有值，所以解构赋值的默认值生效，所以x = 0，y = 0；</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(f());<span class="hljs-comment">// [0, 0]</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//说明：没有传递实参，所以函数默认值&#123;&#125;生效，对实参&#123;&#125;解构赋值，对应的属性都没有值，所以解构赋值的默认值生效，所以x = 0，y = 0；</span></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">f</span>(<span class="hljs-params">&#123;x, y&#125; = &#123; x: <span class="hljs-number">0</span>, y: <span class="hljs-number">0</span> &#125;</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">return</span> [x, y];</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(f(&#123;<span class="hljs-attr">x</span>: <span class="hljs-number">3</span>, <span class="hljs-attr">y</span>: <span class="hljs-number">8</span>&#125;)); <span class="hljs-comment">// [3, 8]</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//说明：传递了实参，所以函数默认值&#123;x: 0, y: 0&#125;不生效，对实参&#123;x: 3, y: 8&#125;解构赋值，对应的属性都有值，所以解构赋值的默认值不生效，所以x = 3，y = 8；</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(f(&#123;<span class="hljs-attr">x</span>: <span class="hljs-number">3</span>&#125;)); <span class="hljs-comment">// [3, undefined]</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//说明：传递了实参，所以函数默认值&#123;x: 0, y: 0&#125;不生效，对实参&#123;x: 3&#125;解构赋值，对应的属性x有值，y没有值，所以x=3,因为本例没有解构赋值的默认值，所以y就是undefined；</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript"> <span class="hljs-built_in">console</span>.log(f(&#123;&#125;)); <span class="hljs-comment">// [undefined, undefined]</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs javascript"> <span class="hljs-comment">//说明：传递了实参&#123;&#125;，所以函数默认值&#123;x: 0, y: 0&#125;不生效，对实参&#123;&#125;解构赋值，对应的属性没有值，所以x,y就是undefined；</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs javascript"> </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs javascript"> <span class="hljs-built_in">console</span>.log(f()); <span class="hljs-comment">// [0, 0]</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs javascript"> <span class="hljs-comment">//说明：没有传递实参，所以函数默认值&#123;x: 0, y: 0&#125;生效，对实参&#123;x: 0, y: 0&#125;解构赋值，对应的属性有值，所以x,y就是0；</span></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ES6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript中通过[]和.获取对象属性的区别</title>
      <link href="/2019/12/16/JavaScript%E4%B8%AD%E9%80%9A%E8%BF%87-%E5%92%8C-%E8%8E%B7%E5%8F%96%E5%AF%B9%E8%B1%A1%E5%B1%9E%E6%80%A7%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
      <url>/2019/12/16/JavaScript%E4%B8%AD%E9%80%9A%E8%BF%87-%E5%92%8C-%E8%8E%B7%E5%8F%96%E5%AF%B9%E8%B1%A1%E5%B1%9E%E6%80%A7%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>在<code>JavaScript</code>中获取对象属性，我们一般用点或中括号的方法。</p><h1 id="通过-的方式"><a href="#通过-的方式" class="headerlink" title="通过.的方式"></a>通过<code>.</code>的方式</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> obj = &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">name</span>:<span class="hljs-string">'张山'</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(obj.name);  <span class="hljs-comment">// 张山</span></code></pre></td></tr></table></figure><p><code>.</code>运算符：使用前提是右侧必须是一个属性名称命名的<code>标识符</code>。</p><p>如果我们恰好遇见对象中的属性刚好不符合标识符的规范，就不能用<code>.</code>来访问。就会保语法错误。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> obj = &#123;<span class="hljs-string">"1"</span>:<span class="hljs-string">"张山"</span>&#125;;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(obj<span class="hljs-number">.1</span>);</code></pre></td></tr></table></figure><p>所以这里我们只能用[]来获取对象属性。</p><h1 id="通过-获取对象属性"><a href="#通过-获取对象属性" class="headerlink" title="通过[]获取对象属性"></a>通过<code>[]</code>获取对象属性</h1><p><code>[]</code>右边必须是一个计算结果为字符串的表达式,这就让<code>[]</code>的使用很灵活了。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> obj = &#123;<span class="hljs-string">"1"</span>:<span class="hljs-string">"张山"</span>&#125;;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(obj[<span class="hljs-string">"1"</span>]);</code></pre></td></tr></table></figure><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> a = &#123;&#125;;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> b = &#123;<span class="hljs-attr">key</span>:<span class="hljs-string">'b'</span>&#125;;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> c = &#123;<span class="hljs-attr">key</span>:<span class="hljs-string">'c'</span>&#125;;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">a[b]=<span class="hljs-number">123</span>;       <span class="hljs-comment">// [Object Object] = 123</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">a[c]=<span class="hljs-number">456</span>;        <span class="hljs-comment">// [Object Object] = 456</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(a[b]);    <span class="hljs-comment">// 456</span></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Object </tag>
            
            <tag> 属性 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript对象</title>
      <link href="/2019/12/13/JavaScript%E5%AF%B9%E8%B1%A1/"/>
      <url>/2019/12/13/JavaScript%E5%AF%B9%E8%B1%A1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h1><p><code>JavaScript</code> 中的所有都是对象。对象是一种特殊的数据，拥有属性和方法（即对象成员）。</p><h1 id="创建对象的方式"><a href="#创建对象的方式" class="headerlink" title="创建对象的方式"></a>创建对象的方式</h1><h2 id="对象字面量"><a href="#对象字面量" class="headerlink" title="对象字面量"></a>对象字面量</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> person = &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">name</span>:<span class="hljs-string">'张三'</span>,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">age</span>:<span class="hljs-number">23</span>,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">say</span>:<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'hello,my name is '</span>+<span class="hljs-keyword">this</span>.name)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">person.say();</code></pre></td></tr></table></figure><h2 id="new-Object-构造函数"><a href="#new-Object-构造函数" class="headerlink" title="new Object() 构造函数"></a><code>new Object()</code> 构造函数</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> person = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Object</span>();  <span class="hljs-comment">//创建一个空对象</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//设置属性</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">person.name = <span class="hljs-string">'张三'</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//设置方法</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">person.say = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">   <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'hello,my name is '</span>+<span class="hljs-keyword">this</span>.name)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">person.say();</code></pre></td></tr></table></figure><h2 id="自定义构造函数-对象构造器-工厂方法"><a href="#自定义构造函数-对象构造器-工厂方法" class="headerlink" title="自定义构造函数 - 对象构造器 - 工厂方法"></a>自定义构造函数 - 对象构造器 - 工厂方法</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Person</span>(<span class="hljs-params">name,age</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">this</span>.name = name;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">this</span>.age = age;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">this</span>.say = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'hello,my name is '</span>+<span class="hljs-keyword">this</span>.name)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> person1 = <span class="hljs-keyword">new</span> Person(<span class="hljs-string">'张三'</span>,<span class="hljs-number">22</span>)</code></pre></td></tr></table></figure><h2 id="关键字-new"><a href="#关键字-new" class="headerlink" title="关键字 new"></a>关键字 <code>new</code></h2><p><code>new</code> 的执行过程:</p><ol><li>在内存中创建一个空对象</li><li>让构造函数中的<code>this</code>执行创建的对象</li><li>执行构造函数，在构造函数中设置属性和方法</li><li>返回当前对象</li></ol><h1 id="对象遍历的方法"><a href="#对象遍历的方法" class="headerlink" title="对象遍历的方法"></a>对象遍历的方法</h1><h2 id="for…in-循环"><a href="#for…in-循环" class="headerlink" title="for…in 循环"></a>for…in 循环</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> person=&#123;<span class="hljs-attr">firstName</span>:<span class="hljs-string">"John"</span>,<span class="hljs-attr">lastName</span>:<span class="hljs-string">"Doe"</span>,<span class="hljs-attr">age</span>:<span class="hljs-number">25</span>&#125;; </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">for</span> (value <span class="hljs-keyword">in</span> person) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-built_in">console</span>.log(value);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr></table></figure><h2 id="Object-keys"><a href="#Object-keys" class="headerlink" title="Object.keys()"></a>Object.keys()</h2><p>返回对象所有可枚举属性的字符串数组。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> person=&#123;<span class="hljs-attr">firstName</span>:<span class="hljs-string">"John"</span>,<span class="hljs-attr">lastName</span>:<span class="hljs-string">"Doe"</span>,<span class="hljs-attr">age</span>:<span class="hljs-number">25</span>&#125;; </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> arr = <span class="hljs-built_in">Object</span>.keys(person)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(arr);</code></pre></td></tr></table></figure><h2 id="Object-values"><a href="#Object-values" class="headerlink" title="Object.values()"></a>Object.values()</h2><p>返回对象自身的所有可枚举属性值的数组。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> person=&#123;<span class="hljs-attr">firstName</span>:<span class="hljs-string">"John"</span>,<span class="hljs-attr">lastName</span>:<span class="hljs-string">"Doe"</span>,<span class="hljs-attr">age</span>:<span class="hljs-number">25</span>&#125;; </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">Object</span>.values(person));</code></pre></td></tr></table></figure><h2 id="Object-getOwnPropertyNames"><a href="#Object-getOwnPropertyNames" class="headerlink" title="Object.getOwnPropertyNames"></a>Object.getOwnPropertyNames</h2><p>返回对象的所有自身属性的属性名（包括不可枚举属性但不包括Symbol值作为名称的属性）组成的数组。 </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> arr = [<span class="hljs-string">"a"</span>, <span class="hljs-string">"b"</span>, <span class="hljs-string">"c"</span>];</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">Object</span>.getOwnPropertyNames(arr).sort());</code></pre></td></tr></table></figure><h2 id="删除对象的成员"><a href="#删除对象的成员" class="headerlink" title="删除对象的成员"></a>删除对象的成员</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> person=&#123;<span class="hljs-attr">firstName</span>:<span class="hljs-string">"John"</span>,<span class="hljs-attr">lastName</span>:<span class="hljs-string">"Doe"</span>,<span class="hljs-attr">age</span>:<span class="hljs-number">25</span>&#125;; </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(person);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">delete</span> person.age;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(person);</code></pre></td></tr></table></figure><h1 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> father = &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">name</span>:<span class="hljs-string">"张三"</span>,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">age</span>:<span class="hljs-number">50</span>,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">houses</span>:[<span class="hljs-string">'别墅'</span>,<span class="hljs-string">'公寓'</span>],</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">play</span>:<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'运动'</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> son = &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript">   <span class="hljs-attr">name</span>:<span class="hljs-string">"张四"</span>,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Object </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript函数</title>
      <link href="/2019/12/13/%E5%87%BD%E6%95%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E6%A6%82%E5%BF%B5/"/>
      <url>/2019/12/13/%E5%87%BD%E6%95%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E6%A6%82%E5%BF%B5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h1><p><code>JavaScript</code> 函数是执行特定目的的代码块。<br>如果一个函数没有<code>return</code>语句,则它默认返回<code>undefined</code>。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">f</span>(<span class="hljs-params">形参<span class="hljs-number">1</span>,形参<span class="hljs-number">2</span></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-comment">//执行的代码</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">f(<span class="hljs-string">'实参1'</span>,<span class="hljs-string">'实参2'</span>);</code></pre></td></tr></table></figure><h2 id="函数声明-命名函数"><a href="#函数声明-命名函数" class="headerlink" title="函数声明 - 命名函数"></a>函数声明 - 命名函数</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fn</span>(<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr></table></figure><h2 id="函数表达式"><a href="#函数表达式" class="headerlink" title="函数表达式"></a>函数表达式</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> x = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">a,b</span>)</span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">return</span> a * b;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr></table></figure><h2 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h2><p>函数同样可以通过内置的<code>JavaScript</code>函数构造器<code>Function</code>来定义。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> foo = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Function</span>(<span class="hljs-string">'a'</span>,<span class="hljs-string">'b'</span>,<span class="hljs-string">'return a * b'</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> c = foo(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>);</code></pre></td></tr></table></figure><h2 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> fn = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr></table></figure><h2 id="自调用函数-当函数书写完成之后立即调用"><a href="#自调用函数-当函数书写完成之后立即调用" class="headerlink" title="自调用函数 - 当函数书写完成之后立即调用"></a>自调用函数 - 当函数书写完成之后立即调用</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript">(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;)()</code></pre></td></tr></table></figure><p>函数表达式可以 “自调用”。<br>自调用表达式会自动调用。<br>如果表达式后面紧跟 () ，则会自动调用。<br>不能自调用声明的函数。  </p><h1 id="Function-属性"><a href="#Function-属性" class="headerlink" title="Function 属性"></a>Function 属性</h1><h2 id="arguments"><a href="#arguments" class="headerlink" title="arguments"></a>arguments</h2><p>以数组形式获取传入函数的所有参数。<code>arguments</code>对象不是一个<code>Array</code>。它是一个类数组对象，可以转换为一个真正的<code>Array</code>。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">foo</span>(<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">var</span> args = <span class="hljs-built_in">Array</span>.prototype.slice.call(<span class="hljs-built_in">arguments</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-comment">// [1,2,3]</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">foo(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>);</code></pre></td></tr></table></figure><h1 id="函数闭包"><a href="#函数闭包" class="headerlink" title="函数闭包"></a>函数闭包</h1><h2 id="简单的闭包示例"><a href="#简单的闭包示例" class="headerlink" title="简单的闭包示例"></a>简单的闭包示例</h2><p>当内部函数引用了外部函数的数据，并且执行函数，此时就产生了闭包。<br>常见创建闭包的方式，就是在一个函数内部创建另一个函数，通过另一个函数访问这个函数的局部变量。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fn</span>(<span class="hljs-params">a,b</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">return</span> a+b;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(fn(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>)());</code></pre></td></tr></table></figure><p><code>fn</code> 函数返回的一个匿名函数，它未接受参数，直接从执行环境中获取。</p><h2 id="闭包的缺点与缺点"><a href="#闭包的缺点与缺点" class="headerlink" title="闭包的缺点与缺点"></a>闭包的缺点与缺点</h2><p>闭包的优点就是缺点,因为闭包把局部变量常驻在内存中，可以避免使用全局变量。全局变量污染导致多个使用公共变量的模块不可预测，所以使用私有的封装的局部变量<br>进行隔离。<br>同时由于闭包内的局部变量不会立即销毁，所以可能占用更多的内存，过度使用闭包会导致性能下降。</p>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Function </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript经典排序算法</title>
      <link href="/2019/12/13/JavaScript%E7%BB%8F%E5%85%B8%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/"/>
      <url>/2019/12/13/JavaScript%E7%BB%8F%E5%85%B8%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h1><h2 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> numbers = [<span class="hljs-number">44</span>, <span class="hljs-number">26</span>, <span class="hljs-number">69</span>, <span class="hljs-number">28</span>, <span class="hljs-number">78</span>, <span class="hljs-number">456</span>, <span class="hljs-number">85</span>, <span class="hljs-number">84</span>, <span class="hljs-number">9</span>, <span class="hljs-number">6</span>, <span class="hljs-number">66</span>];</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bubbleSort</span>(<span class="hljs-params">items</span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">var</span> len = items.length, i, j, stop;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">var</span> isSort = <span class="hljs-literal">true</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-comment">// 外层循环：控制循环次数，每次找到一个最大值</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; items.length; i++) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-comment">//内层循环：控制比较的次数，判断两个数的大小，把大的数往后移。小的数往前移动</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">for</span> (j = <span class="hljs-number">0</span>, stop = len - i; j &lt; stop; j++) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-comment">// 两两比较</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-keyword">if</span> (items[j] &gt; items[j + <span class="hljs-number">1</span>]) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript">        <span class="hljs-comment">// 交换位置</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs javascript">        isSort = <span class="hljs-literal">false</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs javascript">        <span class="hljs-keyword">var</span> tmp = items[j];</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs javascript">        items[j] = numbers[j + <span class="hljs-number">1</span>];</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs javascript">        numbers[j + <span class="hljs-number">1</span>] = tmp;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs javascript">      &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs javascript">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">if</span> (isSort) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-keyword">break</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><code class="hljs javascript">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">return</span> items;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(bubbleSort(numbers));</code></pre></td></tr></table></figure><h2 id="ES6解构赋值"><a href="#ES6解构赋值" class="headerlink" title="ES6解构赋值"></a>ES6解构赋值</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> numbers = [<span class="hljs-number">44</span>, <span class="hljs-number">26</span>, <span class="hljs-number">69</span>, <span class="hljs-number">28</span>, <span class="hljs-number">78</span>, <span class="hljs-number">456</span>, <span class="hljs-number">85</span>, <span class="hljs-number">84</span>, <span class="hljs-number">9</span>, <span class="hljs-number">6</span>, <span class="hljs-number">66</span>];</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> bubbleSort = <span class="hljs-function">(<span class="hljs-params">items</span>) =&gt;</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">let</span> len = items.length, i, j, stop;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">let</span> isSort = <span class="hljs-literal">true</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; items.length; i++) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">for</span> (j = <span class="hljs-number">0</span>, stop = len - i; j &lt; stop; j++) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-keyword">if</span> (items[j] &gt; items[j + <span class="hljs-number">1</span>]) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">        isSort = <span class="hljs-literal">false</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript">        [items[j], items[j + <span class="hljs-number">1</span>]] = [items[j + <span class="hljs-number">1</span>], items[j]];</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript">      &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">if</span> (isSort) &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs javascript">      <span class="hljs-keyword">break</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs javascript">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">return</span> items;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(bubbleSort(numbers));</code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 排序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript中call、apply、bind的使用</title>
      <link href="/2019/12/09/JavaScript%E4%B8%ADcall%E3%80%81apply%E3%80%81bind%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2019/12/09/JavaScript%E4%B8%ADcall%E3%80%81apply%E3%80%81bind%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h1><p>call、apply、bind都是用来重定义this这个对象的。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> name = <span class="hljs-string">'小明'</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> age = <span class="hljs-string">'20'</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> obj = &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">name</span>:<span class="hljs-string">'小红'</span>,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">objAge</span>:<span class="hljs-keyword">this</span>.age,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">foo</span>:<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">this</span>.name + <span class="hljs-string">'年龄'</span> + <span class="hljs-keyword">this</span>.age);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> data = &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">name</span>:<span class="hljs-string">'小强'</span>,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">age</span>:<span class="hljs-number">22</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs javascript">obj.foo.call(data);   <span class="hljs-comment">// 小强年龄22</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs javascript">obj.foo.apply(data);  <span class="hljs-comment">// 小强年龄22</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> f = obj.foo.bind(data);  <span class="hljs-comment">// ƒ () &#123;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><code class="hljs javascript">                             <span class="hljs-comment">//       console.log(this.name + '年龄' + this.age);</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><code class="hljs javascript">                             <span class="hljs-comment">//     &#125;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><code class="hljs javascript">f();                  <span class="hljs-comment">// 小强年龄22</span></code></pre></td></tr></table></figure><p>它们之间主要的差异：<br>call()的参数是一个参数列表由逗号分隔的，返回值是该函数的返回值。如果没有返回值，则返回undefined。 obj.foo.call(data,1,2….);<br>apply()的所有参数都是放在一个数组内的，与call()方法类似，区别是call()接受的是参数列表，而applu()接受的是一个参数数组。 obj.foo.apply(data,[1,2,…]);<br>bind()的返回是函数，参数和call()一样</p><h1 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> obj1 = &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">name</span>:<span class="hljs-string">'obj1'</span>,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">print</span>:<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> <span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">this</span>.name)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> obj2 = &#123;<span class="hljs-attr">name</span>:<span class="hljs-string">'obj2'</span>&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">obj1.print()();              <span class="hljs-comment">// obj1</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript">obj1.print().call(obj2);     <span class="hljs-comment">// obj1</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript">obj1.print.call(obj2)();     <span class="hljs-comment">// obj2</span></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 对象 </tag>
            
            <tag> this </tag>
            
            <tag> call </tag>
            
            <tag> apply </tag>
            
            <tag> bind </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript-变量提升与函数提升</title>
      <link href="/2019/12/09/JavaScript-%E5%8F%98%E9%87%8F%E6%8F%90%E5%8D%87%E4%B8%8E%E5%87%BD%E6%95%B0%E6%8F%90%E5%8D%87/"/>
      <url>/2019/12/09/JavaScript-%E5%8F%98%E9%87%8F%E6%8F%90%E5%8D%87%E4%B8%8E%E5%87%BD%E6%95%B0%E6%8F%90%E5%8D%87/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>什么是变量提升？<br>变量提升是对<code>JavaScript(hoisting)</code>执行上下文的一种认识。不管变量是在作用域的那个地方声明的，都会提升到<code>当前作用域</code>的最顶部。<br>JavaScript 中，变量可以在使用后声明，也就是变量可以先使用再声明。 </p><h2 id="预解析"><a href="#预解析" class="headerlink" title="预解析"></a>预解析</h2><p>预解析 -&gt;  变量提升、函数提升(声明变量和函数) -&gt; 执行代码 、执行赋值<br>变量提升和函数提升不过是预解析的执行过程。 </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 解析之前</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(a);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">a</span>(<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'aaaa'</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> a = <span class="hljs-number">1</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(a);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//解析之后</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> a;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">a</span>(<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'aaaa'</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(a);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs javascript">a = <span class="hljs-number">1</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(a);</code></pre></td></tr></table></figure><p>在解析过程中如果函数和变量的名字相同时，此时函数优先。所以上面的代码块会先输出<code>函数a</code>,在输出<code>1</code>。</p><h2 id="变量提升"><a href="#变量提升" class="headerlink" title="变量提升"></a>变量提升</h2><p>预解析时，把变量的声明提升到当前作用域的最顶部，不包括变量的赋值。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 解析之前</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(num);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> num = <span class="hljs-number">1</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 预解析</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> num;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(num);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">num = <span class="hljs-number">1</span>;</code></pre></td></tr></table></figure><p>如上面代码所示，解析之前会报 <code>undefined</code>,而不是 <code>num is not defined</code>,就是因为 <code>js引擎</code>预解析将变量<br><code>num</code>已经声明，只是没有赋值。  </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> x = <span class="hljs-number">1</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">f</span>(<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-built_in">console</span>.log(x,y)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> y;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">y = <span class="hljs-number">2</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript">f();</code></pre></td></tr></table></figure><p>JavaScript 编译时会先将 <code>var y;</code> 声明提升至顶部。 执行时变量已经声明了y，所以输出 1 2。</p><h2 id="函数提升"><a href="#函数提升" class="headerlink" title="函数提升"></a>函数提升</h2><p>预解析时，把函数的声明提升到当前作用域的最顶部，不包括函数的调用。<br>函数提升的前提是函数声明，而不是函数表达式。  </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript">f();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">f</span>(<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'函数声明'</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">test();</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> test = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'函数表达式'</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr></table></figure><p>上面的例子会输出：<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs livecodeserver">函数声明</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs livecodeserver">Uncaught TypeError: test is <span class="hljs-keyword">not</span> <span class="hljs-keyword">a</span> <span class="hljs-function"><span class="hljs-keyword">function</span></span></code></pre></td></tr></table></figure></p><p>它们之间存在的差异原因是:<br>用函数声明创建的函数可以在函数解析后调用（解析时进行等逻辑处理）。<br>而用函数表达式创建的函数是在运行时进行赋值，且要等到表达式赋值完成后才能调用。  </p><h1 id="ES6-中没有变量提升"><a href="#ES6-中没有变量提升" class="headerlink" title="ES6 中没有变量提升"></a>ES6 中没有变量提升</h1><h2 id="例1"><a href="#例1" class="headerlink" title="例1"></a>例1</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sayHi</span>(<span class="hljs-params"></span>) </span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-built_in">console</span>.log(name);  <span class="hljs-comment">// undefined</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-built_in">console</span>.log(age);   <span class="hljs-comment">// error</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">var</span> name = <span class="hljs-string">'asd'</span>; </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">let</span> age = <span class="hljs-number">22</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">sayHi();</code></pre></td></tr></table></figure><p>会输出<code>Cannot access &#39;age&#39; before initialization</code>,无法在初始化前访问<code>age</code>。</p><h2 id="例2"><a href="#例2" class="headerlink" title="例2"></a>例2</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i =<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">3</span>;i++)&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  setTimeout(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span><span class="hljs-built_in">console</span>.log(i),<span class="hljs-number">1</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125; </code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>;i&lt;<span class="hljs-number">3</span>;i++)&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">  setTimeout(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span><span class="hljs-built_in">console</span>.log(i),<span class="hljs-number">1</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr></table></figure><p>上面代码输出: <code>333 和 0 1 2</code>的原因是：  </p><ol><li><code>Js</code> 是单线程的，<code>setTimeout</code>是异步宏任务，所以代码执行遇到异步的，就放在事件队列中，等线程中的任务执行完后<br>才会执行事件队列中的任务。  </li><li><code>let</code>是<code>ES6</code>中声明变量的方式，由自己的作用域块，可以放变量，所以<code>let</code>绑定<code>for</code>循环时，每个<code>i</code><br>都有自己的值，在这个<code>for</code>循环中就是满足一次条件向事件队列中添加一个打印事件，且每个事件都有自己的值。</li><li><code>var</code>没有自己的作用域块，<code>for</code>循环的变量就会后面一个覆盖前一个，当循环完毕时<code>i</code>就取的是最后一次的值.</li></ol>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 变量 </tag>
            
            <tag> 变量提升 </tag>
            
            <tag> 函数提升 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript中的执行上下文</title>
      <link href="/2019/12/09/JavaScript%E4%B8%AD%E7%9A%84%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%87/"/>
      <url>/2019/12/09/JavaScript%E4%B8%AD%E7%9A%84%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%87/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><p>当函数执行时，会创建一个执行上下文的内部空间(可以理解为作用域)。 Javascript 代码都是在执行上下文中运行。  </p><h2 id="执行上下文的类型"><a href="#执行上下文的类型" class="headerlink" title="执行上下文的类型"></a>执行上下文的类型</h2><ul><li><strong>全局执行上下文</strong> - 默认的上下文，任何不在函数内部的代码都在全局上下文中。它会创建一个全局的<code>window</code>对象，设置<code>this</code>的值等于这个全局对象。一个程序中自只会<br>有一个全局执行上下文。</li><li><strong>函数执行上下文</strong> - 当函数被调用时，就会为该函数创建一个新的上下文。</li><li><strong>Eval函数执行上下文</strong> - 执行在 eval 函数内部的代码也会有它属于自己的执行上下文。</li></ul><h2 id="上下文的执行流程"><a href="#上下文的执行流程" class="headerlink" title="上下文的执行流程"></a>上下文的执行流程</h2><ol><li>This绑定</li><li>创建作用域链</li><li>创建变量对象（函数的形参，函数声明，变量声明）</li><li>代码执行</li></ol>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 作用域 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript中的this</title>
      <link href="/2019/12/09/this/"/>
      <url>/2019/12/09/this/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>在面向对象的语言中，this 都是指向当前对象的。而在 JavaScript 中 this 会随着执行环境的改变而改变。</p><ul><li>在对象方法中，this 表示该方法所属的对象。</li><li>如果单独使用，this 表示全局对象。</li><li>在函数中，this 表示全局对象。</li><li>在函数中，在严格模式下，this 是未定义的(undefined)。</li><li>类似 call() 、 apply() 、bind() 方法可以将 this 引用到任何对象。</li><li>箭头函数中没有this</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> person = &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">name</span>:<span class="hljs-string">'张三'</span>,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">age</span>:<span class="hljs-number">22</span>,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">sayHi</span>:<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">this</span>)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`你好，我是<span class="hljs-subst">$&#123;<span class="hljs-keyword">this</span>.name&#125;</span>,今年<span class="hljs-subst">$&#123;<span class="hljs-keyword">this</span>.age&#125;</span>岁`</span>)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">  &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr></table></figure><p><strong>对象方法中的this，指向的是调用方法的对象</strong><br>此时 console this,打印的是 person 对象<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript">person.sayHi();</code></pre></td></tr></table></figure></p><p>如果我们把对象方法赋值给一个变量来调用呢</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> sayHi = person.sayHi;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">sayHi();</code></pre></td></tr></table></figure><p>此时会输入 Window  你好，我是,今年undefined岁.<br>因为当我们 <code>person.sayHi</code> 赋值给 <code>sayHi</code>, 调用 <code>sayHi()</code> 是在全局下，此时 this 指向全局对象，所以找不到name和age</p><p><strong>单独使用</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">this</span>)  <span class="hljs-comment">// Window</span></code></pre></td></tr></table></figure><p><strong>函数中使用</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">f1</span>(<span class="hljs-params"></span>)</span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-string">"use strict"</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">this</span>)   <span class="hljs-comment">// undefined</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">f1();</code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">f1</span>(<span class="hljs-params"></span>)</span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">this</span>)   <span class="hljs-comment">// Window</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">f1();</code></pre></td></tr></table></figure><p><strong>call</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> man = &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">name</span>:<span class="hljs-string">'李四'</span>,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-attr">age</span>:<span class="hljs-number">45</span>,</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">person.sayHi.call(man);  <span class="hljs-comment">// 你好，我是李四,今年45岁</span></code></pre></td></tr></table></figure><p>输出 this 变成了 man 对象。</p><p><strong>箭头函数中的this</strong></p><p>箭头函数没有自己的this，箭头函数的this就是上下文中定义的this.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> name = <span class="hljs-string">'JavaScript'</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> book =  <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">        <span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">this</span>);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">        <span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">this</span>.name)</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">    &#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">book()</code></pre></td></tr></table></figure><p>输出 JavaScript。<br>对于 book 函数，它本身没有this值，而是使用外层的this。最外层的是 Window 对象。</p>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Javascript数据类型</title>
      <link href="/2019/12/09/JavaScript%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
      <url>/2019/12/09/JavaScript%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>JavaScript 是一种弱类型或者说动态语言。在程序运行过程中，类型会被自动确定，意味着可以用一个变量保存不同类型的数据。但是这样不利于我们代码的编写，导致整个项目的复杂，不利于后期的维护。</p><h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><ul><li>原始类型<ul><li>Boolean</li><li>Null</li><li>Undefined</li><li>Number</li><li>BigInt</li><li>String</li><li>Symbol</li><li>BigInt</li></ul></li><li>Object</li></ul><h2 id="布尔类型"><a href="#布尔类型" class="headerlink" title="布尔类型"></a><code>布尔类型</code></h2><p>布尔可以有两个值：true和false。</p><h2 id="Null类型"><a href="#Null类型" class="headerlink" title="Null类型"></a><code>Null类型</code></h2><p>Null用来表示尚未存在的对象，常用来表示函数企图返回一个不存在的对象。Null表示“没有对象”，即该处不应该有值。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">typeof</span> <span class="hljs-literal">null</span>    <span class="hljs-string">//</span> <span class="hljs-string">"object"</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-literal">null</span> <span class="hljs-string">===</span> <span class="hljs-string">undefined</span> <span class="hljs-string">//</span> <span class="hljs-literal">false</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-literal">null</span>  <span class="hljs-string">==</span> <span class="hljs-string">undefined</span> <span class="hljs-string">//</span> <span class="hljs-literal">true</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-literal">null</span> <span class="hljs-string">===</span> <span class="hljs-literal">null</span> <span class="hljs-string">//</span> <span class="hljs-literal">true</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-literal">null</span> <span class="hljs-string">==</span> <span class="hljs-literal">null</span> <span class="hljs-string">//</span> <span class="hljs-literal">true</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-type">!null</span> <span class="hljs-string">//true</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">isNaN(1</span> <span class="hljs-string">+</span> <span class="hljs-literal">null</span><span class="hljs-string">)</span> <span class="hljs-string">//</span> <span class="hljs-literal">false</span></code></pre></td></tr></table></figure><h2 id="Undefined"><a href="#Undefined" class="headerlink" title="Undefined"></a><code>Undefined</code></h2><p>一个没有被赋值的变量会有个默认值 undefined.</p><ol><li>变量被声明了，但没有赋值时，就等于undefined。</li><li>调用函数时，应该提供的参数没有提供，该参数就等于undefined。</li><li>对象没有赋值的属性，该属性的值为undefined。</li><li>函数没有返回值时，默认返回undefined。</li></ol><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs actionscript"><span class="hljs-keyword">typeof</span> <span class="hljs-literal">undefined</span>    <span class="hljs-comment">// "undefined"</span></code></pre></td></tr></table></figure><h2 id="Object"><a href="#Object" class="headerlink" title="Object"></a><code>Object</code></h2><p>JavaScript 中的所有事物都是对象：字符串、数值、数组、函数…<br>对象只是一种特殊的数据，对象拥有属性和方法。</p><h3 id="通过构造函数创建对象"><a href="#通过构造函数创建对象" class="headerlink" title="通过构造函数创建对象"></a>通过构造函数创建对象</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript">obj = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Object</span>(value);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 如果 value 的值是 null 或 undefined，将会创建并返回一个空对象，否则将返回一个与 value 对应类型的对象。</span></code></pre></td></tr></table></figure><h3 id="使用函数来构造对象"><a href="#使用函数来构造对象" class="headerlink" title="使用函数来构造对象"></a>使用函数来构造对象</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">person</span>(<span class="hljs-params">firstname,lastname,age,eyecolor</span>)</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs javascript">&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">this</span>.firstname=firstname;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">this</span>.lastname=lastname;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">this</span>.age=age;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs javascript">    <span class="hljs-keyword">this</span>.eyecolor=eyecolor;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs javascript">&#125;</code></pre></td></tr></table></figure><h1 id="原始数据类型与引用数据类型"><a href="#原始数据类型与引用数据类型" class="headerlink" title="原始数据类型与引用数据类型"></a>原始数据类型与引用数据类型</h1><p>在 JavaScript 中除了原始类型，其他的都是引用类型。原始类型存储的是值，引用类型存储的是地址。当创建了一个对象的时候，计算机会在内存中开辟一个空间用来存放值，这个空间会永远一个地址。<br>原始类型是不可变的，只有对象是可变的。</p>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据类型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS伪类与伪元素</title>
      <link href="/2019/12/09/CSS%E4%BC%AA%E7%B1%BB%E4%B8%8E%E4%BC%AA%E5%85%83%E7%B4%A0/"/>
      <url>/2019/12/09/CSS%E4%BC%AA%E7%B1%BB%E4%B8%8E%E4%BC%AA%E5%85%83%E7%B4%A0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="伪元素"><a href="#伪元素" class="headerlink" title="伪元素"></a>伪元素</h1><div class="table-container"><table><thead><tr><th>伪类</th><th style="text-align:center">作用</th></tr></thead><tbody><tr><td>::first-letter</td><td style="text-align:center">将样式添加到文本的首字母</td></tr><tr><td>::first-line</td><td style="text-align:center">将样式添加到文本的首行</td></tr><tr><td>::before</td><td style="text-align:center">在某元素之前插入某些内容</td></tr><tr><td>::after</td><td style="text-align:center">在某元素之后插入某些内容</td></tr></tbody></table></div><h1 id="伪类"><a href="#伪类" class="headerlink" title="伪类"></a>伪类</h1><h2 id="CSS-伪类"><a href="#CSS-伪类" class="headerlink" title="CSS 伪类"></a>CSS 伪类</h2><div class="table-container"><table><thead><tr><th>伪类</th><th style="text-align:center">作用</th></tr></thead><tbody><tr><td>:hover</td><td style="text-align:center">将样式添加到鼠标悬浮的元素</td></tr><tr><td>:active</td><td style="text-align:center">将样式添加到被激活的元素</td></tr><tr><td>:focus</td><td style="text-align:center">将样式添加到获得焦点的元素</td></tr><tr><td>:link</td><td style="text-align:center">将样式添加到未被访问过的链接</td></tr><tr><td>:visited</td><td style="text-align:center">将样式添加到被访问过的链接</td></tr><tr><td>:first-child</td><td style="text-align:center">将样式添加到元素的第一个子元素</td></tr><tr><td>:lang</td><td style="text-align:center">定义指定的元素中使用的语言</td></tr></tbody></table></div><h2 id="CSS3-新增伪类"><a href="#CSS3-新增伪类" class="headerlink" title="CSS3 新增伪类"></a>CSS3 新增伪类</h2><div class="table-container"><table><thead><tr><th>伪类</th><th style="text-align:center">作用</th></tr></thead><tbody><tr><td>p:first-of-type</td><td style="text-align:center">选择属于其父元素的首个<p>元素的每个</p><p>元素</p></td></tr><tr><td>p:last-of-type</td><td style="text-align:center">选择属于其父元素的最后<p>元素的每个</p><p>元素</p></td></tr><tr><td>p:only-of-type</td><td style="text-align:center">选择属于其父元素唯一的<p>元素的每个</p><p>元素</p></td></tr><tr><td>p:only-child</td><td style="text-align:center">选择属于其父元素唯一的子元素的每个<p>元素</p></td></tr><tr><td>p:nth-child(n)</td><td style="text-align:center">选择属于其父元素的第n个子元素的每个<p>元素</p></td></tr><tr><td>p:nth-last-child(n)</td><td style="text-align:center">选择属于其父元素的倒数第n个子元素的每个<p>元素</p></td></tr><tr><td>p:nth-of-type(n)</td><td style="text-align:center">选择属于其父元素第n个<p>元素的每个</p><p>元素</p></td></tr><tr><td>p:nth-last-of-type(n)</td><td style="text-align:center">选择属于其父元素倒数第n个<p>元素的每个</p><p>元素</p></td></tr><tr><td>p:last-child</td><td style="text-align:center">选择属于其父元素最后一个子元素的每个<p>元素</p></td></tr><tr><td>p:empty</td><td style="text-align:center">选择没有子元素的每个<p>元素（包括文本节点）</p></td></tr><tr><td>p:target</td><td style="text-align:center">选择当前活动的<p>元素</p></td></tr><tr><td>:not(p)</td><td style="text-align:center">选择非<p>元素的每个元素</p></td></tr><tr><td>:enabled</td><td style="text-align:center">控制表单控件的可用状态</td></tr><tr><td>:disabled</td><td style="text-align:center">控制表单控件的禁用状态</td></tr><tr><td>:checked</td><td style="text-align:center">单选框或复选框被选中</td></tr></tbody></table></div>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 伪类 </tag>
            
            <tag> 伪元素 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS保持浮层水平垂直居中</title>
      <link href="/2019/12/09/CSS%E4%BF%9D%E6%8C%81%E6%B5%AE%E5%B1%82%E6%B0%B4%E5%B9%B3%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD/"/>
      <url>/2019/12/09/CSS%E4%BF%9D%E6%8C%81%E6%B5%AE%E5%B1%82%E6%B0%B4%E5%B9%B3%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>子绝父相：子元素绝对定位，父元素相对定位。让子元素 以其父元素为标准来定位。<br>如果父元素没有相对定位的话，子元素就会相对body或浏览器定位产生不好的效果。<br>在平常使保持浮层水平垂直居中，是我们经常遇到的一个问题，因浏览器版本或者元素的宽度、高度不确定等问题，往往需要使用不同的方式来应对。</p><h1 id="使用绝对定位和transform"><a href="#使用绝对定位和transform" class="headerlink" title="使用绝对定位和transform"></a>使用绝对定位和<code>transform</code></h1><p>如果不确定子元素的宽度高度下，可以使用此方法。不过<a href="https://www.w3school.com.cn/cssref/pr_transform.asp" target="_blank" rel="noopener"><code>transform (2D)</code></a>IE只有9或以上支持。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"parents"</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs html">    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"children"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.parent</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">position</span>: absolute;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#eee</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs css">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.parent</span> <span class="hljs-selector-class">.children</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">background</span>: black;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">height</span>: <span class="hljs-number">200px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">position</span>: absolute;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">top</span>: <span class="hljs-number">50%</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">left</span>: <span class="hljs-number">50%</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translate</span>(-50%, -50%);</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs css">&#125;</code></pre></td></tr></table></figure><h1 id="使用-FlexBox"><a href="#使用-FlexBox" class="headerlink" title="使用 FlexBox"></a>使用 <code>FlexBox</code></h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.parent</span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">display</span>:flex;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">justify-content</span>: center;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">align-items</span>: center;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#eee</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs css">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.parent</span> <span class="hljs-selector-class">.children</span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">background</span>:black;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">height</span>: <span class="hljs-number">200px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs css">&#125;</code></pre></td></tr></table></figure><h1 id="利用绝对定位和margin负值来实现"><a href="#利用绝对定位和margin负值来实现" class="headerlink" title="利用绝对定位和margin负值来实现"></a>利用绝对定位和<code>margin</code>负值来实现</h1><p>当子元素的宽高固定，父元素内含有除居中元素外其它元素（空标签也行）或者父元素的高度不为0时</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.parent</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">height</span>: <span class="hljs-number">400px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">position</span>: relative;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">background</span>: white;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs css">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs css"></code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.children</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">height</span>: <span class="hljs-number">200px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">margin</span>: -<span class="hljs-number">100px</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> -<span class="hljs-number">100px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">background</span>: black;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">position</span>: absolute;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">top</span>: <span class="hljs-number">50%</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">left</span>: <span class="hljs-number">50%</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs css">&#125;</code></pre></td></tr></table></figure><h1 id="利用绝对定位与-margin-auto"><a href="#利用绝对定位与-margin-auto" class="headerlink" title="利用绝对定位与 margin:auto"></a>利用绝对定位与 <code>margin:auto</code></h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.parent</span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">height</span>: <span class="hljs-number">600px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">background</span>: white;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">position</span>: relative;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs css">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.children</span>&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">background-color</span>: black;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">position</span>: absolute;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">top</span>: <span class="hljs-number">0</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">left</span>: <span class="hljs-number">0</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">bottom</span>: <span class="hljs-number">0</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">right</span>: <span class="hljs-number">0</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">margin</span>: auto;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><code class="hljs css">&#125;</code></pre></td></tr></table></figure><h1 id="通过verticle-align-middle实现"><a href="#通过verticle-align-middle实现" class="headerlink" title="通过verticle-align:middle实现"></a>通过<code>verticle-align:middle</code>实现</h1><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs css">.parent&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs css">    width: 100%;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs css">    height: 600px;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs css">    background: white;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs css">&#125;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs css">.children&#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs css">    width: 100px;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs css">    height: 100px;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><code class="hljs css">    background-color: black;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><code class="hljs css">    display: inline-block;      // 必须蒋元素设置未 inline-block</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><code class="hljs css">    vertical-align: middle;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><code class="hljs css">&#125;</code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 定位 </tag>
            
            <tag> 居中 </tag>
            
            <tag> Flex Box </tag>
            
            <tag> transform </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>相对定位与绝对定位</title>
      <link href="/2019/12/06/%E7%9B%B8%E5%AF%B9%E5%AE%9A%E4%BD%8D%E4%B8%8E%E7%BB%9D%E5%AF%B9%E5%AE%9A%E4%BD%8D/"/>
      <url>/2019/12/06/%E7%9B%B8%E5%AF%B9%E5%AE%9A%E4%BD%8D%E4%B8%8E%E7%BB%9D%E5%AF%B9%E5%AE%9A%E4%BD%8D/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="Position"><a href="#Position" class="headerlink" title="Position"></a>Position</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p><code>position</code> 属性规定元素的定位类型。<code>position</code> 具有五个值:</p><ol><li>absolute 绝对定位，相对于 static 定位以外的第一个父元素进行定位。</li><li>fixed 绝对定位，相对于浏览器窗口进行定位。  </li><li>relative 相对定位，相对于其现在的位置进行定位。  </li><li>static 默认值，不进行定位。</li><li>inherit 从父元素继承 <code>position</code> 属性的值。</li></ol><p><code>注意:</code> IE 浏览器都不支持 <code>inherit</code> 这个属性。</p><h2 id="绝对定位-absolute"><a href="#绝对定位-absolute" class="headerlink" title="绝对定位 absolute"></a>绝对定位 absolute</h2><p>绝对定位是相对于元素最近的已定位的父级元素。如果没有已定位的父级元素，那么它会一直往更上级寻找，直到最顶层 <code>body</code>。<br>绝对定位一但设置，就会脱离文档流。同时文档里就会将该元素的位置删除。所以该元素会覆盖在其他元素上，可以通过设置 <code>z-index</code> 属性来控制元素的层级。</p><p><code>注意:</code> absolute 会改变 <code>display</code> 的类型。当元素设置了绝对定位时，该元素将具有 <code>display:inline-block</code> 的属性，可以设置长宽，宽度不占满父元素。</p><h2 id="相对定位-relative"><a href="#相对定位-relative" class="headerlink" title="相对定位 relative"></a>相对定位 relative</h2><p>相对定位是相对于它本身在文档流的位置进行定位移动的，同时文档流保留了它原来的位置，会占据其他元素的位置。</p><h2 id="Fixed-定位"><a href="#Fixed-定位" class="headerlink" title="Fixed 定位"></a>Fixed 定位</h2><p><code>fixed</code> 定位的元素将相对于屏幕视口的位置定位。并且元素的位置不会在屏幕滚动时改变。同时 <code>fixed</code> 在某些情况下将失效，<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/position" target="_blank" rel="noopener">MDN</a> 有说明</p><blockquote><p> 当元素祖先的 transform  属性非 none 时，容器由视口改为该祖先。  </p></blockquote><p>此篇文章有详细说明  <a href="https://www.imooc.com/article/67784" target="_blank" rel="noopener">https://www.imooc.com/article/67784</a></p>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 相对定位 </tag>
            
            <tag> 绝对定位 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS盒子模型</title>
      <link href="/2019/12/06/CSS%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B/"/>
      <url>/2019/12/06/CSS%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="CSS-盒子模型"><a href="#CSS-盒子模型" class="headerlink" title="CSS 盒子模型"></a>CSS 盒子模型</h1><p>每个<code>HTML</code>元素都是盒子。</p><p><img src="/.io//post/boxmodel.png" srcset="/img/loading.gif" lazyload alt="盒子模型"></p><p>如图一个盒子的组成部分:</p><ul><li>Content(内容) - 盒子的内容，显示的文字和图片。</li><li>Padding(内边距) - 元素的内边距，内容周围的区域。</li><li>Border(边框) - 包裹内容与内边距的边框。</li><li>Margin(外边距) - 元素的外边距。</li></ul><h2 id="盒子模型计算公式"><a href="#盒子模型计算公式" class="headerlink" title="盒子模型计算公式"></a>盒子模型计算公式</h2><p>标准盒子模型：宽度=内容的宽度（content）+ border + padding + margin</p><p>低版本IE盒子模型：宽度=内容宽度（content+border+padding）+ margin</p><p>这里我们指定了一个<code>div</code>的内容区域宽度为<code>300px</code>,一个完整的元素大小还包括内边距、外边距、边框</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">border</span>: <span class="hljs-number">25px</span> solid red;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">padding</span>: <span class="hljs-number">25px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">margin</span>: <span class="hljs-number">25px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs css">&#125;</code></pre></td></tr></table></figure><p>总元素宽度为： 300px(内容宽度) + 50px(左 + 右padding) + 50px(左 + 右border) + 50px(左 + 右margin) = 450px</p><p>总元素高度为：42px(内容高度) + 50px(左 + 右padding) + 50px(左 + 右border) + 50px(左 + 右margin) = 192px</p><h1 id="box-sizing"><a href="#box-sizing" class="headerlink" title="box-sizing"></a>box-sizing</h1><p>用来控制元素的盒子模型的解析模式，默认为content-box</p><h2 id="context-box"><a href="#context-box" class="headerlink" title="context-box"></a>context-box</h2><p>W3C的标准盒子模型，设置元素的 height/width 属性指的是content部分的高/宽</p><h2 id="border-box"><a href="#border-box" class="headerlink" title="border-box"></a>border-box</h2><p>IE传统盒子模型。设置元素的height/width属性指的是border + padding + content部分的高/宽</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">background-color</span>: lightgrey;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">border</span>: <span class="hljs-number">25px</span> solid red;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">padding</span>: <span class="hljs-number">25px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-attribute">margin</span>: <span class="hljs-number">25px</span>;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">box-sizing</span>:border-box;</code></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><code class="hljs css">&#125;</code></pre></td></tr></table></figure><p><img src="/.io//post/boxsizing.png" srcset="/img/loading.gif" lazyload alt="盒子模型"></p><p>如图，我们设置了<code>box-sizing:border-box;</code>,内容的宽度变成了<code>200px</code>，高度变成了<code>63px</code>。</p><p>总元素宽度为：200px(content + padding + border) + 50px(左 + 右margin) = 300px</p><p>总元素高度为：63 px(content + padding + border) + 50px(左 + 右margin) = 163px</p>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 盒子模型 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
